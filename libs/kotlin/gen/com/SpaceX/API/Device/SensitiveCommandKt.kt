// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/device.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializesensitiveCommand")
public inline fun sensitiveCommand(block: com.SpaceX.API.Device.SensitiveCommandKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SensitiveCommand =
  com.SpaceX.API.Device.SensitiveCommandKt.Dsl._create(com.SpaceX.API.Device.SensitiveCommand.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.SensitiveCommand`
 */
public object SensitiveCommandKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.SensitiveCommand.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.SensitiveCommand.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.SensitiveCommand = _builder.build()

    /**
     * `.google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];`
     */
    public var timestamp: com.google.protobuf.Timestamp
      @JvmName("getTimestamp")
      get() = _builder.timestamp
      @JvmName("setTimestamp")
      set(value) {
        _builder.timestamp = value
      }
    /**
     * `.google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * `.google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];`
     * @return Whether the timestamp field is set.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }
    public val SensitiveCommandKt.Dsl.timestampOrNull: com.google.protobuf.Timestamp?
      get() = _builder.timestampOrNull

    /**
     * `string target_id = 2 [json_name = "targetId"];`
     */
    public var targetId: kotlin.String
      @JvmName("getTargetId")
      get() = _builder.targetId
      @JvmName("setTargetId")
      set(value) {
        _builder.targetId = value
      }
    /**
     * `string target_id = 2 [json_name = "targetId"];`
     */
    public fun clearTargetId() {
      _builder.clearTargetId()
    }

    /**
     * `.SpaceX.API.Device.GetLocationRequest get_location = 3 [json_name = "getLocation"];`
     */
    public var getLocation: com.SpaceX.API.Device.GetLocationRequest
      @JvmName("getGetLocation")
      get() = _builder.getLocation
      @JvmName("setGetLocation")
      set(value) {
        _builder.getLocation = value
      }
    /**
     * `.SpaceX.API.Device.GetLocationRequest get_location = 3 [json_name = "getLocation"];`
     */
    public fun clearGetLocation() {
      _builder.clearGetLocation()
    }
    /**
     * `.SpaceX.API.Device.GetLocationRequest get_location = 3 [json_name = "getLocation"];`
     * @return Whether the getLocation field is set.
     */
    public fun hasGetLocation(): kotlin.Boolean {
      return _builder.hasGetLocation()
    }
    public val requestCase: com.SpaceX.API.Device.SensitiveCommand.RequestCase
      @JvmName("getRequestCase")
      get() = _builder.getRequestCase()

    public fun clearRequest() {
      _builder.clearRequest()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.SensitiveCommand.copy(block: `com.SpaceX.API.Device`.SensitiveCommandKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SensitiveCommand =
  `com.SpaceX.API.Device`.SensitiveCommandKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.SpaceX.API.Device.SensitiveCommandOrBuilder.timestampOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimestamp()) getTimestamp() else null

public val com.SpaceX.API.Device.SensitiveCommandOrBuilder.getLocationOrNull: com.SpaceX.API.Device.GetLocationRequest?
  get() = if (hasGetLocation()) getGetLocation() else null


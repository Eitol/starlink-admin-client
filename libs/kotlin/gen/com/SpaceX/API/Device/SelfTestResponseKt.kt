// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/dish.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializeselfTestResponse")
public inline fun selfTestResponse(block: com.SpaceX.API.Device.SelfTestResponseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SelfTestResponse =
  com.SpaceX.API.Device.SelfTestResponseKt.Dsl._create(com.SpaceX.API.Device.SelfTestResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.SelfTestResponse`
 */
public object SelfTestResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.SelfTestResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.SelfTestResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.SelfTestResponse = _builder.build()

    /**
     * `bool passed = 1 [json_name = "passed"];`
     */
    public var passed: kotlin.Boolean
      @JvmName("getPassed")
      get() = _builder.passed
      @JvmName("setPassed")
      set(value) {
        _builder.passed = value
      }
    /**
     * `bool passed = 1 [json_name = "passed"];`
     */
    public fun clearPassed() {
      _builder.clearPassed()
    }

    /**
     * `string report = 2 [json_name = "report"];`
     */
    public var report: kotlin.String
      @JvmName("getReport")
      get() = _builder.report
      @JvmName("setReport")
      set(value) {
        _builder.report = value
      }
    /**
     * `string report = 2 [json_name = "report"];`
     */
    public fun clearReport() {
      _builder.clearReport()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.SelfTestResponse.copy(block: `com.SpaceX.API.Device`.SelfTestResponseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SelfTestResponse =
  `com.SpaceX.API.Device`.SelfTestResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/dish.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializedishAuthenticateResponse")
public inline fun dishAuthenticateResponse(block: com.SpaceX.API.Device.DishAuthenticateResponseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DishAuthenticateResponse =
  com.SpaceX.API.Device.DishAuthenticateResponseKt.Dsl._create(com.SpaceX.API.Device.DishAuthenticateResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.DishAuthenticateResponse`
 */
public object DishAuthenticateResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.DishAuthenticateResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.DishAuthenticateResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.DishAuthenticateResponse = _builder.build()

    /**
     * `.SpaceX.API.Device.ChallengeResponse dish = 2 [json_name = "dish"];`
     */
    public var dish: com.SpaceX.API.Device.ChallengeResponse
      @JvmName("getDish")
      get() = _builder.dish
      @JvmName("setDish")
      set(value) {
        _builder.dish = value
      }
    /**
     * `.SpaceX.API.Device.ChallengeResponse dish = 2 [json_name = "dish"];`
     */
    public fun clearDish() {
      _builder.clearDish()
    }
    /**
     * `.SpaceX.API.Device.ChallengeResponse dish = 2 [json_name = "dish"];`
     * @return Whether the dish field is set.
     */
    public fun hasDish(): kotlin.Boolean {
      return _builder.hasDish()
    }
    public val DishAuthenticateResponseKt.Dsl.dishOrNull: com.SpaceX.API.Device.ChallengeResponse?
      get() = _builder.dishOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.DishAuthenticateResponse.copy(block: `com.SpaceX.API.Device`.DishAuthenticateResponseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DishAuthenticateResponse =
  `com.SpaceX.API.Device`.DishAuthenticateResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.SpaceX.API.Device.DishAuthenticateResponseOrBuilder.dishOrNull: com.SpaceX.API.Device.ChallengeResponse?
  get() = if (hasDish()) getDish() else null


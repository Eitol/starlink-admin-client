// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializeradioStats")
public inline fun radioStats(block: com.SpaceX.API.Device.RadioStatsKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.RadioStats =
  com.SpaceX.API.Device.RadioStatsKt.Dsl._create(com.SpaceX.API.Device.RadioStats.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.RadioStats`
 */
public object RadioStatsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.RadioStats.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.RadioStats.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.RadioStats = _builder.build()

    /**
     * `.SpaceX.API.Device.WifiConfig.Band band = 1 [json_name = "band"];`
     */
    public var band: com.SpaceX.API.Device.WifiConfig.Band
      @JvmName("getBand")
      get() = _builder.band
      @JvmName("setBand")
      set(value) {
        _builder.band = value
      }
    public var bandValue: kotlin.Int
      @JvmName("getBandValue")
      get() = _builder.bandValue
      @JvmName("setBandValue")
      set(value) {
        _builder.bandValue = value
      }
    /**
     * `.SpaceX.API.Device.WifiConfig.Band band = 1 [json_name = "band"];`
     */
    public fun clearBand() {
      _builder.clearBand()
    }

    /**
     * `.SpaceX.API.Device.NetworkInterface.RxStats rx_stats = 2 [json_name = "rxStats"];`
     */
    public var rxStats: com.SpaceX.API.Device.NetworkInterface.RxStats
      @JvmName("getRxStats")
      get() = _builder.rxStats
      @JvmName("setRxStats")
      set(value) {
        _builder.rxStats = value
      }
    /**
     * `.SpaceX.API.Device.NetworkInterface.RxStats rx_stats = 2 [json_name = "rxStats"];`
     */
    public fun clearRxStats() {
      _builder.clearRxStats()
    }
    /**
     * `.SpaceX.API.Device.NetworkInterface.RxStats rx_stats = 2 [json_name = "rxStats"];`
     * @return Whether the rxStats field is set.
     */
    public fun hasRxStats(): kotlin.Boolean {
      return _builder.hasRxStats()
    }
    public val RadioStatsKt.Dsl.rxStatsOrNull: com.SpaceX.API.Device.NetworkInterface.RxStats?
      get() = _builder.rxStatsOrNull

    /**
     * `.SpaceX.API.Device.NetworkInterface.TxStats tx_stats = 3 [json_name = "txStats"];`
     */
    public var txStats: com.SpaceX.API.Device.NetworkInterface.TxStats
      @JvmName("getTxStats")
      get() = _builder.txStats
      @JvmName("setTxStats")
      set(value) {
        _builder.txStats = value
      }
    /**
     * `.SpaceX.API.Device.NetworkInterface.TxStats tx_stats = 3 [json_name = "txStats"];`
     */
    public fun clearTxStats() {
      _builder.clearTxStats()
    }
    /**
     * `.SpaceX.API.Device.NetworkInterface.TxStats tx_stats = 3 [json_name = "txStats"];`
     * @return Whether the txStats field is set.
     */
    public fun hasTxStats(): kotlin.Boolean {
      return _builder.hasTxStats()
    }
    public val RadioStatsKt.Dsl.txStatsOrNull: com.SpaceX.API.Device.NetworkInterface.TxStats?
      get() = _builder.txStatsOrNull

    /**
     * `.SpaceX.API.Device.RadioStats.ThermalStatus thermal_status = 4 [json_name = "thermalStatus"];`
     */
    public var thermalStatus: com.SpaceX.API.Device.RadioStats.ThermalStatus
      @JvmName("getThermalStatus")
      get() = _builder.thermalStatus
      @JvmName("setThermalStatus")
      set(value) {
        _builder.thermalStatus = value
      }
    /**
     * `.SpaceX.API.Device.RadioStats.ThermalStatus thermal_status = 4 [json_name = "thermalStatus"];`
     */
    public fun clearThermalStatus() {
      _builder.clearThermalStatus()
    }
    /**
     * `.SpaceX.API.Device.RadioStats.ThermalStatus thermal_status = 4 [json_name = "thermalStatus"];`
     * @return Whether the thermalStatus field is set.
     */
    public fun hasThermalStatus(): kotlin.Boolean {
      return _builder.hasThermalStatus()
    }
    public val RadioStatsKt.Dsl.thermalStatusOrNull: com.SpaceX.API.Device.RadioStats.ThermalStatus?
      get() = _builder.thermalStatusOrNull

    /**
     * `.SpaceX.API.Device.RadioStats.AntennaStatus antenna_status = 5 [json_name = "antennaStatus"];`
     */
    public var antennaStatus: com.SpaceX.API.Device.RadioStats.AntennaStatus
      @JvmName("getAntennaStatus")
      get() = _builder.antennaStatus
      @JvmName("setAntennaStatus")
      set(value) {
        _builder.antennaStatus = value
      }
    /**
     * `.SpaceX.API.Device.RadioStats.AntennaStatus antenna_status = 5 [json_name = "antennaStatus"];`
     */
    public fun clearAntennaStatus() {
      _builder.clearAntennaStatus()
    }
    /**
     * `.SpaceX.API.Device.RadioStats.AntennaStatus antenna_status = 5 [json_name = "antennaStatus"];`
     * @return Whether the antennaStatus field is set.
     */
    public fun hasAntennaStatus(): kotlin.Boolean {
      return _builder.hasAntennaStatus()
    }
    public val RadioStatsKt.Dsl.antennaStatusOrNull: com.SpaceX.API.Device.RadioStats.AntennaStatus?
      get() = _builder.antennaStatusOrNull
  }
  @kotlin.jvm.JvmName("-initializethermalStatus")
  public inline fun thermalStatus(block: com.SpaceX.API.Device.RadioStatsKt.ThermalStatusKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.RadioStats.ThermalStatus =
    com.SpaceX.API.Device.RadioStatsKt.ThermalStatusKt.Dsl._create(com.SpaceX.API.Device.RadioStats.ThermalStatus.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `SpaceX.API.Device.RadioStats.ThermalStatus`
   */
  public object ThermalStatusKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.SpaceX.API.Device.RadioStats.ThermalStatus.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.SpaceX.API.Device.RadioStats.ThermalStatus.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.SpaceX.API.Device.RadioStats.ThermalStatus = _builder.build()

      /**
       * `uint32 level = 1 [json_name = "level"];`
       */
      public var level: kotlin.Int
        @JvmName("getLevel")
        get() = _builder.level
        @JvmName("setLevel")
        set(value) {
          _builder.level = value
        }
      /**
       * `uint32 level = 1 [json_name = "level"];`
       */
      public fun clearLevel() {
        _builder.clearLevel()
      }

      /**
       * `uint32 temp = 2 [json_name = "temp", deprecated = true];`
       */
      @kotlin.Deprecated(message = "Field temp is deprecated") public var temp: kotlin.Int
        @JvmName("getTemp")
        get() = _builder.temp
        @JvmName("setTemp")
        set(value) {
          _builder.temp = value
        }
      /**
       * `uint32 temp = 2 [json_name = "temp", deprecated = true];`
       */
      public fun clearTemp() {
        _builder.clearTemp()
      }

      /**
       * `double temp2 = 3 [json_name = "temp2"];`
       */
      public var temp2: kotlin.Double
        @JvmName("getTemp2")
        get() = _builder.temp2
        @JvmName("setTemp2")
        set(value) {
          _builder.temp2 = value
        }
      /**
       * `double temp2 = 3 [json_name = "temp2"];`
       */
      public fun clearTemp2() {
        _builder.clearTemp2()
      }

      /**
       * `uint32 power_reduction = 4 [json_name = "powerReduction"];`
       */
      public var powerReduction: kotlin.Int
        @JvmName("getPowerReduction")
        get() = _builder.powerReduction
        @JvmName("setPowerReduction")
        set(value) {
          _builder.powerReduction = value
        }
      /**
       * `uint32 power_reduction = 4 [json_name = "powerReduction"];`
       */
      public fun clearPowerReduction() {
        _builder.clearPowerReduction()
      }

      /**
       * `uint32 duty_cycle = 5 [json_name = "dutyCycle"];`
       */
      public var dutyCycle: kotlin.Int
        @JvmName("getDutyCycle")
        get() = _builder.dutyCycle
        @JvmName("setDutyCycle")
        set(value) {
          _builder.dutyCycle = value
        }
      /**
       * `uint32 duty_cycle = 5 [json_name = "dutyCycle"];`
       */
      public fun clearDutyCycle() {
        _builder.clearDutyCycle()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeantennaStatus")
  public inline fun antennaStatus(block: com.SpaceX.API.Device.RadioStatsKt.AntennaStatusKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.RadioStats.AntennaStatus =
    com.SpaceX.API.Device.RadioStatsKt.AntennaStatusKt.Dsl._create(com.SpaceX.API.Device.RadioStats.AntennaStatus.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `SpaceX.API.Device.RadioStats.AntennaStatus`
   */
  public object AntennaStatusKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.SpaceX.API.Device.RadioStats.AntennaStatus.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.SpaceX.API.Device.RadioStats.AntennaStatus.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.SpaceX.API.Device.RadioStats.AntennaStatus = _builder.build()

      /**
       * `float rssi1 = 1 [json_name = "rssi1"];`
       */
      public var rssi1: kotlin.Float
        @JvmName("getRssi1")
        get() = _builder.rssi1
        @JvmName("setRssi1")
        set(value) {
          _builder.rssi1 = value
        }
      /**
       * `float rssi1 = 1 [json_name = "rssi1"];`
       */
      public fun clearRssi1() {
        _builder.clearRssi1()
      }

      /**
       * `float rssi2 = 2 [json_name = "rssi2"];`
       */
      public var rssi2: kotlin.Float
        @JvmName("getRssi2")
        get() = _builder.rssi2
        @JvmName("setRssi2")
        set(value) {
          _builder.rssi2 = value
        }
      /**
       * `float rssi2 = 2 [json_name = "rssi2"];`
       */
      public fun clearRssi2() {
        _builder.clearRssi2()
      }

      /**
       * `float rssi3 = 3 [json_name = "rssi3"];`
       */
      public var rssi3: kotlin.Float
        @JvmName("getRssi3")
        get() = _builder.rssi3
        @JvmName("setRssi3")
        set(value) {
          _builder.rssi3 = value
        }
      /**
       * `float rssi3 = 3 [json_name = "rssi3"];`
       */
      public fun clearRssi3() {
        _builder.clearRssi3()
      }

      /**
       * `float rssi4 = 4 [json_name = "rssi4"];`
       */
      public var rssi4: kotlin.Float
        @JvmName("getRssi4")
        get() = _builder.rssi4
        @JvmName("setRssi4")
        set(value) {
          _builder.rssi4 = value
        }
      /**
       * `float rssi4 = 4 [json_name = "rssi4"];`
       */
      public fun clearRssi4() {
        _builder.clearRssi4()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.RadioStats.copy(block: `com.SpaceX.API.Device`.RadioStatsKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.RadioStats =
  `com.SpaceX.API.Device`.RadioStatsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.RadioStats.ThermalStatus.copy(block: `com.SpaceX.API.Device`.RadioStatsKt.ThermalStatusKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.RadioStats.ThermalStatus =
  `com.SpaceX.API.Device`.RadioStatsKt.ThermalStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.RadioStats.AntennaStatus.copy(block: `com.SpaceX.API.Device`.RadioStatsKt.AntennaStatusKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.RadioStats.AntennaStatus =
  `com.SpaceX.API.Device`.RadioStatsKt.AntennaStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.SpaceX.API.Device.RadioStatsOrBuilder.rxStatsOrNull: com.SpaceX.API.Device.NetworkInterface.RxStats?
  get() = if (hasRxStats()) getRxStats() else null

public val com.SpaceX.API.Device.RadioStatsOrBuilder.txStatsOrNull: com.SpaceX.API.Device.NetworkInterface.TxStats?
  get() = if (hasTxStats()) getTxStats() else null

public val com.SpaceX.API.Device.RadioStatsOrBuilder.thermalStatusOrNull: com.SpaceX.API.Device.RadioStats.ThermalStatus?
  get() = if (hasThermalStatus()) getThermalStatus() else null

public val com.SpaceX.API.Device.RadioStatsOrBuilder.antennaStatusOrNull: com.SpaceX.API.Device.RadioStats.AntennaStatus?
  get() = if (hasAntennaStatus()) getAntennaStatus() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/device.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializepingHostRequest")
public inline fun pingHostRequest(block: com.SpaceX.API.Device.PingHostRequestKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.PingHostRequest =
  com.SpaceX.API.Device.PingHostRequestKt.Dsl._create(com.SpaceX.API.Device.PingHostRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.PingHostRequest`
 */
public object PingHostRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.PingHostRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.PingHostRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.PingHostRequest = _builder.build()

    /**
     * `string address = 3 [json_name = "address"];`
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.address
      @JvmName("setAddress")
      set(value) {
        _builder.address = value
      }
    /**
     * `string address = 3 [json_name = "address"];`
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * `uint32 size = 4 [json_name = "size"];`
     */
    public var size: kotlin.Int
      @JvmName("getSize")
      get() = _builder.size
      @JvmName("setSize")
      set(value) {
        _builder.size = value
      }
    /**
     * `uint32 size = 4 [json_name = "size"];`
     */
    public fun clearSize() {
      _builder.clearSize()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.PingHostRequest.copy(block: `com.SpaceX.API.Device`.PingHostRequestKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.PingHostRequest =
  `com.SpaceX.API.Device`.PingHostRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/device.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializespeedTestResponse")
public inline fun speedTestResponse(block: com.SpaceX.API.Device.SpeedTestResponseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SpeedTestResponse =
  com.SpaceX.API.Device.SpeedTestResponseKt.Dsl._create(com.SpaceX.API.Device.SpeedTestResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.SpeedTestResponse`
 */
public object SpeedTestResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.SpeedTestResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.SpeedTestResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.SpeedTestResponse = _builder.build()

    /**
     * `float download_bps = 1 [json_name = "downloadBps", deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field downloadBps is deprecated") public var downloadBps: kotlin.Float
      @JvmName("getDownloadBps")
      get() = _builder.downloadBps
      @JvmName("setDownloadBps")
      set(value) {
        _builder.downloadBps = value
      }
    /**
     * `float download_bps = 1 [json_name = "downloadBps", deprecated = true];`
     */
    public fun clearDownloadBps() {
      _builder.clearDownloadBps()
    }

    /**
     * `float upload_bps = 2 [json_name = "uploadBps", deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field uploadBps is deprecated") public var uploadBps: kotlin.Float
      @JvmName("getUploadBps")
      get() = _builder.uploadBps
      @JvmName("setUploadBps")
      set(value) {
        _builder.uploadBps = value
      }
    /**
     * `float upload_bps = 2 [json_name = "uploadBps", deprecated = true];`
     */
    public fun clearUploadBps() {
      _builder.clearUploadBps()
    }

    /**
     * `float latency_s = 3 [json_name = "latencyS", deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field latencyS is deprecated") public var latencyS: kotlin.Float
      @JvmName("getLatencyS")
      get() = _builder.latencyS
      @JvmName("setLatencyS")
      set(value) {
        _builder.latencyS = value
      }
    /**
     * `float latency_s = 3 [json_name = "latencyS", deprecated = true];`
     */
    public fun clearLatencyS() {
      _builder.clearLatencyS()
    }

    /**
     * `float download_mbps = 4 [json_name = "downloadMbps", deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field downloadMbps is deprecated") public var downloadMbps: kotlin.Float
      @JvmName("getDownloadMbps")
      get() = _builder.downloadMbps
      @JvmName("setDownloadMbps")
      set(value) {
        _builder.downloadMbps = value
      }
    /**
     * `float download_mbps = 4 [json_name = "downloadMbps", deprecated = true];`
     */
    public fun clearDownloadMbps() {
      _builder.clearDownloadMbps()
    }

    /**
     * `float upload_mbps = 5 [json_name = "uploadMbps", deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field uploadMbps is deprecated") public var uploadMbps: kotlin.Float
      @JvmName("getUploadMbps")
      get() = _builder.uploadMbps
      @JvmName("setUploadMbps")
      set(value) {
        _builder.uploadMbps = value
      }
    /**
     * `float upload_mbps = 5 [json_name = "uploadMbps", deprecated = true];`
     */
    public fun clearUploadMbps() {
      _builder.clearUploadMbps()
    }

    /**
     * `float latency_ms = 6 [json_name = "latencyMs", deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field latencyMs is deprecated") public var latencyMs: kotlin.Float
      @JvmName("getLatencyMs")
      get() = _builder.latencyMs
      @JvmName("setLatencyMs")
      set(value) {
        _builder.latencyMs = value
      }
    /**
     * `float latency_ms = 6 [json_name = "latencyMs", deprecated = true];`
     */
    public fun clearLatencyMs() {
      _builder.clearLatencyMs()
    }

    /**
     * `.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];`
     */
    public var routerSpeedtest: com.SpaceX.API.Device.SpeedTestStats
      @JvmName("getRouterSpeedtest")
      get() = _builder.routerSpeedtest
      @JvmName("setRouterSpeedtest")
      set(value) {
        _builder.routerSpeedtest = value
      }
    /**
     * `.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];`
     */
    public fun clearRouterSpeedtest() {
      _builder.clearRouterSpeedtest()
    }
    /**
     * `.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];`
     * @return Whether the routerSpeedtest field is set.
     */
    public fun hasRouterSpeedtest(): kotlin.Boolean {
      return _builder.hasRouterSpeedtest()
    }
    public val SpeedTestResponseKt.Dsl.routerSpeedtestOrNull: com.SpaceX.API.Device.SpeedTestStats?
      get() = _builder.routerSpeedtestOrNull

    /**
     * `float download_mbps_1_tcp_conn = 7 [json_name = "downloadMbps1TcpConn"];`
     */
    public var downloadMbps1TcpConn: kotlin.Float
      @JvmName("getDownloadMbps1TcpConn")
      get() = _builder.downloadMbps1TcpConn
      @JvmName("setDownloadMbps1TcpConn")
      set(value) {
        _builder.downloadMbps1TcpConn = value
      }
    /**
     * `float download_mbps_1_tcp_conn = 7 [json_name = "downloadMbps1TcpConn"];`
     */
    public fun clearDownloadMbps1TcpConn() {
      _builder.clearDownloadMbps1TcpConn()
    }

    /**
     * `float upload_mbps_1_tcp_conn = 8 [json_name = "uploadMbps1TcpConn"];`
     */
    public var uploadMbps1TcpConn: kotlin.Float
      @JvmName("getUploadMbps1TcpConn")
      get() = _builder.uploadMbps1TcpConn
      @JvmName("setUploadMbps1TcpConn")
      set(value) {
        _builder.uploadMbps1TcpConn = value
      }
    /**
     * `float upload_mbps_1_tcp_conn = 8 [json_name = "uploadMbps1TcpConn"];`
     */
    public fun clearUploadMbps1TcpConn() {
      _builder.clearUploadMbps1TcpConn()
    }

    /**
     * `float download_mbps_4_tcp_conn = 9 [json_name = "downloadMbps4TcpConn"];`
     */
    public var downloadMbps4TcpConn: kotlin.Float
      @JvmName("getDownloadMbps4TcpConn")
      get() = _builder.downloadMbps4TcpConn
      @JvmName("setDownloadMbps4TcpConn")
      set(value) {
        _builder.downloadMbps4TcpConn = value
      }
    /**
     * `float download_mbps_4_tcp_conn = 9 [json_name = "downloadMbps4TcpConn"];`
     */
    public fun clearDownloadMbps4TcpConn() {
      _builder.clearDownloadMbps4TcpConn()
    }

    /**
     * `float upload_mbps_4_tcp_conn = 10 [json_name = "uploadMbps4TcpConn"];`
     */
    public var uploadMbps4TcpConn: kotlin.Float
      @JvmName("getUploadMbps4TcpConn")
      get() = _builder.uploadMbps4TcpConn
      @JvmName("setUploadMbps4TcpConn")
      set(value) {
        _builder.uploadMbps4TcpConn = value
      }
    /**
     * `float upload_mbps_4_tcp_conn = 10 [json_name = "uploadMbps4TcpConn"];`
     */
    public fun clearUploadMbps4TcpConn() {
      _builder.clearUploadMbps4TcpConn()
    }

    /**
     * `float download_mbps_16_tcp_conn = 11 [json_name = "downloadMbps16TcpConn"];`
     */
    public var downloadMbps16TcpConn: kotlin.Float
      @JvmName("getDownloadMbps16TcpConn")
      get() = _builder.downloadMbps16TcpConn
      @JvmName("setDownloadMbps16TcpConn")
      set(value) {
        _builder.downloadMbps16TcpConn = value
      }
    /**
     * `float download_mbps_16_tcp_conn = 11 [json_name = "downloadMbps16TcpConn"];`
     */
    public fun clearDownloadMbps16TcpConn() {
      _builder.clearDownloadMbps16TcpConn()
    }

    /**
     * `float upload_mbps_16_tcp_conn = 12 [json_name = "uploadMbps16TcpConn"];`
     */
    public var uploadMbps16TcpConn: kotlin.Float
      @JvmName("getUploadMbps16TcpConn")
      get() = _builder.uploadMbps16TcpConn
      @JvmName("setUploadMbps16TcpConn")
      set(value) {
        _builder.uploadMbps16TcpConn = value
      }
    /**
     * `float upload_mbps_16_tcp_conn = 12 [json_name = "uploadMbps16TcpConn"];`
     */
    public fun clearUploadMbps16TcpConn() {
      _builder.clearUploadMbps16TcpConn()
    }

    /**
     * `float download_mbps_64_tcp_conn = 13 [json_name = "downloadMbps64TcpConn"];`
     */
    public var downloadMbps64TcpConn: kotlin.Float
      @JvmName("getDownloadMbps64TcpConn")
      get() = _builder.downloadMbps64TcpConn
      @JvmName("setDownloadMbps64TcpConn")
      set(value) {
        _builder.downloadMbps64TcpConn = value
      }
    /**
     * `float download_mbps_64_tcp_conn = 13 [json_name = "downloadMbps64TcpConn"];`
     */
    public fun clearDownloadMbps64TcpConn() {
      _builder.clearDownloadMbps64TcpConn()
    }

    /**
     * `float upload_mbps_64_tcp_conn = 14 [json_name = "uploadMbps64TcpConn"];`
     */
    public var uploadMbps64TcpConn: kotlin.Float
      @JvmName("getUploadMbps64TcpConn")
      get() = _builder.uploadMbps64TcpConn
      @JvmName("setUploadMbps64TcpConn")
      set(value) {
        _builder.uploadMbps64TcpConn = value
      }
    /**
     * `float upload_mbps_64_tcp_conn = 14 [json_name = "uploadMbps64TcpConn"];`
     */
    public fun clearUploadMbps64TcpConn() {
      _builder.clearUploadMbps64TcpConn()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.SpeedTestResponse.copy(block: `com.SpaceX.API.Device`.SpeedTestResponseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SpeedTestResponse =
  `com.SpaceX.API.Device`.SpeedTestResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.SpaceX.API.Device.SpeedTestResponseOrBuilder.routerSpeedtestOrNull: com.SpaceX.API.Device.SpeedTestStats?
  get() = if (hasRouterSpeedtest()) getRouterSpeedtest() else null


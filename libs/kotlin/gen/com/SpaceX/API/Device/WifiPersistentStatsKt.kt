// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializewifiPersistentStats")
public inline fun wifiPersistentStats(block: com.SpaceX.API.Device.WifiPersistentStatsKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiPersistentStats =
  com.SpaceX.API.Device.WifiPersistentStatsKt.Dsl._create(com.SpaceX.API.Device.WifiPersistentStats.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.WifiPersistentStats`
 */
public object WifiPersistentStatsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.WifiPersistentStats.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.WifiPersistentStats.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.WifiPersistentStats = _builder.build()

    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_button = 1 [json_name = "factoryResetButton"];`
     */
    public var factoryResetButton: com.SpaceX.API.Device.WifiPersistentStats.Event
      @JvmName("getFactoryResetButton")
      get() = _builder.factoryResetButton
      @JvmName("setFactoryResetButton")
      set(value) {
        _builder.factoryResetButton = value
      }
    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_button = 1 [json_name = "factoryResetButton"];`
     */
    public fun clearFactoryResetButton() {
      _builder.clearFactoryResetButton()
    }
    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_button = 1 [json_name = "factoryResetButton"];`
     * @return Whether the factoryResetButton field is set.
     */
    public fun hasFactoryResetButton(): kotlin.Boolean {
      return _builder.hasFactoryResetButton()
    }
    public val WifiPersistentStatsKt.Dsl.factoryResetButtonOrNull: com.SpaceX.API.Device.WifiPersistentStats.Event?
      get() = _builder.factoryResetButtonOrNull

    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_plug_unplug = 2 [json_name = "factoryResetPlugUnplug"];`
     */
    public var factoryResetPlugUnplug: com.SpaceX.API.Device.WifiPersistentStats.Event
      @JvmName("getFactoryResetPlugUnplug")
      get() = _builder.factoryResetPlugUnplug
      @JvmName("setFactoryResetPlugUnplug")
      set(value) {
        _builder.factoryResetPlugUnplug = value
      }
    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_plug_unplug = 2 [json_name = "factoryResetPlugUnplug"];`
     */
    public fun clearFactoryResetPlugUnplug() {
      _builder.clearFactoryResetPlugUnplug()
    }
    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_plug_unplug = 2 [json_name = "factoryResetPlugUnplug"];`
     * @return Whether the factoryResetPlugUnplug field is set.
     */
    public fun hasFactoryResetPlugUnplug(): kotlin.Boolean {
      return _builder.hasFactoryResetPlugUnplug()
    }
    public val WifiPersistentStatsKt.Dsl.factoryResetPlugUnplugOrNull: com.SpaceX.API.Device.WifiPersistentStats.Event?
      get() = _builder.factoryResetPlugUnplugOrNull

    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_command = 3 [json_name = "factoryResetCommand"];`
     */
    public var factoryResetCommand: com.SpaceX.API.Device.WifiPersistentStats.Event
      @JvmName("getFactoryResetCommand")
      get() = _builder.factoryResetCommand
      @JvmName("setFactoryResetCommand")
      set(value) {
        _builder.factoryResetCommand = value
      }
    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_command = 3 [json_name = "factoryResetCommand"];`
     */
    public fun clearFactoryResetCommand() {
      _builder.clearFactoryResetCommand()
    }
    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_command = 3 [json_name = "factoryResetCommand"];`
     * @return Whether the factoryResetCommand field is set.
     */
    public fun hasFactoryResetCommand(): kotlin.Boolean {
      return _builder.hasFactoryResetCommand()
    }
    public val WifiPersistentStatsKt.Dsl.factoryResetCommandOrNull: com.SpaceX.API.Device.WifiPersistentStats.Event?
      get() = _builder.factoryResetCommandOrNull

    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_failed_load_wifi_config = 4 [json_name = "factoryResetFailedLoadWifiConfig"];`
     */
    public var factoryResetFailedLoadWifiConfig: com.SpaceX.API.Device.WifiPersistentStats.Event
      @JvmName("getFactoryResetFailedLoadWifiConfig")
      get() = _builder.factoryResetFailedLoadWifiConfig
      @JvmName("setFactoryResetFailedLoadWifiConfig")
      set(value) {
        _builder.factoryResetFailedLoadWifiConfig = value
      }
    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_failed_load_wifi_config = 4 [json_name = "factoryResetFailedLoadWifiConfig"];`
     */
    public fun clearFactoryResetFailedLoadWifiConfig() {
      _builder.clearFactoryResetFailedLoadWifiConfig()
    }
    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event factory_reset_failed_load_wifi_config = 4 [json_name = "factoryResetFailedLoadWifiConfig"];`
     * @return Whether the factoryResetFailedLoadWifiConfig field is set.
     */
    public fun hasFactoryResetFailedLoadWifiConfig(): kotlin.Boolean {
      return _builder.hasFactoryResetFailedLoadWifiConfig()
    }
    public val WifiPersistentStatsKt.Dsl.factoryResetFailedLoadWifiConfigOrNull: com.SpaceX.API.Device.WifiPersistentStats.Event?
      get() = _builder.factoryResetFailedLoadWifiConfigOrNull

    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event reboot_from_software_update = 5 [json_name = "rebootFromSoftwareUpdate"];`
     */
    public var rebootFromSoftwareUpdate: com.SpaceX.API.Device.WifiPersistentStats.Event
      @JvmName("getRebootFromSoftwareUpdate")
      get() = _builder.rebootFromSoftwareUpdate
      @JvmName("setRebootFromSoftwareUpdate")
      set(value) {
        _builder.rebootFromSoftwareUpdate = value
      }
    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event reboot_from_software_update = 5 [json_name = "rebootFromSoftwareUpdate"];`
     */
    public fun clearRebootFromSoftwareUpdate() {
      _builder.clearRebootFromSoftwareUpdate()
    }
    /**
     * `.SpaceX.API.Device.WifiPersistentStats.Event reboot_from_software_update = 5 [json_name = "rebootFromSoftwareUpdate"];`
     * @return Whether the rebootFromSoftwareUpdate field is set.
     */
    public fun hasRebootFromSoftwareUpdate(): kotlin.Boolean {
      return _builder.hasRebootFromSoftwareUpdate()
    }
    public val WifiPersistentStatsKt.Dsl.rebootFromSoftwareUpdateOrNull: com.SpaceX.API.Device.WifiPersistentStats.Event?
      get() = _builder.rebootFromSoftwareUpdateOrNull
  }
  @kotlin.jvm.JvmName("-initializeevent")
  public inline fun event(block: com.SpaceX.API.Device.WifiPersistentStatsKt.EventKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiPersistentStats.Event =
    com.SpaceX.API.Device.WifiPersistentStatsKt.EventKt.Dsl._create(com.SpaceX.API.Device.WifiPersistentStats.Event.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `SpaceX.API.Device.WifiPersistentStats.Event`
   */
  public object EventKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.SpaceX.API.Device.WifiPersistentStats.Event.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.SpaceX.API.Device.WifiPersistentStats.Event.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.SpaceX.API.Device.WifiPersistentStats.Event = _builder.build()

      /**
       * `uint32 count = 1 [json_name = "count"];`
       */
      public var count: kotlin.Int
        @JvmName("getCount")
        get() = _builder.count
        @JvmName("setCount")
        set(value) {
          _builder.count = value
        }
      /**
       * `uint32 count = 1 [json_name = "count"];`
       */
      public fun clearCount() {
        _builder.clearCount()
      }

      /**
       * `int64 last_occurred_timestamp = 2 [json_name = "lastOccurredTimestamp"];`
       */
      public var lastOccurredTimestamp: kotlin.Long
        @JvmName("getLastOccurredTimestamp")
        get() = _builder.lastOccurredTimestamp
        @JvmName("setLastOccurredTimestamp")
        set(value) {
          _builder.lastOccurredTimestamp = value
        }
      /**
       * `int64 last_occurred_timestamp = 2 [json_name = "lastOccurredTimestamp"];`
       */
      public fun clearLastOccurredTimestamp() {
        _builder.clearLastOccurredTimestamp()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.WifiPersistentStats.copy(block: `com.SpaceX.API.Device`.WifiPersistentStatsKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiPersistentStats =
  `com.SpaceX.API.Device`.WifiPersistentStatsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.WifiPersistentStats.Event.copy(block: `com.SpaceX.API.Device`.WifiPersistentStatsKt.EventKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiPersistentStats.Event =
  `com.SpaceX.API.Device`.WifiPersistentStatsKt.EventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.SpaceX.API.Device.WifiPersistentStatsOrBuilder.factoryResetButtonOrNull: com.SpaceX.API.Device.WifiPersistentStats.Event?
  get() = if (hasFactoryResetButton()) getFactoryResetButton() else null

public val com.SpaceX.API.Device.WifiPersistentStatsOrBuilder.factoryResetPlugUnplugOrNull: com.SpaceX.API.Device.WifiPersistentStats.Event?
  get() = if (hasFactoryResetPlugUnplug()) getFactoryResetPlugUnplug() else null

public val com.SpaceX.API.Device.WifiPersistentStatsOrBuilder.factoryResetCommandOrNull: com.SpaceX.API.Device.WifiPersistentStats.Event?
  get() = if (hasFactoryResetCommand()) getFactoryResetCommand() else null

public val com.SpaceX.API.Device.WifiPersistentStatsOrBuilder.factoryResetFailedLoadWifiConfigOrNull: com.SpaceX.API.Device.WifiPersistentStats.Event?
  get() = if (hasFactoryResetFailedLoadWifiConfig()) getFactoryResetFailedLoadWifiConfig() else null

public val com.SpaceX.API.Device.WifiPersistentStatsOrBuilder.rebootFromSoftwareUpdateOrNull: com.SpaceX.API.Device.WifiPersistentStats.Event?
  get() = if (hasRebootFromSoftwareUpdate()) getRebootFromSoftwareUpdate() else null


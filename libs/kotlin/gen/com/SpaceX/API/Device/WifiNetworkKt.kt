// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializewifiNetwork")
public inline fun wifiNetwork(block: com.SpaceX.API.Device.WifiNetworkKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiNetwork =
  com.SpaceX.API.Device.WifiNetworkKt.Dsl._create(com.SpaceX.API.Device.WifiNetwork.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.WifiNetwork`
 */
public object WifiNetworkKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.WifiNetwork.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.WifiNetwork.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.WifiNetwork = _builder.build()

    /**
     * `.SpaceX.API.Device.WifiNetwork.Band band = 1 [json_name = "band"];`
     */
    public var band: com.SpaceX.API.Device.WifiNetwork.Band
      @JvmName("getBand")
      get() = _builder.band
      @JvmName("setBand")
      set(value) {
        _builder.band = value
      }
    public var bandValue: kotlin.Int
      @JvmName("getBandValue")
      get() = _builder.bandValue
      @JvmName("setBandValue")
      set(value) {
        _builder.bandValue = value
      }
    /**
     * `.SpaceX.API.Device.WifiNetwork.Band band = 1 [json_name = "band"];`
     */
    public fun clearBand() {
      _builder.clearBand()
    }

    /**
     * `string ssid = 2 [json_name = "ssid"];`
     */
    public var ssid: kotlin.String
      @JvmName("getSsid")
      get() = _builder.ssid
      @JvmName("setSsid")
      set(value) {
        _builder.ssid = value
      }
    /**
     * `string ssid = 2 [json_name = "ssid"];`
     */
    public fun clearSsid() {
      _builder.clearSsid()
    }

    /**
     * `uint32 channel = 3 [json_name = "channel"];`
     */
    public var channel: kotlin.Int
      @JvmName("getChannel")
      get() = _builder.channel
      @JvmName("setChannel")
      set(value) {
        _builder.channel = value
      }
    /**
     * `uint32 channel = 3 [json_name = "channel"];`
     */
    public fun clearChannel() {
      _builder.clearChannel()
    }

    /**
     * `string encryption_type_str = 4 [json_name = "encryptionTypeStr"];`
     */
    public var encryptionTypeStr: kotlin.String
      @JvmName("getEncryptionTypeStr")
      get() = _builder.encryptionTypeStr
      @JvmName("setEncryptionTypeStr")
      set(value) {
        _builder.encryptionTypeStr = value
      }
    /**
     * `string encryption_type_str = 4 [json_name = "encryptionTypeStr"];`
     */
    public fun clearEncryptionTypeStr() {
      _builder.clearEncryptionTypeStr()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.WifiNetwork.copy(block: `com.SpaceX.API.Device`.WifiNetworkKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiNetwork =
  `com.SpaceX.API.Device`.WifiNetworkKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi_util.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializedhcpServer")
public inline fun dhcpServer(block: com.SpaceX.API.Device.DhcpServerKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DhcpServer =
  com.SpaceX.API.Device.DhcpServerKt.Dsl._create(com.SpaceX.API.Device.DhcpServer.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.DhcpServer`
 */
public object DhcpServerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.DhcpServer.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.DhcpServer.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.DhcpServer = _builder.build()

    /**
     * `string domain = 1 [json_name = "domain"];`
     */
    public var domain: kotlin.String
      @JvmName("getDomain")
      get() = _builder.domain
      @JvmName("setDomain")
      set(value) {
        _builder.domain = value
      }
    /**
     * `string domain = 1 [json_name = "domain"];`
     */
    public fun clearDomain() {
      _builder.clearDomain()
    }

    /**
     * `string subnet = 2 [json_name = "subnet"];`
     */
    public var subnet: kotlin.String
      @JvmName("getSubnet")
      get() = _builder.subnet
      @JvmName("setSubnet")
      set(value) {
        _builder.subnet = value
      }
    /**
     * `string subnet = 2 [json_name = "subnet"];`
     */
    public fun clearSubnet() {
      _builder.clearSubnet()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LeasesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .SpaceX.API.Device.DhcpLease leases = 3 [json_name = "leases"];`
     */
     public val leases: com.google.protobuf.kotlin.DslList<com.SpaceX.API.Device.DhcpLease, LeasesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.leasesList
      )
    /**
     * `repeated .SpaceX.API.Device.DhcpLease leases = 3 [json_name = "leases"];`
     * @param value The leases to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLeases")
    public fun com.google.protobuf.kotlin.DslList<com.SpaceX.API.Device.DhcpLease, LeasesProxy>.add(value: com.SpaceX.API.Device.DhcpLease) {
      _builder.addLeases(value)
    }
    /**
     * `repeated .SpaceX.API.Device.DhcpLease leases = 3 [json_name = "leases"];`
     * @param value The leases to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLeases")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.SpaceX.API.Device.DhcpLease, LeasesProxy>.plusAssign(value: com.SpaceX.API.Device.DhcpLease) {
      add(value)
    }
    /**
     * `repeated .SpaceX.API.Device.DhcpLease leases = 3 [json_name = "leases"];`
     * @param values The leases to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLeases")
    public fun com.google.protobuf.kotlin.DslList<com.SpaceX.API.Device.DhcpLease, LeasesProxy>.addAll(values: kotlin.collections.Iterable<com.SpaceX.API.Device.DhcpLease>) {
      _builder.addAllLeases(values)
    }
    /**
     * `repeated .SpaceX.API.Device.DhcpLease leases = 3 [json_name = "leases"];`
     * @param values The leases to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLeases")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.SpaceX.API.Device.DhcpLease, LeasesProxy>.plusAssign(values: kotlin.collections.Iterable<com.SpaceX.API.Device.DhcpLease>) {
      addAll(values)
    }
    /**
     * `repeated .SpaceX.API.Device.DhcpLease leases = 3 [json_name = "leases"];`
     * @param index The index to set the value at.
     * @param value The leases to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLeases")
    public operator fun com.google.protobuf.kotlin.DslList<com.SpaceX.API.Device.DhcpLease, LeasesProxy>.set(index: kotlin.Int, value: com.SpaceX.API.Device.DhcpLease) {
      _builder.setLeases(index, value)
    }
    /**
     * `repeated .SpaceX.API.Device.DhcpLease leases = 3 [json_name = "leases"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLeases")
    public fun com.google.protobuf.kotlin.DslList<com.SpaceX.API.Device.DhcpLease, LeasesProxy>.clear() {
      _builder.clearLeases()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.DhcpServer.copy(block: `com.SpaceX.API.Device`.DhcpServerKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DhcpServer =
  `com.SpaceX.API.Device`.DhcpServerKt.Dsl._create(this.toBuilder()).apply { block() }._build()


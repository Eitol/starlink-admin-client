// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi_util.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializedhcpLease")
public inline fun dhcpLease(block: com.SpaceX.API.Device.DhcpLeaseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DhcpLease =
  com.SpaceX.API.Device.DhcpLeaseKt.Dsl._create(com.SpaceX.API.Device.DhcpLease.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.DhcpLease`
 */
public object DhcpLeaseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.DhcpLease.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.DhcpLease.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.DhcpLease = _builder.build()

    /**
     * `string ip_address = 1 [json_name = "ipAddress"];`
     */
    public var ipAddress: kotlin.String
      @JvmName("getIpAddress")
      get() = _builder.ipAddress
      @JvmName("setIpAddress")
      set(value) {
        _builder.ipAddress = value
      }
    /**
     * `string ip_address = 1 [json_name = "ipAddress"];`
     */
    public fun clearIpAddress() {
      _builder.clearIpAddress()
    }

    /**
     * `string mac_address = 2 [json_name = "macAddress"];`
     */
    public var macAddress: kotlin.String
      @JvmName("getMacAddress")
      get() = _builder.macAddress
      @JvmName("setMacAddress")
      set(value) {
        _builder.macAddress = value
      }
    /**
     * `string mac_address = 2 [json_name = "macAddress"];`
     */
    public fun clearMacAddress() {
      _builder.clearMacAddress()
    }

    /**
     * `string hostname = 3 [json_name = "hostname"];`
     */
    public var hostname: kotlin.String
      @JvmName("getHostname")
      get() = _builder.hostname
      @JvmName("setHostname")
      set(value) {
        _builder.hostname = value
      }
    /**
     * `string hostname = 3 [json_name = "hostname"];`
     */
    public fun clearHostname() {
      _builder.clearHostname()
    }

    /**
     * `string expires_time = 4 [json_name = "expiresTime"];`
     */
    public var expiresTime: kotlin.String
      @JvmName("getExpiresTime")
      get() = _builder.expiresTime
      @JvmName("setExpiresTime")
      set(value) {
        _builder.expiresTime = value
      }
    /**
     * `string expires_time = 4 [json_name = "expiresTime"];`
     */
    public fun clearExpiresTime() {
      _builder.clearExpiresTime()
    }

    /**
     * `bool active = 5 [json_name = "active"];`
     */
    public var active: kotlin.Boolean
      @JvmName("getActive")
      get() = _builder.active
      @JvmName("setActive")
      set(value) {
        _builder.active = value
      }
    /**
     * `bool active = 5 [json_name = "active"];`
     */
    public fun clearActive() {
      _builder.clearActive()
    }

    /**
     * `uint32 client_id = 6 [json_name = "clientId"];`
     */
    public var clientId: kotlin.Int
      @JvmName("getClientId")
      get() = _builder.clientId
      @JvmName("setClientId")
      set(value) {
        _builder.clientId = value
      }
    /**
     * `uint32 client_id = 6 [json_name = "clientId"];`
     */
    public fun clearClientId() {
      _builder.clearClientId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.DhcpLease.copy(block: `com.SpaceX.API.Device`.DhcpLeaseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DhcpLease =
  `com.SpaceX.API.Device`.DhcpLeaseKt.Dsl._create(this.toBuilder()).apply { block() }._build()


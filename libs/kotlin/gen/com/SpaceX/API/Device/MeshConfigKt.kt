// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi_config.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializemeshConfig")
public inline fun meshConfig(block: com.SpaceX.API.Device.MeshConfigKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.MeshConfig =
  com.SpaceX.API.Device.MeshConfigKt.Dsl._create(com.SpaceX.API.Device.MeshConfig.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.MeshConfig`
 */
public object MeshConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.MeshConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.MeshConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.MeshConfig = _builder.build()

    /**
     * `string display_name = 1 [json_name = "displayName"];`
     */
    public var displayName: kotlin.String
      @JvmName("getDisplayName")
      get() = _builder.displayName
      @JvmName("setDisplayName")
      set(value) {
        _builder.displayName = value
      }
    /**
     * `string display_name = 1 [json_name = "displayName"];`
     */
    public fun clearDisplayName() {
      _builder.clearDisplayName()
    }

    /**
     * `bool apply_display_name = 2 [json_name = "applyDisplayName"];`
     */
    public var applyDisplayName: kotlin.Boolean
      @JvmName("getApplyDisplayName")
      get() = _builder.applyDisplayName
      @JvmName("setApplyDisplayName")
      set(value) {
        _builder.applyDisplayName = value
      }
    /**
     * `bool apply_display_name = 2 [json_name = "applyDisplayName"];`
     */
    public fun clearApplyDisplayName() {
      _builder.clearApplyDisplayName()
    }

    /**
     * `.SpaceX.API.Device.MeshAuth auth = 3 [json_name = "auth"];`
     */
    public var auth: com.SpaceX.API.Device.MeshAuth
      @JvmName("getAuth")
      get() = _builder.auth
      @JvmName("setAuth")
      set(value) {
        _builder.auth = value
      }
    public var authValue: kotlin.Int
      @JvmName("getAuthValue")
      get() = _builder.authValue
      @JvmName("setAuthValue")
      set(value) {
        _builder.authValue = value
      }
    /**
     * `.SpaceX.API.Device.MeshAuth auth = 3 [json_name = "auth"];`
     */
    public fun clearAuth() {
      _builder.clearAuth()
    }

    /**
     * `bool apply_auth = 4 [json_name = "applyAuth"];`
     */
    public var applyAuth: kotlin.Boolean
      @JvmName("getApplyAuth")
      get() = _builder.applyAuth
      @JvmName("setApplyAuth")
      set(value) {
        _builder.applyAuth = value
      }
    /**
     * `bool apply_auth = 4 [json_name = "applyAuth"];`
     */
    public fun clearApplyAuth() {
      _builder.clearApplyAuth()
    }

    /**
     * `int64 last_connected = 5 [json_name = "lastConnected"];`
     */
    public var lastConnected: kotlin.Long
      @JvmName("getLastConnected")
      get() = _builder.lastConnected
      @JvmName("setLastConnected")
      set(value) {
        _builder.lastConnected = value
      }
    /**
     * `int64 last_connected = 5 [json_name = "lastConnected"];`
     */
    public fun clearLastConnected() {
      _builder.clearLastConnected()
    }

    /**
     * `uint64 incarnation = 7 [json_name = "incarnation"];`
     */
    public var incarnation: kotlin.Long
      @JvmName("getIncarnation")
      get() = _builder.incarnation
      @JvmName("setIncarnation")
      set(value) {
        _builder.incarnation = value
      }
    /**
     * `uint64 incarnation = 7 [json_name = "incarnation"];`
     */
    public fun clearIncarnation() {
      _builder.clearIncarnation()
    }

    /**
     * `string hardware_version = 9 [json_name = "hardwareVersion"];`
     */
    public var hardwareVersion: kotlin.String
      @JvmName("getHardwareVersion")
      get() = _builder.hardwareVersion
      @JvmName("setHardwareVersion")
      set(value) {
        _builder.hardwareVersion = value
      }
    /**
     * `string hardware_version = 9 [json_name = "hardwareVersion"];`
     */
    public fun clearHardwareVersion() {
      _builder.clearHardwareVersion()
    }

    /**
     * `bool supports_5ghz_high = 10 [json_name = "supports5ghzHigh"];`
     */
    public var supports5GhzHigh: kotlin.Boolean
      @JvmName("getSupports5GhzHigh")
      get() = _builder.supports5GhzHigh
      @JvmName("setSupports5GhzHigh")
      set(value) {
        _builder.supports5GhzHigh = value
      }
    /**
     * `bool supports_5ghz_high = 10 [json_name = "supports5ghzHigh"];`
     */
    public fun clearSupports5GhzHigh() {
      _builder.clearSupports5GhzHigh()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.MeshConfig.copy(block: `com.SpaceX.API.Device`.MeshConfigKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.MeshConfig =
  `com.SpaceX.API.Device`.MeshConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializewifiBandStatus")
public inline fun wifiBandStatus(block: com.SpaceX.API.Device.WifiBandStatusKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiBandStatus =
  com.SpaceX.API.Device.WifiBandStatusKt.Dsl._create(com.SpaceX.API.Device.WifiBandStatus.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.WifiBandStatus`
 */
public object WifiBandStatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.WifiBandStatus.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.WifiBandStatus.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.WifiBandStatus = _builder.build()

    /**
     * `float chan_busy_time_fraction = 1 [json_name = "chanBusyTimeFraction"];`
     */
    public var chanBusyTimeFraction: kotlin.Float
      @JvmName("getChanBusyTimeFraction")
      get() = _builder.chanBusyTimeFraction
      @JvmName("setChanBusyTimeFraction")
      set(value) {
        _builder.chanBusyTimeFraction = value
      }
    /**
     * `float chan_busy_time_fraction = 1 [json_name = "chanBusyTimeFraction"];`
     */
    public fun clearChanBusyTimeFraction() {
      _builder.clearChanBusyTimeFraction()
    }

    /**
     * `float tx_air_time_fraction = 2 [json_name = "txAirTimeFraction"];`
     */
    public var txAirTimeFraction: kotlin.Float
      @JvmName("getTxAirTimeFraction")
      get() = _builder.txAirTimeFraction
      @JvmName("setTxAirTimeFraction")
      set(value) {
        _builder.txAirTimeFraction = value
      }
    /**
     * `float tx_air_time_fraction = 2 [json_name = "txAirTimeFraction"];`
     */
    public fun clearTxAirTimeFraction() {
      _builder.clearTxAirTimeFraction()
    }

    /**
     * `float rx_air_time_fraction = 3 [json_name = "rxAirTimeFraction"];`
     */
    public var rxAirTimeFraction: kotlin.Float
      @JvmName("getRxAirTimeFraction")
      get() = _builder.rxAirTimeFraction
      @JvmName("setRxAirTimeFraction")
      set(value) {
        _builder.rxAirTimeFraction = value
      }
    /**
     * `float rx_air_time_fraction = 3 [json_name = "rxAirTimeFraction"];`
     */
    public fun clearRxAirTimeFraction() {
      _builder.clearRxAirTimeFraction()
    }

    /**
     * `float obss_air_time_fraction = 4 [json_name = "obssAirTimeFraction"];`
     */
    public var obssAirTimeFraction: kotlin.Float
      @JvmName("getObssAirTimeFraction")
      get() = _builder.obssAirTimeFraction
      @JvmName("setObssAirTimeFraction")
      set(value) {
        _builder.obssAirTimeFraction = value
      }
    /**
     * `float obss_air_time_fraction = 4 [json_name = "obssAirTimeFraction"];`
     */
    public fun clearObssAirTimeFraction() {
      _builder.clearObssAirTimeFraction()
    }

    /**
     * `float edcca_air_time_fraction = 5 [json_name = "edccaAirTimeFraction"];`
     */
    public var edccaAirTimeFraction: kotlin.Float
      @JvmName("getEdccaAirTimeFraction")
      get() = _builder.edccaAirTimeFraction
      @JvmName("setEdccaAirTimeFraction")
      set(value) {
        _builder.edccaAirTimeFraction = value
      }
    /**
     * `float edcca_air_time_fraction = 5 [json_name = "edccaAirTimeFraction"];`
     */
    public fun clearEdccaAirTimeFraction() {
      _builder.clearEdccaAirTimeFraction()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.WifiBandStatus.copy(block: `com.SpaceX.API.Device`.WifiBandStatusKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiBandStatus =
  `com.SpaceX.API.Device`.WifiBandStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()


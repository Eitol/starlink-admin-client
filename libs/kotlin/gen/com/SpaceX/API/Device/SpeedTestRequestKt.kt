// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/device.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializespeedTestRequest")
public inline fun speedTestRequest(block: com.SpaceX.API.Device.SpeedTestRequestKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SpeedTestRequest =
  com.SpaceX.API.Device.SpeedTestRequestKt.Dsl._create(com.SpaceX.API.Device.SpeedTestRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.SpeedTestRequest`
 */
public object SpeedTestRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.SpeedTestRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.SpeedTestRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.SpeedTestRequest = _builder.build()

    /**
     * `uint32 id = 4 [json_name = "id"];`
     */
    public var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.id
      @JvmName("setId")
      set(value) {
        _builder.id = value
      }
    /**
     * `uint32 id = 4 [json_name = "id"];`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `.SpaceX.API.Device.SpeedTestStats client_speedtest = 1 [json_name = "clientSpeedtest"];`
     */
    public var clientSpeedtest: com.SpaceX.API.Device.SpeedTestStats
      @JvmName("getClientSpeedtest")
      get() = _builder.clientSpeedtest
      @JvmName("setClientSpeedtest")
      set(value) {
        _builder.clientSpeedtest = value
      }
    /**
     * `.SpaceX.API.Device.SpeedTestStats client_speedtest = 1 [json_name = "clientSpeedtest"];`
     */
    public fun clearClientSpeedtest() {
      _builder.clearClientSpeedtest()
    }
    /**
     * `.SpaceX.API.Device.SpeedTestStats client_speedtest = 1 [json_name = "clientSpeedtest"];`
     * @return Whether the clientSpeedtest field is set.
     */
    public fun hasClientSpeedtest(): kotlin.Boolean {
      return _builder.hasClientSpeedtest()
    }
    public val SpeedTestRequestKt.Dsl.clientSpeedtestOrNull: com.SpaceX.API.Device.SpeedTestStats?
      get() = _builder.clientSpeedtestOrNull

    /**
     * `float client_rssi = 2 [json_name = "clientRssi"];`
     */
    public var clientRssi: kotlin.Float
      @JvmName("getClientRssi")
      get() = _builder.clientRssi
      @JvmName("setClientRssi")
      set(value) {
        _builder.clientRssi = value
      }
    /**
     * `float client_rssi = 2 [json_name = "clientRssi"];`
     */
    public fun clearClientRssi() {
      _builder.clearClientRssi()
    }

    /**
     * `.SpaceX.API.Device.ClientPlatform client_platform = 3 [json_name = "clientPlatform"];`
     */
    public var clientPlatform: com.SpaceX.API.Device.ClientPlatform
      @JvmName("getClientPlatform")
      get() = _builder.clientPlatform
      @JvmName("setClientPlatform")
      set(value) {
        _builder.clientPlatform = value
      }
    /**
     * `.SpaceX.API.Device.ClientPlatform client_platform = 3 [json_name = "clientPlatform"];`
     */
    public fun clearClientPlatform() {
      _builder.clearClientPlatform()
    }
    /**
     * `.SpaceX.API.Device.ClientPlatform client_platform = 3 [json_name = "clientPlatform"];`
     * @return Whether the clientPlatform field is set.
     */
    public fun hasClientPlatform(): kotlin.Boolean {
      return _builder.hasClientPlatform()
    }
    public val SpeedTestRequestKt.Dsl.clientPlatformOrNull: com.SpaceX.API.Device.ClientPlatform?
      get() = _builder.clientPlatformOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.SpeedTestRequest.copy(block: `com.SpaceX.API.Device`.SpeedTestRequestKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SpeedTestRequest =
  `com.SpaceX.API.Device`.SpeedTestRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.SpaceX.API.Device.SpeedTestRequestOrBuilder.clientSpeedtestOrNull: com.SpaceX.API.Device.SpeedTestStats?
  get() = if (hasClientSpeedtest()) getClientSpeedtest() else null

public val com.SpaceX.API.Device.SpeedTestRequestOrBuilder.clientPlatformOrNull: com.SpaceX.API.Device.ClientPlatform?
  get() = if (hasClientPlatform()) getClientPlatform() else null


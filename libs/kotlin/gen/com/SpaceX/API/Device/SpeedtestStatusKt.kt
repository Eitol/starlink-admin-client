// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/device.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializespeedtestStatus")
public inline fun speedtestStatus(block: com.SpaceX.API.Device.SpeedtestStatusKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SpeedtestStatus =
  com.SpaceX.API.Device.SpeedtestStatusKt.Dsl._create(com.SpaceX.API.Device.SpeedtestStatus.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.SpeedtestStatus`
 */
public object SpeedtestStatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.SpeedtestStatus.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.SpeedtestStatus.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.SpeedtestStatus = _builder.build()

    /**
     * `bool running = 1 [json_name = "running"];`
     */
    public var running: kotlin.Boolean
      @JvmName("getRunning")
      get() = _builder.running
      @JvmName("setRunning")
      set(value) {
        _builder.running = value
      }
    /**
     * `bool running = 1 [json_name = "running"];`
     */
    public fun clearRunning() {
      _builder.clearRunning()
    }

    /**
     * `uint32 id = 2 [json_name = "id"];`
     */
    public var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.id
      @JvmName("setId")
      set(value) {
        _builder.id = value
      }
    /**
     * `uint32 id = 2 [json_name = "id"];`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `.SpaceX.API.Device.SpeedtestStatus.Direction up = 1000 [json_name = "up"];`
     */
    public var up: com.SpaceX.API.Device.SpeedtestStatus.Direction
      @JvmName("getUp")
      get() = _builder.up
      @JvmName("setUp")
      set(value) {
        _builder.up = value
      }
    /**
     * `.SpaceX.API.Device.SpeedtestStatus.Direction up = 1000 [json_name = "up"];`
     */
    public fun clearUp() {
      _builder.clearUp()
    }
    /**
     * `.SpaceX.API.Device.SpeedtestStatus.Direction up = 1000 [json_name = "up"];`
     * @return Whether the up field is set.
     */
    public fun hasUp(): kotlin.Boolean {
      return _builder.hasUp()
    }
    public val SpeedtestStatusKt.Dsl.upOrNull: com.SpaceX.API.Device.SpeedtestStatus.Direction?
      get() = _builder.upOrNull

    /**
     * `.SpaceX.API.Device.SpeedtestStatus.Direction down = 1001 [json_name = "down"];`
     */
    public var down: com.SpaceX.API.Device.SpeedtestStatus.Direction
      @JvmName("getDown")
      get() = _builder.down
      @JvmName("setDown")
      set(value) {
        _builder.down = value
      }
    /**
     * `.SpaceX.API.Device.SpeedtestStatus.Direction down = 1001 [json_name = "down"];`
     */
    public fun clearDown() {
      _builder.clearDown()
    }
    /**
     * `.SpaceX.API.Device.SpeedtestStatus.Direction down = 1001 [json_name = "down"];`
     * @return Whether the down field is set.
     */
    public fun hasDown(): kotlin.Boolean {
      return _builder.hasDown()
    }
    public val SpeedtestStatusKt.Dsl.downOrNull: com.SpaceX.API.Device.SpeedtestStatus.Direction?
      get() = _builder.downOrNull
  }
  @kotlin.jvm.JvmName("-initializedirection")
  public inline fun direction(block: com.SpaceX.API.Device.SpeedtestStatusKt.DirectionKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SpeedtestStatus.Direction =
    com.SpaceX.API.Device.SpeedtestStatusKt.DirectionKt.Dsl._create(com.SpaceX.API.Device.SpeedtestStatus.Direction.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `SpaceX.API.Device.SpeedtestStatus.Direction`
   */
  public object DirectionKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.SpaceX.API.Device.SpeedtestStatus.Direction.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.SpaceX.API.Device.SpeedtestStatus.Direction.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.SpaceX.API.Device.SpeedtestStatus.Direction = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ThroughputsMbpsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * `repeated float throughputs_mbps = 1 [json_name = "throughputsMbps"];`
       */
       public val throughputsMbps: com.google.protobuf.kotlin.DslList<kotlin.Float, ThroughputsMbpsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.throughputsMbpsList
        )
      /**
       * `repeated float throughputs_mbps = 1 [json_name = "throughputsMbps"];`
       * @param value The throughputsMbps to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addThroughputsMbps")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ThroughputsMbpsProxy>.add(value: kotlin.Float) {
        _builder.addThroughputsMbps(value)
      }/**
       * `repeated float throughputs_mbps = 1 [json_name = "throughputsMbps"];`
       * @param value The throughputsMbps to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignThroughputsMbps")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ThroughputsMbpsProxy>.plusAssign(value: kotlin.Float) {
        add(value)
      }/**
       * `repeated float throughputs_mbps = 1 [json_name = "throughputsMbps"];`
       * @param values The throughputsMbps to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllThroughputsMbps")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ThroughputsMbpsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
        _builder.addAllThroughputsMbps(values)
      }/**
       * `repeated float throughputs_mbps = 1 [json_name = "throughputsMbps"];`
       * @param values The throughputsMbps to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllThroughputsMbps")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ThroughputsMbpsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
        addAll(values)
      }/**
       * `repeated float throughputs_mbps = 1 [json_name = "throughputsMbps"];`
       * @param index The index to set the value at.
       * @param value The throughputsMbps to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setThroughputsMbps")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ThroughputsMbpsProxy>.set(index: kotlin.Int, value: kotlin.Float) {
        _builder.setThroughputsMbps(index, value)
      }/**
       * `repeated float throughputs_mbps = 1 [json_name = "throughputsMbps"];`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearThroughputsMbps")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ThroughputsMbpsProxy>.clear() {
        _builder.clearThroughputsMbps()
      }
      /**
       * `.SpaceX.API.Device.SpeedtestError err = 2 [json_name = "err"];`
       */
      public var err: com.SpaceX.API.Device.SpeedtestError
        @JvmName("getErr")
        get() = _builder.err
        @JvmName("setErr")
        set(value) {
          _builder.err = value
        }
      public var errValue: kotlin.Int
        @JvmName("getErrValue")
        get() = _builder.errValue
        @JvmName("setErrValue")
        set(value) {
          _builder.errValue = value
        }
      /**
       * `.SpaceX.API.Device.SpeedtestError err = 2 [json_name = "err"];`
       */
      public fun clearErr() {
        _builder.clearErr()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.SpeedtestStatus.copy(block: `com.SpaceX.API.Device`.SpeedtestStatusKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SpeedtestStatus =
  `com.SpaceX.API.Device`.SpeedtestStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.SpeedtestStatus.Direction.copy(block: `com.SpaceX.API.Device`.SpeedtestStatusKt.DirectionKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SpeedtestStatus.Direction =
  `com.SpaceX.API.Device`.SpeedtestStatusKt.DirectionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.SpaceX.API.Device.SpeedtestStatusOrBuilder.upOrNull: com.SpaceX.API.Device.SpeedtestStatus.Direction?
  get() = if (hasUp()) getUp() else null

public val com.SpaceX.API.Device.SpeedtestStatusOrBuilder.downOrNull: com.SpaceX.API.Device.SpeedtestStatus.Direction?
  get() = if (hasDown()) getDown() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializewifiSetupRequest")
public inline fun wifiSetupRequest(block: com.SpaceX.API.Device.WifiSetupRequestKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiSetupRequest =
  com.SpaceX.API.Device.WifiSetupRequestKt.Dsl._create(com.SpaceX.API.Device.WifiSetupRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.WifiSetupRequest`
 */
public object WifiSetupRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.WifiSetupRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.WifiSetupRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.WifiSetupRequest = _builder.build()

    /**
     * `bool skip = 1 [json_name = "skip"];`
     */
    public var skip: kotlin.Boolean
      @JvmName("getSkip")
      get() = _builder.skip
      @JvmName("setSkip")
      set(value) {
        _builder.skip = value
      }
    /**
     * `bool skip = 1 [json_name = "skip"];`
     */
    public fun clearSkip() {
      _builder.clearSkip()
    }

    /**
     * `string network_name = 2 [json_name = "networkName"];`
     */
    public var networkName: kotlin.String
      @JvmName("getNetworkName")
      get() = _builder.networkName
      @JvmName("setNetworkName")
      set(value) {
        _builder.networkName = value
      }
    /**
     * `string network_name = 2 [json_name = "networkName"];`
     */
    public fun clearNetworkName() {
      _builder.clearNetworkName()
    }

    /**
     * `string network_password = 3 [json_name = "networkPassword"];`
     */
    public var networkPassword: kotlin.String
      @JvmName("getNetworkPassword")
      get() = _builder.networkPassword
      @JvmName("setNetworkPassword")
      set(value) {
        _builder.networkPassword = value
      }
    /**
     * `string network_password = 3 [json_name = "networkPassword"];`
     */
    public fun clearNetworkPassword() {
      _builder.clearNetworkPassword()
    }

    /**
     * `bool bypass = 4 [json_name = "bypass"];`
     */
    public var bypass: kotlin.Boolean
      @JvmName("getBypass")
      get() = _builder.bypass
      @JvmName("setBypass")
      set(value) {
        _builder.bypass = value
      }
    /**
     * `bool bypass = 4 [json_name = "bypass"];`
     */
    public fun clearBypass() {
      _builder.clearBypass()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.WifiSetupRequest.copy(block: `com.SpaceX.API.Device`.WifiSetupRequestKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiSetupRequest =
  `com.SpaceX.API.Device`.WifiSetupRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


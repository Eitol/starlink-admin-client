// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializewifiAuthenticateResponse")
public inline fun wifiAuthenticateResponse(block: com.SpaceX.API.Device.WifiAuthenticateResponseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiAuthenticateResponse =
  com.SpaceX.API.Device.WifiAuthenticateResponseKt.Dsl._create(com.SpaceX.API.Device.WifiAuthenticateResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.WifiAuthenticateResponse`
 */
public object WifiAuthenticateResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.WifiAuthenticateResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.WifiAuthenticateResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.WifiAuthenticateResponse = _builder.build()

    /**
     * `.SpaceX.API.Device.ChallengeResponse wifi = 1 [json_name = "wifi"];`
     */
    public var wifi: com.SpaceX.API.Device.ChallengeResponse
      @JvmName("getWifi")
      get() = _builder.wifi
      @JvmName("setWifi")
      set(value) {
        _builder.wifi = value
      }
    /**
     * `.SpaceX.API.Device.ChallengeResponse wifi = 1 [json_name = "wifi"];`
     */
    public fun clearWifi() {
      _builder.clearWifi()
    }
    /**
     * `.SpaceX.API.Device.ChallengeResponse wifi = 1 [json_name = "wifi"];`
     * @return Whether the wifi field is set.
     */
    public fun hasWifi(): kotlin.Boolean {
      return _builder.hasWifi()
    }
    public val WifiAuthenticateResponseKt.Dsl.wifiOrNull: com.SpaceX.API.Device.ChallengeResponse?
      get() = _builder.wifiOrNull

    /**
     * `.SpaceX.API.Device.ChallengeResponse dish = 2 [json_name = "dish"];`
     */
    public var dish: com.SpaceX.API.Device.ChallengeResponse
      @JvmName("getDish")
      get() = _builder.dish
      @JvmName("setDish")
      set(value) {
        _builder.dish = value
      }
    /**
     * `.SpaceX.API.Device.ChallengeResponse dish = 2 [json_name = "dish"];`
     */
    public fun clearDish() {
      _builder.clearDish()
    }
    /**
     * `.SpaceX.API.Device.ChallengeResponse dish = 2 [json_name = "dish"];`
     * @return Whether the dish field is set.
     */
    public fun hasDish(): kotlin.Boolean {
      return _builder.hasDish()
    }
    public val WifiAuthenticateResponseKt.Dsl.dishOrNull: com.SpaceX.API.Device.ChallengeResponse?
      get() = _builder.dishOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.WifiAuthenticateResponse.copy(block: `com.SpaceX.API.Device`.WifiAuthenticateResponseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.WifiAuthenticateResponse =
  `com.SpaceX.API.Device`.WifiAuthenticateResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.SpaceX.API.Device.WifiAuthenticateResponseOrBuilder.wifiOrNull: com.SpaceX.API.Device.ChallengeResponse?
  get() = if (hasWifi()) getWifi() else null

public val com.SpaceX.API.Device.WifiAuthenticateResponseOrBuilder.dishOrNull: com.SpaceX.API.Device.ChallengeResponse?
  get() = if (hasDish()) getDish() else null


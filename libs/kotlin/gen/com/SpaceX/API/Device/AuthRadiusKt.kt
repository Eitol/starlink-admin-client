// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi_config.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializeauthRadius")
public inline fun authRadius(block: com.SpaceX.API.Device.AuthRadiusKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.AuthRadius =
  com.SpaceX.API.Device.AuthRadiusKt.Dsl._create(com.SpaceX.API.Device.AuthRadius.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.AuthRadius`
 */
public object AuthRadiusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.AuthRadius.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.AuthRadius.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.AuthRadius = _builder.build()

    /**
     * `string server = 1 [json_name = "server"];`
     */
    public var server: kotlin.String
      @JvmName("getServer")
      get() = _builder.server
      @JvmName("setServer")
      set(value) {
        _builder.server = value
      }
    /**
     * `string server = 1 [json_name = "server"];`
     */
    public fun clearServer() {
      _builder.clearServer()
    }

    /**
     * `string server_ca = 3 [json_name = "serverCa", deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field serverCa is deprecated") public var serverCa: kotlin.String
      @JvmName("getServerCa")
      get() = _builder.serverCa
      @JvmName("setServerCa")
      set(value) {
        _builder.serverCa = value
      }
    /**
     * `string server_ca = 3 [json_name = "serverCa", deprecated = true];`
     */
    public fun clearServerCa() {
      _builder.clearServerCa()
    }

    /**
     * `string server_ca_base_64 = 4 [json_name = "serverCaBase64"];`
     */
    public var serverCaBase64: kotlin.String
      @JvmName("getServerCaBase64")
      get() = _builder.serverCaBase64
      @JvmName("setServerCaBase64")
      set(value) {
        _builder.serverCaBase64 = value
      }
    /**
     * `string server_ca_base_64 = 4 [json_name = "serverCaBase64"];`
     */
    public fun clearServerCaBase64() {
      _builder.clearServerCaBase64()
    }

    /**
     * `string password = 2 [json_name = "password"];`
     */
    public var password: kotlin.String
      @JvmName("getPassword")
      get() = _builder.password
      @JvmName("setPassword")
      set(value) {
        _builder.password = value
      }
    /**
     * `string password = 2 [json_name = "password"];`
     */
    public fun clearPassword() {
      _builder.clearPassword()
    }

    /**
     * `.SpaceX.API.Device.Protocol transport = 5 [json_name = "transport"];`
     */
    public var transport: com.SpaceX.API.Device.Protocol
      @JvmName("getTransport")
      get() = _builder.transport
      @JvmName("setTransport")
      set(value) {
        _builder.transport = value
      }
    public var transportValue: kotlin.Int
      @JvmName("getTransportValue")
      get() = _builder.transportValue
      @JvmName("setTransportValue")
      set(value) {
        _builder.transportValue = value
      }
    /**
     * `.SpaceX.API.Device.Protocol transport = 5 [json_name = "transport"];`
     */
    public fun clearTransport() {
      _builder.clearTransport()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.AuthRadius.copy(block: `com.SpaceX.API.Device`.AuthRadiusKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.AuthRadius =
  `com.SpaceX.API.Device`.AuthRadiusKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi_util.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializeinflatedBasicServiceSet")
public inline fun inflatedBasicServiceSet(block: com.SpaceX.API.Device.InflatedBasicServiceSetKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.InflatedBasicServiceSet =
  com.SpaceX.API.Device.InflatedBasicServiceSetKt.Dsl._create(com.SpaceX.API.Device.InflatedBasicServiceSet.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.InflatedBasicServiceSet`
 */
public object InflatedBasicServiceSetKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.InflatedBasicServiceSet.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.InflatedBasicServiceSet.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.InflatedBasicServiceSet = _builder.build()

    /**
     * `string bssid = 1 [json_name = "bssid"];`
     */
    public var bssid: kotlin.String
      @JvmName("getBssid")
      get() = _builder.bssid
      @JvmName("setBssid")
      set(value) {
        _builder.bssid = value
      }
    /**
     * `string bssid = 1 [json_name = "bssid"];`
     */
    public fun clearBssid() {
      _builder.clearBssid()
    }

    /**
     * `string ssid = 2 [json_name = "ssid"];`
     */
    public var ssid: kotlin.String
      @JvmName("getSsid")
      get() = _builder.ssid
      @JvmName("setSsid")
      set(value) {
        _builder.ssid = value
      }
    /**
     * `string ssid = 2 [json_name = "ssid"];`
     */
    public fun clearSsid() {
      _builder.clearSsid()
    }

    /**
     * `string mac_lan = 3 [json_name = "macLan"];`
     */
    public var macLan: kotlin.String
      @JvmName("getMacLan")
      get() = _builder.macLan
      @JvmName("setMacLan")
      set(value) {
        _builder.macLan = value
      }
    /**
     * `string mac_lan = 3 [json_name = "macLan"];`
     */
    public fun clearMacLan() {
      _builder.clearMacLan()
    }

    /**
     * `string iface_name = 4 [json_name = "ifaceName"];`
     */
    public var ifaceName: kotlin.String
      @JvmName("getIfaceName")
      get() = _builder.ifaceName
      @JvmName("setIfaceName")
      set(value) {
        _builder.ifaceName = value
      }
    /**
     * `string iface_name = 4 [json_name = "ifaceName"];`
     */
    public fun clearIfaceName() {
      _builder.clearIfaceName()
    }

    /**
     * `.SpaceX.API.Device.IfaceType iface_type = 5 [json_name = "ifaceType"];`
     */
    public var ifaceType: com.SpaceX.API.Device.IfaceType
      @JvmName("getIfaceType")
      get() = _builder.ifaceType
      @JvmName("setIfaceType")
      set(value) {
        _builder.ifaceType = value
      }
    public var ifaceTypeValue: kotlin.Int
      @JvmName("getIfaceTypeValue")
      get() = _builder.ifaceTypeValue
      @JvmName("setIfaceTypeValue")
      set(value) {
        _builder.ifaceTypeValue = value
      }
    /**
     * `.SpaceX.API.Device.IfaceType iface_type = 5 [json_name = "ifaceType"];`
     */
    public fun clearIfaceType() {
      _builder.clearIfaceType()
    }

    /**
     * `uint32 channel = 6 [json_name = "channel"];`
     */
    public var channel: kotlin.Int
      @JvmName("getChannel")
      get() = _builder.channel
      @JvmName("setChannel")
      set(value) {
        _builder.channel = value
      }
    /**
     * `uint32 channel = 6 [json_name = "channel"];`
     */
    public fun clearChannel() {
      _builder.clearChannel()
    }

    /**
     * `uint32 preference = 7 [json_name = "preference"];`
     */
    public var preference: kotlin.Int
      @JvmName("getPreference")
      get() = _builder.preference
      @JvmName("setPreference")
      set(value) {
        _builder.preference = value
      }
    /**
     * `uint32 preference = 7 [json_name = "preference"];`
     */
    public fun clearPreference() {
      _builder.clearPreference()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.InflatedBasicServiceSet.copy(block: `com.SpaceX.API.Device`.InflatedBasicServiceSetKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.InflatedBasicServiceSet =
  `com.SpaceX.API.Device`.InflatedBasicServiceSetKt.Dsl._create(this.toBuilder()).apply { block() }._build()


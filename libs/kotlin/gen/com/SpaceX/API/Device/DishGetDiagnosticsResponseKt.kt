// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/device.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializedishGetDiagnosticsResponse")
public inline fun dishGetDiagnosticsResponse(block: com.SpaceX.API.Device.DishGetDiagnosticsResponseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DishGetDiagnosticsResponse =
  com.SpaceX.API.Device.DishGetDiagnosticsResponseKt.Dsl._create(com.SpaceX.API.Device.DishGetDiagnosticsResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.DishGetDiagnosticsResponse`
 */
public object DishGetDiagnosticsResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.DishGetDiagnosticsResponse = _builder.build()

    /**
     * `string id = 1 [json_name = "id"];`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.id
      @JvmName("setId")
      set(value) {
        _builder.id = value
      }
    /**
     * `string id = 1 [json_name = "id"];`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `string hardware_version = 2 [json_name = "hardwareVersion"];`
     */
    public var hardwareVersion: kotlin.String
      @JvmName("getHardwareVersion")
      get() = _builder.hardwareVersion
      @JvmName("setHardwareVersion")
      set(value) {
        _builder.hardwareVersion = value
      }
    /**
     * `string hardware_version = 2 [json_name = "hardwareVersion"];`
     */
    public fun clearHardwareVersion() {
      _builder.clearHardwareVersion()
    }

    /**
     * `string software_version = 3 [json_name = "softwareVersion"];`
     */
    public var softwareVersion: kotlin.String
      @JvmName("getSoftwareVersion")
      get() = _builder.softwareVersion
      @JvmName("setSoftwareVersion")
      set(value) {
        _builder.softwareVersion = value
      }
    /**
     * `string software_version = 3 [json_name = "softwareVersion"];`
     */
    public fun clearSoftwareVersion() {
      _builder.clearSoftwareVersion()
    }

    /**
     * `int32 utc_offset_s = 4 [json_name = "utcOffsetS"];`
     */
    public var utcOffsetS: kotlin.Int
      @JvmName("getUtcOffsetS")
      get() = _builder.utcOffsetS
      @JvmName("setUtcOffsetS")
      set(value) {
        _builder.utcOffsetS = value
      }
    /**
     * `int32 utc_offset_s = 4 [json_name = "utcOffsetS"];`
     */
    public fun clearUtcOffsetS() {
      _builder.clearUtcOffsetS()
    }

    /**
     * `.SpaceX.API.Device.DishGetDiagnosticsResponse.TestResult hardware_self_test = 7 [json_name = "hardwareSelfTest"];`
     */
    public var hardwareSelfTest: com.SpaceX.API.Device.DishGetDiagnosticsResponse.TestResult
      @JvmName("getHardwareSelfTest")
      get() = _builder.hardwareSelfTest
      @JvmName("setHardwareSelfTest")
      set(value) {
        _builder.hardwareSelfTest = value
      }
    public var hardwareSelfTestValue: kotlin.Int
      @JvmName("getHardwareSelfTestValue")
      get() = _builder.hardwareSelfTestValue
      @JvmName("setHardwareSelfTestValue")
      set(value) {
        _builder.hardwareSelfTestValue = value
      }
    /**
     * `.SpaceX.API.Device.DishGetDiagnosticsResponse.TestResult hardware_self_test = 7 [json_name = "hardwareSelfTest"];`
     */
    public fun clearHardwareSelfTest() {
      _builder.clearHardwareSelfTest()
    }

    /**
     * `.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts alerts = 5 [json_name = "alerts"];`
     */
    public var alerts: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts
      @JvmName("getAlerts")
      get() = _builder.alerts
      @JvmName("setAlerts")
      set(value) {
        _builder.alerts = value
      }
    /**
     * `.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts alerts = 5 [json_name = "alerts"];`
     */
    public fun clearAlerts() {
      _builder.clearAlerts()
    }
    /**
     * `.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts alerts = 5 [json_name = "alerts"];`
     * @return Whether the alerts field is set.
     */
    public fun hasAlerts(): kotlin.Boolean {
      return _builder.hasAlerts()
    }
    public val DishGetDiagnosticsResponseKt.Dsl.alertsOrNull: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts?
      get() = _builder.alertsOrNull

    /**
     * `.SpaceX.API.Device.DishGetDiagnosticsResponse.DisablementCode disablement_code = 6 [json_name = "disablementCode"];`
     */
    public var disablementCode: com.SpaceX.API.Device.DishGetDiagnosticsResponse.DisablementCode
      @JvmName("getDisablementCode")
      get() = _builder.disablementCode
      @JvmName("setDisablementCode")
      set(value) {
        _builder.disablementCode = value
      }
    public var disablementCodeValue: kotlin.Int
      @JvmName("getDisablementCodeValue")
      get() = _builder.disablementCodeValue
      @JvmName("setDisablementCodeValue")
      set(value) {
        _builder.disablementCodeValue = value
      }
    /**
     * `.SpaceX.API.Device.DishGetDiagnosticsResponse.DisablementCode disablement_code = 6 [json_name = "disablementCode"];`
     */
    public fun clearDisablementCode() {
      _builder.clearDisablementCode()
    }

    /**
     * `.SpaceX.API.Device.DishGetDiagnosticsResponse.Location location = 8 [json_name = "location"];`
     */
    public var location: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Location
      @JvmName("getLocation")
      get() = _builder.location
      @JvmName("setLocation")
      set(value) {
        _builder.location = value
      }
    /**
     * `.SpaceX.API.Device.DishGetDiagnosticsResponse.Location location = 8 [json_name = "location"];`
     */
    public fun clearLocation() {
      _builder.clearLocation()
    }
    /**
     * `.SpaceX.API.Device.DishGetDiagnosticsResponse.Location location = 8 [json_name = "location"];`
     * @return Whether the location field is set.
     */
    public fun hasLocation(): kotlin.Boolean {
      return _builder.hasLocation()
    }
    public val DishGetDiagnosticsResponseKt.Dsl.locationOrNull: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Location?
      get() = _builder.locationOrNull
  }
  @kotlin.jvm.JvmName("-initializealerts")
  public inline fun alerts(block: com.SpaceX.API.Device.DishGetDiagnosticsResponseKt.AlertsKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts =
    com.SpaceX.API.Device.DishGetDiagnosticsResponseKt.AlertsKt.Dsl._create(com.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts`
   */
  public object AlertsKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts = _builder.build()

      /**
       * `bool dish_is_heating = 1 [json_name = "dishIsHeating"];`
       */
      public var dishIsHeating: kotlin.Boolean
        @JvmName("getDishIsHeating")
        get() = _builder.dishIsHeating
        @JvmName("setDishIsHeating")
        set(value) {
          _builder.dishIsHeating = value
        }
      /**
       * `bool dish_is_heating = 1 [json_name = "dishIsHeating"];`
       */
      public fun clearDishIsHeating() {
        _builder.clearDishIsHeating()
      }

      /**
       * `bool dish_thermal_throttle = 2 [json_name = "dishThermalThrottle"];`
       */
      public var dishThermalThrottle: kotlin.Boolean
        @JvmName("getDishThermalThrottle")
        get() = _builder.dishThermalThrottle
        @JvmName("setDishThermalThrottle")
        set(value) {
          _builder.dishThermalThrottle = value
        }
      /**
       * `bool dish_thermal_throttle = 2 [json_name = "dishThermalThrottle"];`
       */
      public fun clearDishThermalThrottle() {
        _builder.clearDishThermalThrottle()
      }

      /**
       * `bool dish_thermal_shutdown = 3 [json_name = "dishThermalShutdown"];`
       */
      public var dishThermalShutdown: kotlin.Boolean
        @JvmName("getDishThermalShutdown")
        get() = _builder.dishThermalShutdown
        @JvmName("setDishThermalShutdown")
        set(value) {
          _builder.dishThermalShutdown = value
        }
      /**
       * `bool dish_thermal_shutdown = 3 [json_name = "dishThermalShutdown"];`
       */
      public fun clearDishThermalShutdown() {
        _builder.clearDishThermalShutdown()
      }

      /**
       * `bool power_supply_thermal_throttle = 4 [json_name = "powerSupplyThermalThrottle"];`
       */
      public var powerSupplyThermalThrottle: kotlin.Boolean
        @JvmName("getPowerSupplyThermalThrottle")
        get() = _builder.powerSupplyThermalThrottle
        @JvmName("setPowerSupplyThermalThrottle")
        set(value) {
          _builder.powerSupplyThermalThrottle = value
        }
      /**
       * `bool power_supply_thermal_throttle = 4 [json_name = "powerSupplyThermalThrottle"];`
       */
      public fun clearPowerSupplyThermalThrottle() {
        _builder.clearPowerSupplyThermalThrottle()
      }

      /**
       * `bool motors_stuck = 5 [json_name = "motorsStuck"];`
       */
      public var motorsStuck: kotlin.Boolean
        @JvmName("getMotorsStuck")
        get() = _builder.motorsStuck
        @JvmName("setMotorsStuck")
        set(value) {
          _builder.motorsStuck = value
        }
      /**
       * `bool motors_stuck = 5 [json_name = "motorsStuck"];`
       */
      public fun clearMotorsStuck() {
        _builder.clearMotorsStuck()
      }

      /**
       * `bool mast_not_near_vertical = 6 [json_name = "mastNotNearVertical"];`
       */
      public var mastNotNearVertical: kotlin.Boolean
        @JvmName("getMastNotNearVertical")
        get() = _builder.mastNotNearVertical
        @JvmName("setMastNotNearVertical")
        set(value) {
          _builder.mastNotNearVertical = value
        }
      /**
       * `bool mast_not_near_vertical = 6 [json_name = "mastNotNearVertical"];`
       */
      public fun clearMastNotNearVertical() {
        _builder.clearMastNotNearVertical()
      }

      /**
       * `bool slow_ethernet_speeds = 7 [json_name = "slowEthernetSpeeds"];`
       */
      public var slowEthernetSpeeds: kotlin.Boolean
        @JvmName("getSlowEthernetSpeeds")
        get() = _builder.slowEthernetSpeeds
        @JvmName("setSlowEthernetSpeeds")
        set(value) {
          _builder.slowEthernetSpeeds = value
        }
      /**
       * `bool slow_ethernet_speeds = 7 [json_name = "slowEthernetSpeeds"];`
       */
      public fun clearSlowEthernetSpeeds() {
        _builder.clearSlowEthernetSpeeds()
      }

      /**
       * `bool software_install_pending = 8 [json_name = "softwareInstallPending"];`
       */
      public var softwareInstallPending: kotlin.Boolean
        @JvmName("getSoftwareInstallPending")
        get() = _builder.softwareInstallPending
        @JvmName("setSoftwareInstallPending")
        set(value) {
          _builder.softwareInstallPending = value
        }
      /**
       * `bool software_install_pending = 8 [json_name = "softwareInstallPending"];`
       */
      public fun clearSoftwareInstallPending() {
        _builder.clearSoftwareInstallPending()
      }

      /**
       * `bool moving_too_fast_for_policy = 9 [json_name = "movingTooFastForPolicy"];`
       */
      public var movingTooFastForPolicy: kotlin.Boolean
        @JvmName("getMovingTooFastForPolicy")
        get() = _builder.movingTooFastForPolicy
        @JvmName("setMovingTooFastForPolicy")
        set(value) {
          _builder.movingTooFastForPolicy = value
        }
      /**
       * `bool moving_too_fast_for_policy = 9 [json_name = "movingTooFastForPolicy"];`
       */
      public fun clearMovingTooFastForPolicy() {
        _builder.clearMovingTooFastForPolicy()
      }

      /**
       * `bool obstructed = 10 [json_name = "obstructed"];`
       */
      public var obstructed: kotlin.Boolean
        @JvmName("getObstructed")
        get() = _builder.obstructed
        @JvmName("setObstructed")
        set(value) {
          _builder.obstructed = value
        }
      /**
       * `bool obstructed = 10 [json_name = "obstructed"];`
       */
      public fun clearObstructed() {
        _builder.clearObstructed()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializelocation")
  public inline fun location(block: com.SpaceX.API.Device.DishGetDiagnosticsResponseKt.LocationKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DishGetDiagnosticsResponse.Location =
    com.SpaceX.API.Device.DishGetDiagnosticsResponseKt.LocationKt.Dsl._create(com.SpaceX.API.Device.DishGetDiagnosticsResponse.Location.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `SpaceX.API.Device.DishGetDiagnosticsResponse.Location`
   */
  public object LocationKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Location.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Location.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.SpaceX.API.Device.DishGetDiagnosticsResponse.Location = _builder.build()

      /**
       * `bool enabled = 1 [json_name = "enabled"];`
       */
      public var enabled: kotlin.Boolean
        @JvmName("getEnabled")
        get() = _builder.enabled
        @JvmName("setEnabled")
        set(value) {
          _builder.enabled = value
        }
      /**
       * `bool enabled = 1 [json_name = "enabled"];`
       */
      public fun clearEnabled() {
        _builder.clearEnabled()
      }

      /**
       * `double latitude = 2 [json_name = "latitude"];`
       */
      public var latitude: kotlin.Double
        @JvmName("getLatitude")
        get() = _builder.latitude
        @JvmName("setLatitude")
        set(value) {
          _builder.latitude = value
        }
      /**
       * `double latitude = 2 [json_name = "latitude"];`
       */
      public fun clearLatitude() {
        _builder.clearLatitude()
      }

      /**
       * `double longitude = 3 [json_name = "longitude"];`
       */
      public var longitude: kotlin.Double
        @JvmName("getLongitude")
        get() = _builder.longitude
        @JvmName("setLongitude")
        set(value) {
          _builder.longitude = value
        }
      /**
       * `double longitude = 3 [json_name = "longitude"];`
       */
      public fun clearLongitude() {
        _builder.clearLongitude()
      }

      /**
       * `double altitude_meters = 4 [json_name = "altitudeMeters"];`
       */
      public var altitudeMeters: kotlin.Double
        @JvmName("getAltitudeMeters")
        get() = _builder.altitudeMeters
        @JvmName("setAltitudeMeters")
        set(value) {
          _builder.altitudeMeters = value
        }
      /**
       * `double altitude_meters = 4 [json_name = "altitudeMeters"];`
       */
      public fun clearAltitudeMeters() {
        _builder.clearAltitudeMeters()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.DishGetDiagnosticsResponse.copy(block: `com.SpaceX.API.Device`.DishGetDiagnosticsResponseKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DishGetDiagnosticsResponse =
  `com.SpaceX.API.Device`.DishGetDiagnosticsResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts.copy(block: `com.SpaceX.API.Device`.DishGetDiagnosticsResponseKt.AlertsKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts =
  `com.SpaceX.API.Device`.DishGetDiagnosticsResponseKt.AlertsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.DishGetDiagnosticsResponse.Location.copy(block: `com.SpaceX.API.Device`.DishGetDiagnosticsResponseKt.LocationKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.DishGetDiagnosticsResponse.Location =
  `com.SpaceX.API.Device`.DishGetDiagnosticsResponseKt.LocationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.SpaceX.API.Device.DishGetDiagnosticsResponseOrBuilder.alertsOrNull: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Alerts?
  get() = if (hasAlerts()) getAlerts() else null

public val com.SpaceX.API.Device.DishGetDiagnosticsResponseOrBuilder.locationOrNull: com.SpaceX.API.Device.DishGetDiagnosticsResponse.Location?
  get() = if (hasLocation()) getLocation() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializesignedData")
public inline fun signedData(block: com.SpaceX.API.Device.SignedDataKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SignedData =
  com.SpaceX.API.Device.SignedDataKt.Dsl._create(com.SpaceX.API.Device.SignedData.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.SignedData`
 */
public object SignedDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.SignedData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.SignedData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.SignedData = _builder.build()

    /**
     * `bytes data = 1 [json_name = "data"];`
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.data
      @JvmName("setData")
      set(value) {
        _builder.data = value
      }
    /**
     * `bytes data = 1 [json_name = "data"];`
     */
    public fun clearData() {
      _builder.clearData()
    }

    /**
     * `bytes signature = 2 [json_name = "signature"];`
     */
    public var signature: com.google.protobuf.ByteString
      @JvmName("getSignature")
      get() = _builder.signature
      @JvmName("setSignature")
      set(value) {
        _builder.signature = value
      }
    /**
     * `bytes signature = 2 [json_name = "signature"];`
     */
    public fun clearSignature() {
      _builder.clearSignature()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.SignedData.copy(block: `com.SpaceX.API.Device`.SignedDataKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.SignedData =
  `com.SpaceX.API.Device`.SignedDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()


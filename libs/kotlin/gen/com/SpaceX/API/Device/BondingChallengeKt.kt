// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.SpaceX.API.Device;

@kotlin.jvm.JvmName("-initializebondingChallenge")
public inline fun bondingChallenge(block: com.SpaceX.API.Device.BondingChallengeKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.BondingChallenge =
  com.SpaceX.API.Device.BondingChallengeKt.Dsl._create(com.SpaceX.API.Device.BondingChallenge.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `SpaceX.API.Device.BondingChallenge`
 */
public object BondingChallengeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.SpaceX.API.Device.BondingChallenge.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.SpaceX.API.Device.BondingChallenge.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.SpaceX.API.Device.BondingChallenge = _builder.build()

    /**
     * `string dish_id = 1 [json_name = "dishId"];`
     */
    public var dishId: kotlin.String
      @JvmName("getDishId")
      get() = _builder.dishId
      @JvmName("setDishId")
      set(value) {
        _builder.dishId = value
      }
    /**
     * `string dish_id = 1 [json_name = "dishId"];`
     */
    public fun clearDishId() {
      _builder.clearDishId()
    }

    /**
     * `string wifi_id = 2 [json_name = "wifiId"];`
     */
    public var wifiId: kotlin.String
      @JvmName("getWifiId")
      get() = _builder.wifiId
      @JvmName("setWifiId")
      set(value) {
        _builder.wifiId = value
      }
    /**
     * `string wifi_id = 2 [json_name = "wifiId"];`
     */
    public fun clearWifiId() {
      _builder.clearWifiId()
    }

    /**
     * `bytes nonce = 3 [json_name = "nonce"];`
     */
    public var nonce: com.google.protobuf.ByteString
      @JvmName("getNonce")
      get() = _builder.nonce
      @JvmName("setNonce")
      set(value) {
        _builder.nonce = value
      }
    /**
     * `bytes nonce = 3 [json_name = "nonce"];`
     */
    public fun clearNonce() {
      _builder.clearNonce()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.SpaceX.API.Device.BondingChallenge.copy(block: `com.SpaceX.API.Device`.BondingChallengeKt.Dsl.() -> kotlin.Unit): com.SpaceX.API.Device.BondingChallenge =
  `com.SpaceX.API.Device`.BondingChallengeKt.Dsl._create(this.toBuilder()).apply { block() }._build()


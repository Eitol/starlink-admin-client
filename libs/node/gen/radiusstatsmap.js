// source: spacex/api/device/wifi_util.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.SpaceX.API.Device.RadiusStatsMap');
goog.provide('proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.RadiusStatsMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpaceX.API.Device.RadiusStatsMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.RadiusStatsMap.displayName = 'proto.SpaceX.API.Device.RadiusStatsMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.displayName = 'proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.RadiusStatsMap.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.RadiusStatsMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.RadiusStatsMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.RadiusStatsMap.toObject = function(includeInstance, msg) {
  var f, obj = {
radiusStatsMap: (f = msg.getRadiusStatsMap()) ? f.toObject(includeInstance, proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap}
 */
proto.SpaceX.API.Device.RadiusStatsMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.RadiusStatsMap;
  return proto.SpaceX.API.Device.RadiusStatsMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.RadiusStatsMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap}
 */
proto.SpaceX.API.Device.RadiusStatsMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getRadiusStatsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.deserializeBinaryFromReader, "", new proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.RadiusStatsMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.RadiusStatsMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.RadiusStatsMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.RadiusStatsMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRadiusStatsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.serializeBinaryToWriter);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.toObject = function(includeInstance, msg) {
  var f, obj = {
ifaceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
timeoutCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
accessRequestCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
accessAcceptCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
accessRejectCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
accessChallengeCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
accountingRequestCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
accountingResponseCount: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats;
  return proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIfaceName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeoutCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccessRequestCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccessAcceptCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccessRejectCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccessChallengeCount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountingRequestCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountingResponseCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIfaceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimeoutCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAccessRequestCount();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAccessAcceptCount();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getAccessRejectCount();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getAccessChallengeCount();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getAccountingRequestCount();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getAccountingResponseCount();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional string iface_name = 1;
 * @return {string}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.getIfaceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} returns this
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.setIfaceName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 timeout_count = 2;
 * @return {number}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.getTimeoutCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} returns this
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.setTimeoutCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 access_request_count = 3;
 * @return {number}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.getAccessRequestCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} returns this
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.setAccessRequestCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 access_accept_count = 4;
 * @return {number}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.getAccessAcceptCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} returns this
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.setAccessAcceptCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 access_reject_count = 5;
 * @return {number}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.getAccessRejectCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} returns this
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.setAccessRejectCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 access_challenge_count = 6;
 * @return {number}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.getAccessChallengeCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} returns this
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.setAccessChallengeCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 accounting_request_count = 7;
 * @return {number}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.getAccountingRequestCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} returns this
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.setAccountingRequestCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 accounting_response_count = 8;
 * @return {number}
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.getAccountingResponseCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats} returns this
 */
proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats.prototype.setAccountingResponseCount = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * map<string, RadiusStats> radius_stats = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats>}
 */
proto.SpaceX.API.Device.RadiusStatsMap.prototype.getRadiusStatsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.SpaceX.API.Device.RadiusStatsMap.RadiusStats));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.SpaceX.API.Device.RadiusStatsMap} returns this
 */
proto.SpaceX.API.Device.RadiusStatsMap.prototype.clearRadiusStatsMap = function() {
  this.getRadiusStatsMap().clear();
  return this;
};



// source: spacex/api/device/wifi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.SpaceX.API.Device.WifiAlerts');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.WifiAlerts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpaceX.API.Device.WifiAlerts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.WifiAlerts.displayName = 'proto.SpaceX.API.Device.WifiAlerts';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.WifiAlerts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.WifiAlerts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiAlerts.toObject = function(includeInstance, msg) {
  var f, obj = {
thermalThrottle: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
installPending: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
freshlyFused: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
lanEthSlowLink10: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
lanEthSlowLink100: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
wanEthPoorConnection: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
meshTopologyChangingOften: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
meshUnreliableBackhaul: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
radiusMissingProcess: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
ethSwitchError: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
poeOnDishUnreachable: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
poeFuseBlown: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
poeRouterOvercurrent: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
poeOffCurrentNominal: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
poeVinOvervoltage: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
poeVinUndervoltage: jspb.Message.getBooleanFieldWithDefault(msg, 20, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.WifiAlerts}
 */
proto.SpaceX.API.Device.WifiAlerts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.WifiAlerts;
  return proto.SpaceX.API.Device.WifiAlerts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.WifiAlerts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.WifiAlerts}
 */
proto.SpaceX.API.Device.WifiAlerts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setThermalThrottle(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInstallPending(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFreshlyFused(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLanEthSlowLink10(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLanEthSlowLink100(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWanEthPoorConnection(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMeshTopologyChangingOften(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMeshUnreliableBackhaul(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRadiusMissingProcess(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEthSwitchError(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPoeOnDishUnreachable(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPoeFuseBlown(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPoeRouterOvercurrent(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPoeOffCurrentNominal(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPoeVinOvervoltage(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPoeVinUndervoltage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.WifiAlerts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.WifiAlerts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiAlerts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThermalThrottle();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getInstallPending();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getFreshlyFused();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLanEthSlowLink10();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getLanEthSlowLink100();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getWanEthPoorConnection();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getMeshTopologyChangingOften();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getMeshUnreliableBackhaul();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getRadiusMissingProcess();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getEthSwitchError();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getPoeOnDishUnreachable();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getPoeFuseBlown();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getPoeRouterOvercurrent();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getPoeOffCurrentNominal();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getPoeVinOvervoltage();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getPoeVinUndervoltage();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
};


/**
 * optional bool thermal_throttle = 1;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getThermalThrottle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setThermalThrottle = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool install_pending = 2;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getInstallPending = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setInstallPending = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool freshly_fused = 3;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getFreshlyFused = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setFreshlyFused = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool lan_eth_slow_link_10 = 4;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getLanEthSlowLink10 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setLanEthSlowLink10 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool lan_eth_slow_link_100 = 5;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getLanEthSlowLink100 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setLanEthSlowLink100 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool wan_eth_poor_connection = 10;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getWanEthPoorConnection = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setWanEthPoorConnection = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool mesh_topology_changing_often = 11;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getMeshTopologyChangingOften = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setMeshTopologyChangingOften = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool mesh_unreliable_backhaul = 12;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getMeshUnreliableBackhaul = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setMeshUnreliableBackhaul = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool radius_missing_process = 13;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getRadiusMissingProcess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setRadiusMissingProcess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool eth_switch_error = 14;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getEthSwitchError = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setEthSwitchError = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool poe_on_dish_unreachable = 15;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getPoeOnDishUnreachable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setPoeOnDishUnreachable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool poe_fuse_blown = 16;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getPoeFuseBlown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setPoeFuseBlown = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool poe_router_overcurrent = 17;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getPoeRouterOvercurrent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setPoeRouterOvercurrent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool poe_off_current_nominal = 18;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getPoeOffCurrentNominal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setPoeOffCurrentNominal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool poe_vin_overvoltage = 19;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getPoeVinOvervoltage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setPoeVinOvervoltage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool poe_vin_undervoltage = 20;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.getPoeVinUndervoltage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiAlerts} returns this
 */
proto.SpaceX.API.Device.WifiAlerts.prototype.setPoeVinUndervoltage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};



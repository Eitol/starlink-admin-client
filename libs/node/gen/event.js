// source: spacex/api/device/device.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.SpaceX.API.Device.Event');
goog.provide('proto.SpaceX.API.Device.Event.EventCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.SpaceX.API.Device.WifiAccountBondingEvent');
goog.require('proto.SpaceX.API.Device.WifiCloudStatusEvent');
goog.require('proto.SpaceX.API.Device.WifiNewClientConnectedEvent');
goog.require('proto.SpaceX.API.Device.WifiNewPeerEvent');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, proto.SpaceX.API.Device.Event.oneofGroups_);
};
goog.inherits(proto.SpaceX.API.Device.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.Event.displayName = 'proto.SpaceX.API.Device.Event';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.SpaceX.API.Device.Event.oneofGroups_ = [[3001,3002,3003,3004]];

/**
 * @enum {number}
 */
proto.SpaceX.API.Device.Event.EventCase = {
  EVENT_NOT_SET: 0,
  WIFI_NEW_CLIENT_CONNECTED: 3001,
  WIFI_ACCOUNT_BONDING: 3002,
  WIFI_NEW_PEER: 3003,
  WIFI_CLOUD_STATUS: 3004
};

/**
 * @return {proto.SpaceX.API.Device.Event.EventCase}
 */
proto.SpaceX.API.Device.Event.prototype.getEventCase = function() {
  return /** @type {proto.SpaceX.API.Device.Event.EventCase} */(jspb.Message.computeOneofCase(this, proto.SpaceX.API.Device.Event.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
wifiNewClientConnected: (f = msg.getWifiNewClientConnected()) && proto.SpaceX.API.Device.WifiNewClientConnectedEvent.toObject(includeInstance, f),
wifiAccountBonding: (f = msg.getWifiAccountBonding()) && proto.SpaceX.API.Device.WifiAccountBondingEvent.toObject(includeInstance, f),
wifiNewPeer: (f = msg.getWifiNewPeer()) && proto.SpaceX.API.Device.WifiNewPeerEvent.toObject(includeInstance, f),
wifiCloudStatus: (f = msg.getWifiCloudStatus()) && proto.SpaceX.API.Device.WifiCloudStatusEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.Event}
 */
proto.SpaceX.API.Device.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.Event;
  return proto.SpaceX.API.Device.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.Event}
 */
proto.SpaceX.API.Device.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3001:
      var value = new proto.SpaceX.API.Device.WifiNewClientConnectedEvent;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiNewClientConnectedEvent.deserializeBinaryFromReader);
      msg.setWifiNewClientConnected(value);
      break;
    case 3002:
      var value = new proto.SpaceX.API.Device.WifiAccountBondingEvent;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiAccountBondingEvent.deserializeBinaryFromReader);
      msg.setWifiAccountBonding(value);
      break;
    case 3003:
      var value = new proto.SpaceX.API.Device.WifiNewPeerEvent;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiNewPeerEvent.deserializeBinaryFromReader);
      msg.setWifiNewPeer(value);
      break;
    case 3004:
      var value = new proto.SpaceX.API.Device.WifiCloudStatusEvent;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiCloudStatusEvent.deserializeBinaryFromReader);
      msg.setWifiCloudStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWifiNewClientConnected();
  if (f != null) {
    writer.writeMessage(
      3001,
      f,
      proto.SpaceX.API.Device.WifiNewClientConnectedEvent.serializeBinaryToWriter
    );
  }
  f = message.getWifiAccountBonding();
  if (f != null) {
    writer.writeMessage(
      3002,
      f,
      proto.SpaceX.API.Device.WifiAccountBondingEvent.serializeBinaryToWriter
    );
  }
  f = message.getWifiNewPeer();
  if (f != null) {
    writer.writeMessage(
      3003,
      f,
      proto.SpaceX.API.Device.WifiNewPeerEvent.serializeBinaryToWriter
    );
  }
  f = message.getWifiCloudStatus();
  if (f != null) {
    writer.writeMessage(
      3004,
      f,
      proto.SpaceX.API.Device.WifiCloudStatusEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional WifiNewClientConnectedEvent wifi_new_client_connected = 3001;
 * @return {?proto.SpaceX.API.Device.WifiNewClientConnectedEvent}
 */
proto.SpaceX.API.Device.Event.prototype.getWifiNewClientConnected = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiNewClientConnectedEvent} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiNewClientConnectedEvent, 3001));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiNewClientConnectedEvent|undefined} value
 * @return {!proto.SpaceX.API.Device.Event} returns this
*/
proto.SpaceX.API.Device.Event.prototype.setWifiNewClientConnected = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3001, proto.SpaceX.API.Device.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.Event} returns this
 */
proto.SpaceX.API.Device.Event.prototype.clearWifiNewClientConnected = function() {
  return this.setWifiNewClientConnected(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.Event.prototype.hasWifiNewClientConnected = function() {
  return jspb.Message.getField(this, 3001) != null;
};


/**
 * optional WifiAccountBondingEvent wifi_account_bonding = 3002;
 * @return {?proto.SpaceX.API.Device.WifiAccountBondingEvent}
 */
proto.SpaceX.API.Device.Event.prototype.getWifiAccountBonding = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiAccountBondingEvent} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiAccountBondingEvent, 3002));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiAccountBondingEvent|undefined} value
 * @return {!proto.SpaceX.API.Device.Event} returns this
*/
proto.SpaceX.API.Device.Event.prototype.setWifiAccountBonding = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3002, proto.SpaceX.API.Device.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.Event} returns this
 */
proto.SpaceX.API.Device.Event.prototype.clearWifiAccountBonding = function() {
  return this.setWifiAccountBonding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.Event.prototype.hasWifiAccountBonding = function() {
  return jspb.Message.getField(this, 3002) != null;
};


/**
 * optional WifiNewPeerEvent wifi_new_peer = 3003;
 * @return {?proto.SpaceX.API.Device.WifiNewPeerEvent}
 */
proto.SpaceX.API.Device.Event.prototype.getWifiNewPeer = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiNewPeerEvent} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiNewPeerEvent, 3003));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiNewPeerEvent|undefined} value
 * @return {!proto.SpaceX.API.Device.Event} returns this
*/
proto.SpaceX.API.Device.Event.prototype.setWifiNewPeer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3003, proto.SpaceX.API.Device.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.Event} returns this
 */
proto.SpaceX.API.Device.Event.prototype.clearWifiNewPeer = function() {
  return this.setWifiNewPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.Event.prototype.hasWifiNewPeer = function() {
  return jspb.Message.getField(this, 3003) != null;
};


/**
 * optional WifiCloudStatusEvent wifi_cloud_status = 3004;
 * @return {?proto.SpaceX.API.Device.WifiCloudStatusEvent}
 */
proto.SpaceX.API.Device.Event.prototype.getWifiCloudStatus = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiCloudStatusEvent} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiCloudStatusEvent, 3004));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiCloudStatusEvent|undefined} value
 * @return {!proto.SpaceX.API.Device.Event} returns this
*/
proto.SpaceX.API.Device.Event.prototype.setWifiCloudStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3004, proto.SpaceX.API.Device.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.Event} returns this
 */
proto.SpaceX.API.Device.Event.prototype.clearWifiCloudStatus = function() {
  return this.setWifiCloudStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.Event.prototype.hasWifiCloudStatus = function() {
  return jspb.Message.getField(this, 3004) != null;
};



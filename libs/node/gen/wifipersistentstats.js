// source: spacex/api/device/wifi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.SpaceX.API.Device.WifiPersistentStats');
goog.provide('proto.SpaceX.API.Device.WifiPersistentStats.Event');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.WifiPersistentStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpaceX.API.Device.WifiPersistentStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.WifiPersistentStats.displayName = 'proto.SpaceX.API.Device.WifiPersistentStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpaceX.API.Device.WifiPersistentStats.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.WifiPersistentStats.Event.displayName = 'proto.SpaceX.API.Device.WifiPersistentStats.Event';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.WifiPersistentStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.WifiPersistentStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiPersistentStats.toObject = function(includeInstance, msg) {
  var f, obj = {
factoryResetButton: (f = msg.getFactoryResetButton()) && proto.SpaceX.API.Device.WifiPersistentStats.Event.toObject(includeInstance, f),
factoryResetPlugUnplug: (f = msg.getFactoryResetPlugUnplug()) && proto.SpaceX.API.Device.WifiPersistentStats.Event.toObject(includeInstance, f),
factoryResetCommand: (f = msg.getFactoryResetCommand()) && proto.SpaceX.API.Device.WifiPersistentStats.Event.toObject(includeInstance, f),
factoryResetFailedLoadWifiConfig: (f = msg.getFactoryResetFailedLoadWifiConfig()) && proto.SpaceX.API.Device.WifiPersistentStats.Event.toObject(includeInstance, f),
rebootFromSoftwareUpdate: (f = msg.getRebootFromSoftwareUpdate()) && proto.SpaceX.API.Device.WifiPersistentStats.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats}
 */
proto.SpaceX.API.Device.WifiPersistentStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.WifiPersistentStats;
  return proto.SpaceX.API.Device.WifiPersistentStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.WifiPersistentStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats}
 */
proto.SpaceX.API.Device.WifiPersistentStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SpaceX.API.Device.WifiPersistentStats.Event;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiPersistentStats.Event.deserializeBinaryFromReader);
      msg.setFactoryResetButton(value);
      break;
    case 2:
      var value = new proto.SpaceX.API.Device.WifiPersistentStats.Event;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiPersistentStats.Event.deserializeBinaryFromReader);
      msg.setFactoryResetPlugUnplug(value);
      break;
    case 3:
      var value = new proto.SpaceX.API.Device.WifiPersistentStats.Event;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiPersistentStats.Event.deserializeBinaryFromReader);
      msg.setFactoryResetCommand(value);
      break;
    case 4:
      var value = new proto.SpaceX.API.Device.WifiPersistentStats.Event;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiPersistentStats.Event.deserializeBinaryFromReader);
      msg.setFactoryResetFailedLoadWifiConfig(value);
      break;
    case 5:
      var value = new proto.SpaceX.API.Device.WifiPersistentStats.Event;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiPersistentStats.Event.deserializeBinaryFromReader);
      msg.setRebootFromSoftwareUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.WifiPersistentStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.WifiPersistentStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiPersistentStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFactoryResetButton();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.SpaceX.API.Device.WifiPersistentStats.Event.serializeBinaryToWriter
    );
  }
  f = message.getFactoryResetPlugUnplug();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.SpaceX.API.Device.WifiPersistentStats.Event.serializeBinaryToWriter
    );
  }
  f = message.getFactoryResetCommand();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.SpaceX.API.Device.WifiPersistentStats.Event.serializeBinaryToWriter
    );
  }
  f = message.getFactoryResetFailedLoadWifiConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.SpaceX.API.Device.WifiPersistentStats.Event.serializeBinaryToWriter
    );
  }
  f = message.getRebootFromSoftwareUpdate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.SpaceX.API.Device.WifiPersistentStats.Event.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.WifiPersistentStats.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.WifiPersistentStats.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
count: jspb.Message.getFieldWithDefault(msg, 1, 0),
lastOccurredTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats.Event}
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.WifiPersistentStats.Event;
  return proto.SpaceX.API.Device.WifiPersistentStats.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.WifiPersistentStats.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats.Event}
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastOccurredTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.WifiPersistentStats.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.WifiPersistentStats.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLastOccurredTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional uint32 count = 1;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats.Event} returns this
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 last_occurred_timestamp = 2;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event.prototype.getLastOccurredTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats.Event} returns this
 */
proto.SpaceX.API.Device.WifiPersistentStats.Event.prototype.setLastOccurredTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Event factory_reset_button = 1;
 * @return {?proto.SpaceX.API.Device.WifiPersistentStats.Event}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.getFactoryResetButton = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiPersistentStats.Event} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiPersistentStats.Event, 1));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiPersistentStats.Event|undefined} value
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats} returns this
*/
proto.SpaceX.API.Device.WifiPersistentStats.prototype.setFactoryResetButton = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats} returns this
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.clearFactoryResetButton = function() {
  return this.setFactoryResetButton(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.hasFactoryResetButton = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Event factory_reset_plug_unplug = 2;
 * @return {?proto.SpaceX.API.Device.WifiPersistentStats.Event}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.getFactoryResetPlugUnplug = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiPersistentStats.Event} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiPersistentStats.Event, 2));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiPersistentStats.Event|undefined} value
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats} returns this
*/
proto.SpaceX.API.Device.WifiPersistentStats.prototype.setFactoryResetPlugUnplug = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats} returns this
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.clearFactoryResetPlugUnplug = function() {
  return this.setFactoryResetPlugUnplug(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.hasFactoryResetPlugUnplug = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Event factory_reset_command = 3;
 * @return {?proto.SpaceX.API.Device.WifiPersistentStats.Event}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.getFactoryResetCommand = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiPersistentStats.Event} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiPersistentStats.Event, 3));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiPersistentStats.Event|undefined} value
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats} returns this
*/
proto.SpaceX.API.Device.WifiPersistentStats.prototype.setFactoryResetCommand = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats} returns this
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.clearFactoryResetCommand = function() {
  return this.setFactoryResetCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.hasFactoryResetCommand = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Event factory_reset_failed_load_wifi_config = 4;
 * @return {?proto.SpaceX.API.Device.WifiPersistentStats.Event}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.getFactoryResetFailedLoadWifiConfig = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiPersistentStats.Event} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiPersistentStats.Event, 4));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiPersistentStats.Event|undefined} value
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats} returns this
*/
proto.SpaceX.API.Device.WifiPersistentStats.prototype.setFactoryResetFailedLoadWifiConfig = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats} returns this
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.clearFactoryResetFailedLoadWifiConfig = function() {
  return this.setFactoryResetFailedLoadWifiConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.hasFactoryResetFailedLoadWifiConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Event reboot_from_software_update = 5;
 * @return {?proto.SpaceX.API.Device.WifiPersistentStats.Event}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.getRebootFromSoftwareUpdate = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiPersistentStats.Event} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiPersistentStats.Event, 5));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiPersistentStats.Event|undefined} value
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats} returns this
*/
proto.SpaceX.API.Device.WifiPersistentStats.prototype.setRebootFromSoftwareUpdate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.WifiPersistentStats} returns this
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.clearRebootFromSoftwareUpdate = function() {
  return this.setRebootFromSoftwareUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiPersistentStats.prototype.hasRebootFromSoftwareUpdate = function() {
  return jspb.Message.getField(this, 5) != null;
};



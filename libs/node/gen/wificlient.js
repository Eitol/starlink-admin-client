// source: spacex/api/device/wifi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.SpaceX.API.Device.WifiClient');
goog.provide('proto.SpaceX.API.Device.WifiClient.FqcodelInfo');
goog.provide('proto.SpaceX.API.Device.WifiClient.Interface');
goog.provide('proto.SpaceX.API.Device.WifiClient.PingMetrics');
goog.provide('proto.SpaceX.API.Device.WifiClient.Role');
goog.provide('proto.SpaceX.API.Device.WifiClient.RxStats');
goog.provide('proto.SpaceX.API.Device.WifiClient.TxStats');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.WifiClient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SpaceX.API.Device.WifiClient.repeatedFields_, null);
};
goog.inherits(proto.SpaceX.API.Device.WifiClient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.WifiClient.displayName = 'proto.SpaceX.API.Device.WifiClient';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.WifiClient.RxStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpaceX.API.Device.WifiClient.RxStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.WifiClient.RxStats.displayName = 'proto.SpaceX.API.Device.WifiClient.RxStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.WifiClient.TxStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpaceX.API.Device.WifiClient.TxStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.WifiClient.TxStats.displayName = 'proto.SpaceX.API.Device.WifiClient.TxStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpaceX.API.Device.WifiClient.PingMetrics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.WifiClient.PingMetrics.displayName = 'proto.SpaceX.API.Device.WifiClient.PingMetrics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpaceX.API.Device.WifiClient.FqcodelInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.WifiClient.FqcodelInfo.displayName = 'proto.SpaceX.API.Device.WifiClient.FqcodelInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SpaceX.API.Device.WifiClient.repeatedFields_ = [41];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.WifiClient.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.WifiClient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.WifiClient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiClient.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
givenName: jspb.Message.getFieldWithDefault(msg, 31, ""),
domain: jspb.Message.getFieldWithDefault(msg, 22, ""),
macAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
ipAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
dhcpLeaseActive: jspb.Message.getBooleanFieldWithDefault(msg, 46, false),
dhcpLeaseRenewed: jspb.Message.getBooleanFieldWithDefault(msg, 47, false),
ipv6AddressesList: (f = jspb.Message.getRepeatedField(msg, 41)) == null ? undefined : f,
signalStrength: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
channelWidth: jspb.Message.getFieldWithDefault(msg, 12, 0),
rxStats: (f = msg.getRxStats()) && proto.SpaceX.API.Device.WifiClient.RxStats.toObject(includeInstance, f),
txStats: (f = msg.getTxStats()) && proto.SpaceX.API.Device.WifiClient.TxStats.toObject(includeInstance, f),
associatedTimeS: jspb.Message.getFieldWithDefault(msg, 7, 0),
noDataIdleS: jspb.Message.getFieldWithDefault(msg, 45, 0),
modeStr: jspb.Message.getFieldWithDefault(msg, 8, ""),
iface: jspb.Message.getFieldWithDefault(msg, 9, 0),
ifaceName: jspb.Message.getFieldWithDefault(msg, 26, ""),
snr: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
psmode: jspb.Message.getFieldWithDefault(msg, 11, 0),
upstreamMacAddress: jspb.Message.getFieldWithDefault(msg, 13, ""),
role: jspb.Message.getFieldWithDefault(msg, 14, 0),
deviceId: jspb.Message.getFieldWithDefault(msg, 15, ""),
swqChecks: jspb.Message.getFieldWithDefault(msg, 16, 0),
swqChecksNonEmpty: jspb.Message.getFieldWithDefault(msg, 17, 0),
mibSteerState: jspb.Message.getFieldWithDefault(msg, 18, 0),
mibSteerMethod: jspb.Message.getFieldWithDefault(msg, 19, 0),
btmRequests: jspb.Message.getFieldWithDefault(msg, 20, 0),
btmRequestsSuccess: jspb.Message.getFieldWithDefault(msg, 21, 0),
steerState: jspb.Message.getFieldWithDefault(msg, 30, 0),
steerReqSuccessLast1h: jspb.Message.getFieldWithDefault(msg, 27, 0),
steerReqFailLast1h: jspb.Message.getFieldWithDefault(msg, 28, 0),
steerReqFailAndDissocLast1h: jspb.Message.getFieldWithDefault(msg, 29, 0),
dot11vSupport: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
hopsFromController: jspb.Message.getFieldWithDefault(msg, 32, 0),
estTxRateMbpsFromController: jspb.Message.getFloatingPointFieldWithDefault(msg, 33, 0.0),
estRxRateMbpsFromController: jspb.Message.getFloatingPointFieldWithDefault(msg, 34, 0.0),
hardwareVersion: jspb.Message.getFieldWithDefault(msg, 37, ""),
softwareVersion: jspb.Message.getFieldWithDefault(msg, 38, ""),
apiVersion: jspb.Message.getFieldWithDefault(msg, 39, 0),
pingMetrics: (f = msg.getPingMetrics()) && proto.SpaceX.API.Device.WifiClient.PingMetrics.toObject(includeInstance, f),
blocked: jspb.Message.getBooleanFieldWithDefault(msg, 42, false),
clientId: jspb.Message.getFieldWithDefault(msg, 43, 0),
fqcodelInfo: (f = msg.getFqcodelInfo()) && proto.SpaceX.API.Device.WifiClient.FqcodelInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.WifiClient}
 */
proto.SpaceX.API.Device.WifiClient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.WifiClient;
  return proto.SpaceX.API.Device.WifiClient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.WifiClient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.WifiClient}
 */
proto.SpaceX.API.Device.WifiClient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setGivenName(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMacAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    case 46:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDhcpLeaseActive(value);
      break;
    case 47:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDhcpLeaseRenewed(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.addIpv6Addresses(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSignalStrength(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChannelWidth(value);
      break;
    case 5:
      var value = new proto.SpaceX.API.Device.WifiClient.RxStats;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiClient.RxStats.deserializeBinaryFromReader);
      msg.setRxStats(value);
      break;
    case 6:
      var value = new proto.SpaceX.API.Device.WifiClient.TxStats;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiClient.TxStats.deserializeBinaryFromReader);
      msg.setTxStats(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAssociatedTimeS(value);
      break;
    case 45:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNoDataIdleS(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setModeStr(value);
      break;
    case 9:
      var value = /** @type {!proto.SpaceX.API.Device.WifiClient.Interface} */ (reader.readEnum());
      msg.setIface(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setIfaceName(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSnr(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPsmode(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpstreamMacAddress(value);
      break;
    case 14:
      var value = /** @type {!proto.SpaceX.API.Device.WifiClient.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSwqChecks(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSwqChecksNonEmpty(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMibSteerState(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMibSteerMethod(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBtmRequests(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBtmRequestsSuccess(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSteerState(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSteerReqSuccessLast1h(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSteerReqFailLast1h(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSteerReqFailAndDissocLast1h(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDot11vSupport(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHopsFromController(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEstTxRateMbpsFromController(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEstRxRateMbpsFromController(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setHardwareVersion(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setSoftwareVersion(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setApiVersion(value);
      break;
    case 40:
      var value = new proto.SpaceX.API.Device.WifiClient.PingMetrics;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiClient.PingMetrics.deserializeBinaryFromReader);
      msg.setPingMetrics(value);
      break;
    case 42:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocked(value);
      break;
    case 43:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientId(value);
      break;
    case 44:
      var value = new proto.SpaceX.API.Device.WifiClient.FqcodelInfo;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiClient.FqcodelInfo.deserializeBinaryFromReader);
      msg.setFqcodelInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.WifiClient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.WifiClient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.WifiClient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiClient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGivenName();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getMacAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDhcpLeaseActive();
  if (f) {
    writer.writeBool(
      46,
      f
    );
  }
  f = message.getDhcpLeaseRenewed();
  if (f) {
    writer.writeBool(
      47,
      f
    );
  }
  f = message.getIpv6AddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      41,
      f
    );
  }
  f = message.getSignalStrength();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getChannelWidth();
  if (f !== 0) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getRxStats();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.SpaceX.API.Device.WifiClient.RxStats.serializeBinaryToWriter
    );
  }
  f = message.getTxStats();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.SpaceX.API.Device.WifiClient.TxStats.serializeBinaryToWriter
    );
  }
  f = message.getAssociatedTimeS();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getNoDataIdleS();
  if (f !== 0) {
    writer.writeUint32(
      45,
      f
    );
  }
  f = message.getModeStr();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIface();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getIfaceName();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getSnr();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getPsmode();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getUpstreamMacAddress();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSwqChecks();
  if (f !== 0) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = message.getSwqChecksNonEmpty();
  if (f !== 0) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = message.getMibSteerState();
  if (f !== 0) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = message.getMibSteerMethod();
  if (f !== 0) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = message.getBtmRequests();
  if (f !== 0) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = message.getBtmRequestsSuccess();
  if (f !== 0) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = message.getSteerState();
  if (f !== 0) {
    writer.writeUint32(
      30,
      f
    );
  }
  f = message.getSteerReqSuccessLast1h();
  if (f !== 0) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = message.getSteerReqFailLast1h();
  if (f !== 0) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = message.getSteerReqFailAndDissocLast1h();
  if (f !== 0) {
    writer.writeUint32(
      29,
      f
    );
  }
  f = message.getDot11vSupport();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getHopsFromController();
  if (f !== 0) {
    writer.writeUint32(
      32,
      f
    );
  }
  f = message.getEstTxRateMbpsFromController();
  if (f !== 0.0) {
    writer.writeFloat(
      33,
      f
    );
  }
  f = message.getEstRxRateMbpsFromController();
  if (f !== 0.0) {
    writer.writeFloat(
      34,
      f
    );
  }
  f = message.getHardwareVersion();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getSoftwareVersion();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getApiVersion();
  if (f !== 0) {
    writer.writeUint32(
      39,
      f
    );
  }
  f = message.getPingMetrics();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.SpaceX.API.Device.WifiClient.PingMetrics.serializeBinaryToWriter
    );
  }
  f = message.getBlocked();
  if (f) {
    writer.writeBool(
      42,
      f
    );
  }
  f = message.getClientId();
  if (f !== 0) {
    writer.writeUint32(
      43,
      f
    );
  }
  f = message.getFqcodelInfo();
  if (f != null) {
    writer.writeMessage(
      44,
      f,
      proto.SpaceX.API.Device.WifiClient.FqcodelInfo.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.SpaceX.API.Device.WifiClient.Interface = {
  UNKNOWN: 0,
  ETH: 1,
  RF_2GHZ: 2,
  RF_5GHZ: 3,
  RF_5GHZ_HIGH: 4
};

/**
 * @enum {number}
 */
proto.SpaceX.API.Device.WifiClient.Role = {
  ROLE_UNKNOWN: 0,
  CLIENT: 1,
  REPEATER: 2,
  CONTROLLER: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.WifiClient.RxStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.WifiClient.RxStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiClient.RxStats.toObject = function(includeInstance, msg) {
  var f, obj = {
bytes: jspb.Message.getFieldWithDefault(msg, 1, 0),
countErrors: jspb.Message.getFieldWithDefault(msg, 2, 0),
phyMode: jspb.Message.getFieldWithDefault(msg, 13, 0),
nss: jspb.Message.getFieldWithDefault(msg, 3, 0),
rateMbps: jspb.Message.getFieldWithDefault(msg, 8, 0),
rateMbpsLast30s: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
rateMbpsLast15s: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
mcs: jspb.Message.getFieldWithDefault(msg, 5, 0),
bandwidth: jspb.Message.getFieldWithDefault(msg, 6, 0),
guardNs: jspb.Message.getFieldWithDefault(msg, 7, 0),
airtimeFractionLast1s: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
sampledPackets: jspb.Message.getFieldWithDefault(msg, 10, 0),
sampledPacketsRetried: jspb.Message.getFieldWithDefault(msg, 11, 0),
sampledPacketsDropped: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.WifiClient.RxStats;
  return proto.SpaceX.API.Device.WifiClient.RxStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.WifiClient.RxStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBytes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCountErrors(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPhyMode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNss(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRateMbps(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRateMbpsLast30s(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRateMbpsLast15s(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMcs(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBandwidth(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGuardNs(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAirtimeFractionLast1s(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSampledPackets(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSampledPacketsRetried(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSampledPacketsDropped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.WifiClient.RxStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.WifiClient.RxStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiClient.RxStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBytes();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCountErrors();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPhyMode();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getNss();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRateMbps();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getRateMbpsLast30s();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getRateMbpsLast15s();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getMcs();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBandwidth();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getGuardNs();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getAirtimeFractionLast1s();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getSampledPackets();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getSampledPacketsRetried();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getSampledPacketsDropped();
  if (f !== 0) {
    writer.writeUint32(
      12,
      f
    );
  }
};


/**
 * optional uint64 bytes = 1;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 count_errors = 2;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getCountErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setCountErrors = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 phy_mode = 13;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getPhyMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setPhyMode = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 nss = 3;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getNss = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setNss = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 rate_mbps = 8;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getRateMbps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setRateMbps = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional float rate_mbps_last_30s = 14;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getRateMbpsLast30s = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setRateMbpsLast30s = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float rate_mbps_last_15s = 15;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getRateMbpsLast15s = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setRateMbpsLast15s = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional uint32 mcs = 5;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getMcs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setMcs = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 bandwidth = 6;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getBandwidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setBandwidth = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 guard_ns = 7;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getGuardNs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setGuardNs = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional float airtime_fraction_last_1s = 9;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getAirtimeFractionLast1s = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setAirtimeFractionLast1s = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional uint32 sampled_packets = 10;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getSampledPackets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setSampledPackets = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 sampled_packets_retried = 11;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getSampledPacketsRetried = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setSampledPacketsRetried = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint32 sampled_packets_dropped = 12;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.getSampledPacketsDropped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.RxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.RxStats.prototype.setSampledPacketsDropped = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.WifiClient.TxStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.WifiClient.TxStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiClient.TxStats.toObject = function(includeInstance, msg) {
  var f, obj = {
bytes: jspb.Message.getFieldWithDefault(msg, 1, 0),
successBytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
phyMode: jspb.Message.getFieldWithDefault(msg, 10, 0),
nss: jspb.Message.getFieldWithDefault(msg, 3, 0),
rateMbps: jspb.Message.getFieldWithDefault(msg, 8, 0),
rateMbpsLast30s: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
rateMbpsLast15s: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
mcs: jspb.Message.getFieldWithDefault(msg, 5, 0),
bandwidth: jspb.Message.getFieldWithDefault(msg, 6, 0),
guardNs: jspb.Message.getFieldWithDefault(msg, 7, 0),
airtimeFractionLast1s: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.WifiClient.TxStats;
  return proto.SpaceX.API.Device.WifiClient.TxStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.WifiClient.TxStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBytes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSuccessBytes(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPhyMode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNss(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRateMbps(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRateMbpsLast30s(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRateMbpsLast15s(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMcs(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBandwidth(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGuardNs(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAirtimeFractionLast1s(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.WifiClient.TxStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.WifiClient.TxStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiClient.TxStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBytes();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSuccessBytes();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPhyMode();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getNss();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRateMbps();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getRateMbpsLast30s();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getRateMbpsLast15s();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getMcs();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBandwidth();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getGuardNs();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getAirtimeFractionLast1s();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
};


/**
 * optional uint64 bytes = 1;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 success_bytes = 2;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getSuccessBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setSuccessBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 phy_mode = 10;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getPhyMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setPhyMode = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 nss = 3;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getNss = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setNss = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 rate_mbps = 8;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getRateMbps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setRateMbps = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional float rate_mbps_last_30s = 11;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getRateMbpsLast30s = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setRateMbpsLast30s = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float rate_mbps_last_15s = 12;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getRateMbpsLast15s = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setRateMbpsLast15s = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional uint32 mcs = 5;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getMcs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setMcs = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 bandwidth = 6;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getBandwidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setBandwidth = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 guard_ns = 7;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getGuardNs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setGuardNs = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional float airtime_fraction_last_1s = 9;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.getAirtimeFractionLast1s = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.TxStats} returns this
 */
proto.SpaceX.API.Device.WifiClient.TxStats.prototype.setAirtimeFractionLast1s = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.WifiClient.PingMetrics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.WifiClient.PingMetrics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.toObject = function(includeInstance, msg) {
  var f, obj = {
inUnhappyHour2s: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
inUnhappyHour5s: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
dropRate5m: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
latency5m: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.WifiClient.PingMetrics}
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.WifiClient.PingMetrics;
  return proto.SpaceX.API.Device.WifiClient.PingMetrics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.WifiClient.PingMetrics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.WifiClient.PingMetrics}
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInUnhappyHour2s(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInUnhappyHour5s(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDropRate5m(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLatency5m(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.WifiClient.PingMetrics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.WifiClient.PingMetrics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInUnhappyHour2s();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getInUnhappyHour5s();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDropRate5m();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getLatency5m();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional bool in_unhappy_hour_2s = 1;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.prototype.getInUnhappyHour2s = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiClient.PingMetrics} returns this
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.prototype.setInUnhappyHour2s = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool in_unhappy_hour_5s = 2;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.prototype.getInUnhappyHour5s = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiClient.PingMetrics} returns this
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.prototype.setInUnhappyHour5s = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional float drop_rate_5m = 3;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.prototype.getDropRate5m = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.PingMetrics} returns this
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.prototype.setDropRate5m = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float latency_5m = 4;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.prototype.getLatency5m = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.PingMetrics} returns this
 */
proto.SpaceX.API.Device.WifiClient.PingMetrics.prototype.setLatency5m = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.WifiClient.FqcodelInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
enqsHiPrio: jspb.Message.getFieldWithDefault(msg, 1, 0),
enqsFqcodel: jspb.Message.getFieldWithDefault(msg, 2, 0),
enqsNew: jspb.Message.getFieldWithDefault(msg, 3, 0),
enqsOld: jspb.Message.getFieldWithDefault(msg, 4, 0),
enqsDropped: jspb.Message.getFieldWithDefault(msg, 5, 0),
deqsNew: jspb.Message.getFieldWithDefault(msg, 6, 0),
deqsOld: jspb.Message.getFieldWithDefault(msg, 7, 0),
deqsFlowNew: jspb.Message.getFieldWithDefault(msg, 8, 0),
deqsFlowOldDeficit: jspb.Message.getFieldWithDefault(msg, 9, 0),
deqsFlowOldStarvation: jspb.Message.getFieldWithDefault(msg, 10, 0),
deqsDropped: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.WifiClient.FqcodelInfo;
  return proto.SpaceX.API.Device.WifiClient.FqcodelInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEnqsHiPrio(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEnqsFqcodel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEnqsNew(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEnqsOld(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEnqsDropped(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeqsNew(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeqsOld(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeqsFlowNew(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeqsFlowOldDeficit(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeqsFlowOldStarvation(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeqsDropped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.WifiClient.FqcodelInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnqsHiPrio();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEnqsFqcodel();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEnqsNew();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getEnqsOld();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getEnqsDropped();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getDeqsNew();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getDeqsOld();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getDeqsFlowNew();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getDeqsFlowOldDeficit();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getDeqsFlowOldStarvation();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getDeqsDropped();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
};


/**
 * optional uint64 enqs_hi_prio = 1;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getEnqsHiPrio = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setEnqsHiPrio = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 enqs_fqcodel = 2;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getEnqsFqcodel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setEnqsFqcodel = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 enqs_new = 3;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getEnqsNew = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setEnqsNew = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 enqs_old = 4;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getEnqsOld = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setEnqsOld = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 enqs_dropped = 5;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getEnqsDropped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setEnqsDropped = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 deqs_new = 6;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getDeqsNew = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setDeqsNew = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 deqs_old = 7;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getDeqsOld = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setDeqsOld = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 deqs_flow_new = 8;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getDeqsFlowNew = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setDeqsFlowNew = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 deqs_flow_old_deficit = 9;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getDeqsFlowOldDeficit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setDeqsFlowOldDeficit = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 deqs_flow_old_starvation = 10;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getDeqsFlowOldStarvation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setDeqsFlowOldStarvation = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 deqs_dropped = 11;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.getDeqsDropped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient.FqcodelInfo} returns this
 */
proto.SpaceX.API.Device.WifiClient.FqcodelInfo.prototype.setDeqsDropped = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string given_name = 31;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getGivenName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setGivenName = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string domain = 22;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string mac_address = 2;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getMacAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setMacAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ip_address = 3;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setIpAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool dhcp_lease_active = 46;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getDhcpLeaseActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 46, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setDhcpLeaseActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 46, value);
};


/**
 * optional bool dhcp_lease_renewed = 47;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getDhcpLeaseRenewed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 47, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setDhcpLeaseRenewed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 47, value);
};


/**
 * repeated string ipv6_addresses = 41;
 * @return {!Array<string>}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getIpv6AddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 41));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setIpv6AddressesList = function(value) {
  return jspb.Message.setField(this, 41, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.addIpv6Addresses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 41, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.clearIpv6AddressesList = function() {
  return this.setIpv6AddressesList([]);
};


/**
 * optional float signal_strength = 4;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getSignalStrength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setSignalStrength = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint32 channel_width = 12;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getChannelWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setChannelWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional RxStats rx_stats = 5;
 * @return {?proto.SpaceX.API.Device.WifiClient.RxStats}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getRxStats = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiClient.RxStats} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiClient.RxStats, 5));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiClient.RxStats|undefined} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
*/
proto.SpaceX.API.Device.WifiClient.prototype.setRxStats = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.clearRxStats = function() {
  return this.setRxStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiClient.prototype.hasRxStats = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional TxStats tx_stats = 6;
 * @return {?proto.SpaceX.API.Device.WifiClient.TxStats}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getTxStats = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiClient.TxStats} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiClient.TxStats, 6));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiClient.TxStats|undefined} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
*/
proto.SpaceX.API.Device.WifiClient.prototype.setTxStats = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.clearTxStats = function() {
  return this.setTxStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiClient.prototype.hasTxStats = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 associated_time_s = 7;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getAssociatedTimeS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setAssociatedTimeS = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 no_data_idle_s = 45;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getNoDataIdleS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 45, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setNoDataIdleS = function(value) {
  return jspb.Message.setProto3IntField(this, 45, value);
};


/**
 * optional string mode_str = 8;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getModeStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setModeStr = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Interface iface = 9;
 * @return {!proto.SpaceX.API.Device.WifiClient.Interface}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getIface = function() {
  return /** @type {!proto.SpaceX.API.Device.WifiClient.Interface} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.SpaceX.API.Device.WifiClient.Interface} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setIface = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional string iface_name = 26;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getIfaceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setIfaceName = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional float snr = 10;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getSnr = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setSnr = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional int32 psmode = 11;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getPsmode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setPsmode = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string upstream_mac_address = 13;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getUpstreamMacAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setUpstreamMacAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional Role role = 14;
 * @return {!proto.SpaceX.API.Device.WifiClient.Role}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getRole = function() {
  return /** @type {!proto.SpaceX.API.Device.WifiClient.Role} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.SpaceX.API.Device.WifiClient.Role} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional string device_id = 15;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional uint32 swq_checks = 16;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getSwqChecks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setSwqChecks = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional uint32 swq_checks_non_empty = 17;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getSwqChecksNonEmpty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setSwqChecksNonEmpty = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional uint32 mib_steer_state = 18;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getMibSteerState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setMibSteerState = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional uint32 mib_steer_method = 19;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getMibSteerMethod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setMibSteerMethod = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional uint32 btm_requests = 20;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getBtmRequests = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setBtmRequests = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional uint32 btm_requests_success = 21;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getBtmRequestsSuccess = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setBtmRequestsSuccess = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional uint32 steer_state = 30;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getSteerState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setSteerState = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional uint32 steer_req_success_last_1h = 27;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getSteerReqSuccessLast1h = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setSteerReqSuccessLast1h = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional uint32 steer_req_fail_last_1h = 28;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getSteerReqFailLast1h = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setSteerReqFailLast1h = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional uint32 steer_req_fail_and_dissoc_last_1h = 29;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getSteerReqFailAndDissocLast1h = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setSteerReqFailAndDissocLast1h = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional bool dot11v_support = 23;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getDot11vSupport = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setDot11vSupport = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional uint32 hops_from_controller = 32;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getHopsFromController = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setHopsFromController = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional float est_tx_rate_mbps_from_controller = 33;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getEstTxRateMbpsFromController = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 33, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setEstTxRateMbpsFromController = function(value) {
  return jspb.Message.setProto3FloatField(this, 33, value);
};


/**
 * optional float est_rx_rate_mbps_from_controller = 34;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getEstRxRateMbpsFromController = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 34, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setEstRxRateMbpsFromController = function(value) {
  return jspb.Message.setProto3FloatField(this, 34, value);
};


/**
 * optional string hardware_version = 37;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getHardwareVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setHardwareVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string software_version = 38;
 * @return {string}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getSoftwareVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setSoftwareVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional uint32 api_version = 39;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getApiVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setApiVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 39, value);
};


/**
 * optional PingMetrics ping_metrics = 40;
 * @return {?proto.SpaceX.API.Device.WifiClient.PingMetrics}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getPingMetrics = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiClient.PingMetrics} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiClient.PingMetrics, 40));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiClient.PingMetrics|undefined} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
*/
proto.SpaceX.API.Device.WifiClient.prototype.setPingMetrics = function(value) {
  return jspb.Message.setWrapperField(this, 40, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.clearPingMetrics = function() {
  return this.setPingMetrics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiClient.prototype.hasPingMetrics = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional bool blocked = 42;
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getBlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 42, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setBlocked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 42, value);
};


/**
 * optional uint32 client_id = 43;
 * @return {number}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getClientId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 43, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.setClientId = function(value) {
  return jspb.Message.setProto3IntField(this, 43, value);
};


/**
 * optional FqcodelInfo fqcodel_info = 44;
 * @return {?proto.SpaceX.API.Device.WifiClient.FqcodelInfo}
 */
proto.SpaceX.API.Device.WifiClient.prototype.getFqcodelInfo = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiClient.FqcodelInfo} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiClient.FqcodelInfo, 44));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiClient.FqcodelInfo|undefined} value
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
*/
proto.SpaceX.API.Device.WifiClient.prototype.setFqcodelInfo = function(value) {
  return jspb.Message.setWrapperField(this, 44, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.WifiClient} returns this
 */
proto.SpaceX.API.Device.WifiClient.prototype.clearFqcodelInfo = function() {
  return this.setFqcodelInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.WifiClient.prototype.hasFqcodelInfo = function() {
  return jspb.Message.getField(this, 44) != null;
};



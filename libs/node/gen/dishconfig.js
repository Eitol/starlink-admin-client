// source: spacex/api/device/dish_config.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.SpaceX.API.Device.DishConfig');
goog.provide('proto.SpaceX.API.Device.DishConfig.LevelDishMode');
goog.provide('proto.SpaceX.API.Device.DishConfig.LocationRequestMode');
goog.provide('proto.SpaceX.API.Device.DishConfig.SnowMeltMode');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.DishConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.SpaceX.API.Device.DishConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.DishConfig.displayName = 'proto.SpaceX.API.Device.DishConfig';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.DishConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.DishConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.DishConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.DishConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
snowMeltMode: jspb.Message.getFieldWithDefault(msg, 1, 0),
applySnowMeltMode: jspb.Message.getBooleanFieldWithDefault(msg, 1001, false),
locationRequestMode: jspb.Message.getFieldWithDefault(msg, 2, 0),
applyLocationRequestMode: jspb.Message.getBooleanFieldWithDefault(msg, 2001, false),
levelDishMode: jspb.Message.getFieldWithDefault(msg, 3, 0),
applyLevelDishMode: jspb.Message.getBooleanFieldWithDefault(msg, 3001, false),
powerSaveStartMinutes: jspb.Message.getFieldWithDefault(msg, 4, 0),
applyPowerSaveStartMinutes: jspb.Message.getBooleanFieldWithDefault(msg, 4001, false),
powerSaveDurationMinutes: jspb.Message.getFieldWithDefault(msg, 5, 0),
applyPowerSaveDurationMinutes: jspb.Message.getBooleanFieldWithDefault(msg, 5001, false),
powerSaveMode: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
applyPowerSaveMode: jspb.Message.getBooleanFieldWithDefault(msg, 6001, false),
swupdateThreeDayDeferralEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
applySwupdateThreeDayDeferralEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 7001, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.DishConfig}
 */
proto.SpaceX.API.Device.DishConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.DishConfig;
  return proto.SpaceX.API.Device.DishConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.DishConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.DishConfig}
 */
proto.SpaceX.API.Device.DishConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.SpaceX.API.Device.DishConfig.SnowMeltMode} */ (reader.readEnum());
      msg.setSnowMeltMode(value);
      break;
    case 1001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplySnowMeltMode(value);
      break;
    case 2:
      var value = /** @type {!proto.SpaceX.API.Device.DishConfig.LocationRequestMode} */ (reader.readEnum());
      msg.setLocationRequestMode(value);
      break;
    case 2001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyLocationRequestMode(value);
      break;
    case 3:
      var value = /** @type {!proto.SpaceX.API.Device.DishConfig.LevelDishMode} */ (reader.readEnum());
      msg.setLevelDishMode(value);
      break;
    case 3001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyLevelDishMode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPowerSaveStartMinutes(value);
      break;
    case 4001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyPowerSaveStartMinutes(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPowerSaveDurationMinutes(value);
      break;
    case 5001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyPowerSaveDurationMinutes(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPowerSaveMode(value);
      break;
    case 6001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyPowerSaveMode(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSwupdateThreeDayDeferralEnabled(value);
      break;
    case 7001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplySwupdateThreeDayDeferralEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.DishConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.DishConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.DishConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.DishConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnowMeltMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getApplySnowMeltMode();
  if (f) {
    writer.writeBool(
      1001,
      f
    );
  }
  f = message.getLocationRequestMode();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getApplyLocationRequestMode();
  if (f) {
    writer.writeBool(
      2001,
      f
    );
  }
  f = message.getLevelDishMode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getApplyLevelDishMode();
  if (f) {
    writer.writeBool(
      3001,
      f
    );
  }
  f = message.getPowerSaveStartMinutes();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getApplyPowerSaveStartMinutes();
  if (f) {
    writer.writeBool(
      4001,
      f
    );
  }
  f = message.getPowerSaveDurationMinutes();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getApplyPowerSaveDurationMinutes();
  if (f) {
    writer.writeBool(
      5001,
      f
    );
  }
  f = message.getPowerSaveMode();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getApplyPowerSaveMode();
  if (f) {
    writer.writeBool(
      6001,
      f
    );
  }
  f = message.getSwupdateThreeDayDeferralEnabled();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getApplySwupdateThreeDayDeferralEnabled();
  if (f) {
    writer.writeBool(
      7001,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.SpaceX.API.Device.DishConfig.SnowMeltMode = {
  AUTO: 0,
  ALWAYS_ON: 1,
  ALWAYS_OFF: 2
};

/**
 * @enum {number}
 */
proto.SpaceX.API.Device.DishConfig.LocationRequestMode = {
  NONE: 0,
  LOCAL: 1
};

/**
 * @enum {number}
 */
proto.SpaceX.API.Device.DishConfig.LevelDishMode = {
  TILT_LIKE_NORMAL: 0,
  FORCE_LEVEL: 1
};

/**
 * optional SnowMeltMode snow_melt_mode = 1;
 * @return {!proto.SpaceX.API.Device.DishConfig.SnowMeltMode}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getSnowMeltMode = function() {
  return /** @type {!proto.SpaceX.API.Device.DishConfig.SnowMeltMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.SpaceX.API.Device.DishConfig.SnowMeltMode} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setSnowMeltMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool apply_snow_melt_mode = 1001;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getApplySnowMeltMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1001, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setApplySnowMeltMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1001, value);
};


/**
 * optional LocationRequestMode location_request_mode = 2;
 * @return {!proto.SpaceX.API.Device.DishConfig.LocationRequestMode}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getLocationRequestMode = function() {
  return /** @type {!proto.SpaceX.API.Device.DishConfig.LocationRequestMode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.SpaceX.API.Device.DishConfig.LocationRequestMode} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setLocationRequestMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool apply_location_request_mode = 2001;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getApplyLocationRequestMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2001, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setApplyLocationRequestMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2001, value);
};


/**
 * optional LevelDishMode level_dish_mode = 3;
 * @return {!proto.SpaceX.API.Device.DishConfig.LevelDishMode}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getLevelDishMode = function() {
  return /** @type {!proto.SpaceX.API.Device.DishConfig.LevelDishMode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.SpaceX.API.Device.DishConfig.LevelDishMode} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setLevelDishMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool apply_level_dish_mode = 3001;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getApplyLevelDishMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3001, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setApplyLevelDishMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3001, value);
};


/**
 * optional uint32 power_save_start_minutes = 4;
 * @return {number}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getPowerSaveStartMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setPowerSaveStartMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool apply_power_save_start_minutes = 4001;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getApplyPowerSaveStartMinutes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4001, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setApplyPowerSaveStartMinutes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4001, value);
};


/**
 * optional uint32 power_save_duration_minutes = 5;
 * @return {number}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getPowerSaveDurationMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setPowerSaveDurationMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool apply_power_save_duration_minutes = 5001;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getApplyPowerSaveDurationMinutes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5001, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setApplyPowerSaveDurationMinutes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5001, value);
};


/**
 * optional bool power_save_mode = 6;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getPowerSaveMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setPowerSaveMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool apply_power_save_mode = 6001;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getApplyPowerSaveMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6001, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setApplyPowerSaveMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6001, value);
};


/**
 * optional bool swupdate_three_day_deferral_enabled = 7;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getSwupdateThreeDayDeferralEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setSwupdateThreeDayDeferralEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool apply_swupdate_three_day_deferral_enabled = 7001;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishConfig.prototype.getApplySwupdateThreeDayDeferralEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7001, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishConfig} returns this
 */
proto.SpaceX.API.Device.DishConfig.prototype.setApplySwupdateThreeDayDeferralEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7001, value);
};



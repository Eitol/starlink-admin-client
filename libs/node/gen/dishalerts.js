// source: spacex/api/device/dish.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.SpaceX.API.Device.DishAlerts');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.DishAlerts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpaceX.API.Device.DishAlerts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.DishAlerts.displayName = 'proto.SpaceX.API.Device.DishAlerts';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.DishAlerts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.DishAlerts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.DishAlerts.toObject = function(includeInstance, msg) {
  var f, obj = {
motorsStuck: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
thermalThrottle: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
thermalShutdown: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
mastNotNearVertical: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
unexpectedLocation: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
slowEthernetSpeeds: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
slowEthernetSpeeds100: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
roaming: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
installPending: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
isHeating: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
powerSupplyThermalThrottle: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
isPowerSaveIdle: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
movingWhileNotMobile: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
movingTooFastForPolicy: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
dbfTelemStale: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
lowMotorCurrent: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
lowerSignalThanPredicted: jspb.Message.getBooleanFieldWithDefault(msg, 17, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.DishAlerts}
 */
proto.SpaceX.API.Device.DishAlerts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.DishAlerts;
  return proto.SpaceX.API.Device.DishAlerts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.DishAlerts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.DishAlerts}
 */
proto.SpaceX.API.Device.DishAlerts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMotorsStuck(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setThermalThrottle(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setThermalShutdown(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMastNotNearVertical(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnexpectedLocation(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSlowEthernetSpeeds(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSlowEthernetSpeeds100(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRoaming(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInstallPending(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHeating(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPowerSupplyThermalThrottle(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPowerSaveIdle(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMovingWhileNotMobile(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMovingTooFastForPolicy(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDbfTelemStale(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLowMotorCurrent(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLowerSignalThanPredicted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.DishAlerts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.DishAlerts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.DishAlerts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMotorsStuck();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getThermalThrottle();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getThermalShutdown();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMastNotNearVertical();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getUnexpectedLocation();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSlowEthernetSpeeds();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getSlowEthernetSpeeds100();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getRoaming();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getInstallPending();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIsHeating();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPowerSupplyThermalThrottle();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsPowerSaveIdle();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getMovingWhileNotMobile();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getMovingTooFastForPolicy();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getDbfTelemStale();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getLowMotorCurrent();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getLowerSignalThanPredicted();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
};


/**
 * optional bool motors_stuck = 1;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getMotorsStuck = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setMotorsStuck = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool thermal_throttle = 3;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getThermalThrottle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setThermalThrottle = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool thermal_shutdown = 2;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getThermalShutdown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setThermalShutdown = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool mast_not_near_vertical = 5;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getMastNotNearVertical = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setMastNotNearVertical = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool unexpected_location = 4;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getUnexpectedLocation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setUnexpectedLocation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool slow_ethernet_speeds = 6;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getSlowEthernetSpeeds = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setSlowEthernetSpeeds = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool slow_ethernet_speeds_100 = 18;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getSlowEthernetSpeeds100 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setSlowEthernetSpeeds100 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool roaming = 7;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getRoaming = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setRoaming = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool install_pending = 8;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getInstallPending = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setInstallPending = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool is_heating = 9;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getIsHeating = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setIsHeating = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool power_supply_thermal_throttle = 10;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getPowerSupplyThermalThrottle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setPowerSupplyThermalThrottle = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool is_power_save_idle = 11;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getIsPowerSaveIdle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setIsPowerSaveIdle = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool moving_while_not_mobile = 12;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getMovingWhileNotMobile = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setMovingWhileNotMobile = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool moving_too_fast_for_policy = 15;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getMovingTooFastForPolicy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setMovingTooFastForPolicy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool dbf_telem_stale = 14;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getDbfTelemStale = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setDbfTelemStale = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool low_motor_current = 16;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getLowMotorCurrent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setLowMotorCurrent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool lower_signal_than_predicted = 17;
 * @return {boolean}
 */
proto.SpaceX.API.Device.DishAlerts.prototype.getLowerSignalThanPredicted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SpaceX.API.Device.DishAlerts} returns this
 */
proto.SpaceX.API.Device.DishAlerts.prototype.setLowerSignalThanPredicted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};



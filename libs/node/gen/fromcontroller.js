// source: spacex/api/device/wifi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.SpaceX.API.Device.FromController');
goog.provide('proto.SpaceX.API.Device.FromController.MessageCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.SpaceX.API.Device.BackhaulRequest');
goog.require('proto.SpaceX.API.Device.MeshSpeedtestRequest');
goog.require('proto.SpaceX.API.Device.SteerClientRequest');
goog.require('proto.SpaceX.API.Device.WifiBtmRequest');
goog.require('proto.SpaceX.API.Device.WifiConfig');
goog.require('proto.SpaceX.API.Device.WifiGlobalMeshStatus');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpaceX.API.Device.FromController = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.SpaceX.API.Device.FromController.oneofGroups_);
};
goog.inherits(proto.SpaceX.API.Device.FromController, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpaceX.API.Device.FromController.displayName = 'proto.SpaceX.API.Device.FromController';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.SpaceX.API.Device.FromController.oneofGroups_ = [[1,2,4,5,6,7]];

/**
 * @enum {number}
 */
proto.SpaceX.API.Device.FromController.MessageCase = {
  MESSAGE_NOT_SET: 0,
  WIFI_CONFIG: 1,
  STEER_CLIENT_REQUEST: 2,
  STATUS: 4,
  BACKHAUL_REQUEST: 5,
  START_SPEEDTEST: 6,
  WIFI_BTM_REQUEST: 7
};

/**
 * @return {proto.SpaceX.API.Device.FromController.MessageCase}
 */
proto.SpaceX.API.Device.FromController.prototype.getMessageCase = function() {
  return /** @type {proto.SpaceX.API.Device.FromController.MessageCase} */(jspb.Message.computeOneofCase(this, proto.SpaceX.API.Device.FromController.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpaceX.API.Device.FromController.prototype.toObject = function(opt_includeInstance) {
  return proto.SpaceX.API.Device.FromController.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpaceX.API.Device.FromController} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.FromController.toObject = function(includeInstance, msg) {
  var f, obj = {
apiVersion: jspb.Message.getFieldWithDefault(msg, 3, 0),
wifiConfig: (f = msg.getWifiConfig()) && proto.SpaceX.API.Device.WifiConfig.toObject(includeInstance, f),
steerClientRequest: (f = msg.getSteerClientRequest()) && proto.SpaceX.API.Device.SteerClientRequest.toObject(includeInstance, f),
status: (f = msg.getStatus()) && proto.SpaceX.API.Device.WifiGlobalMeshStatus.toObject(includeInstance, f),
backhaulRequest: (f = msg.getBackhaulRequest()) && proto.SpaceX.API.Device.BackhaulRequest.toObject(includeInstance, f),
startSpeedtest: (f = msg.getStartSpeedtest()) && proto.SpaceX.API.Device.MeshSpeedtestRequest.toObject(includeInstance, f),
wifiBtmRequest: (f = msg.getWifiBtmRequest()) && proto.SpaceX.API.Device.WifiBtmRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpaceX.API.Device.FromController}
 */
proto.SpaceX.API.Device.FromController.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpaceX.API.Device.FromController;
  return proto.SpaceX.API.Device.FromController.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpaceX.API.Device.FromController} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpaceX.API.Device.FromController}
 */
proto.SpaceX.API.Device.FromController.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setApiVersion(value);
      break;
    case 1:
      var value = new proto.SpaceX.API.Device.WifiConfig;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiConfig.deserializeBinaryFromReader);
      msg.setWifiConfig(value);
      break;
    case 2:
      var value = new proto.SpaceX.API.Device.SteerClientRequest;
      reader.readMessage(value,proto.SpaceX.API.Device.SteerClientRequest.deserializeBinaryFromReader);
      msg.setSteerClientRequest(value);
      break;
    case 4:
      var value = new proto.SpaceX.API.Device.WifiGlobalMeshStatus;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiGlobalMeshStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 5:
      var value = new proto.SpaceX.API.Device.BackhaulRequest;
      reader.readMessage(value,proto.SpaceX.API.Device.BackhaulRequest.deserializeBinaryFromReader);
      msg.setBackhaulRequest(value);
      break;
    case 6:
      var value = new proto.SpaceX.API.Device.MeshSpeedtestRequest;
      reader.readMessage(value,proto.SpaceX.API.Device.MeshSpeedtestRequest.deserializeBinaryFromReader);
      msg.setStartSpeedtest(value);
      break;
    case 7:
      var value = new proto.SpaceX.API.Device.WifiBtmRequest;
      reader.readMessage(value,proto.SpaceX.API.Device.WifiBtmRequest.deserializeBinaryFromReader);
      msg.setWifiBtmRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpaceX.API.Device.FromController.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpaceX.API.Device.FromController.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpaceX.API.Device.FromController} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpaceX.API.Device.FromController.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiVersion();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWifiConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.SpaceX.API.Device.WifiConfig.serializeBinaryToWriter
    );
  }
  f = message.getSteerClientRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.SpaceX.API.Device.SteerClientRequest.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.SpaceX.API.Device.WifiGlobalMeshStatus.serializeBinaryToWriter
    );
  }
  f = message.getBackhaulRequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.SpaceX.API.Device.BackhaulRequest.serializeBinaryToWriter
    );
  }
  f = message.getStartSpeedtest();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.SpaceX.API.Device.MeshSpeedtestRequest.serializeBinaryToWriter
    );
  }
  f = message.getWifiBtmRequest();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.SpaceX.API.Device.WifiBtmRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 api_version = 3;
 * @return {number}
 */
proto.SpaceX.API.Device.FromController.prototype.getApiVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SpaceX.API.Device.FromController} returns this
 */
proto.SpaceX.API.Device.FromController.prototype.setApiVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional WifiConfig wifi_config = 1;
 * @return {?proto.SpaceX.API.Device.WifiConfig}
 */
proto.SpaceX.API.Device.FromController.prototype.getWifiConfig = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiConfig} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiConfig, 1));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiConfig|undefined} value
 * @return {!proto.SpaceX.API.Device.FromController} returns this
*/
proto.SpaceX.API.Device.FromController.prototype.setWifiConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.SpaceX.API.Device.FromController.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.FromController} returns this
 */
proto.SpaceX.API.Device.FromController.prototype.clearWifiConfig = function() {
  return this.setWifiConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.FromController.prototype.hasWifiConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SteerClientRequest steer_client_request = 2;
 * @return {?proto.SpaceX.API.Device.SteerClientRequest}
 */
proto.SpaceX.API.Device.FromController.prototype.getSteerClientRequest = function() {
  return /** @type{?proto.SpaceX.API.Device.SteerClientRequest} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.SteerClientRequest, 2));
};


/**
 * @param {?proto.SpaceX.API.Device.SteerClientRequest|undefined} value
 * @return {!proto.SpaceX.API.Device.FromController} returns this
*/
proto.SpaceX.API.Device.FromController.prototype.setSteerClientRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.SpaceX.API.Device.FromController.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.FromController} returns this
 */
proto.SpaceX.API.Device.FromController.prototype.clearSteerClientRequest = function() {
  return this.setSteerClientRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.FromController.prototype.hasSteerClientRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional WifiGlobalMeshStatus status = 4;
 * @return {?proto.SpaceX.API.Device.WifiGlobalMeshStatus}
 */
proto.SpaceX.API.Device.FromController.prototype.getStatus = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiGlobalMeshStatus} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiGlobalMeshStatus, 4));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiGlobalMeshStatus|undefined} value
 * @return {!proto.SpaceX.API.Device.FromController} returns this
*/
proto.SpaceX.API.Device.FromController.prototype.setStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.SpaceX.API.Device.FromController.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.FromController} returns this
 */
proto.SpaceX.API.Device.FromController.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.FromController.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BackhaulRequest backhaul_request = 5;
 * @return {?proto.SpaceX.API.Device.BackhaulRequest}
 */
proto.SpaceX.API.Device.FromController.prototype.getBackhaulRequest = function() {
  return /** @type{?proto.SpaceX.API.Device.BackhaulRequest} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.BackhaulRequest, 5));
};


/**
 * @param {?proto.SpaceX.API.Device.BackhaulRequest|undefined} value
 * @return {!proto.SpaceX.API.Device.FromController} returns this
*/
proto.SpaceX.API.Device.FromController.prototype.setBackhaulRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.SpaceX.API.Device.FromController.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.FromController} returns this
 */
proto.SpaceX.API.Device.FromController.prototype.clearBackhaulRequest = function() {
  return this.setBackhaulRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.FromController.prototype.hasBackhaulRequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MeshSpeedtestRequest start_speedtest = 6;
 * @return {?proto.SpaceX.API.Device.MeshSpeedtestRequest}
 */
proto.SpaceX.API.Device.FromController.prototype.getStartSpeedtest = function() {
  return /** @type{?proto.SpaceX.API.Device.MeshSpeedtestRequest} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.MeshSpeedtestRequest, 6));
};


/**
 * @param {?proto.SpaceX.API.Device.MeshSpeedtestRequest|undefined} value
 * @return {!proto.SpaceX.API.Device.FromController} returns this
*/
proto.SpaceX.API.Device.FromController.prototype.setStartSpeedtest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.SpaceX.API.Device.FromController.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.FromController} returns this
 */
proto.SpaceX.API.Device.FromController.prototype.clearStartSpeedtest = function() {
  return this.setStartSpeedtest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.FromController.prototype.hasStartSpeedtest = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional WifiBtmRequest wifi_btm_request = 7;
 * @return {?proto.SpaceX.API.Device.WifiBtmRequest}
 */
proto.SpaceX.API.Device.FromController.prototype.getWifiBtmRequest = function() {
  return /** @type{?proto.SpaceX.API.Device.WifiBtmRequest} */ (
    jspb.Message.getWrapperField(this, proto.SpaceX.API.Device.WifiBtmRequest, 7));
};


/**
 * @param {?proto.SpaceX.API.Device.WifiBtmRequest|undefined} value
 * @return {!proto.SpaceX.API.Device.FromController} returns this
*/
proto.SpaceX.API.Device.FromController.prototype.setWifiBtmRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.SpaceX.API.Device.FromController.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SpaceX.API.Device.FromController} returns this
 */
proto.SpaceX.API.Device.FromController.prototype.clearWifiBtmRequest = function() {
  return this.setWifiBtmRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpaceX.API.Device.FromController.prototype.hasWifiBtmRequest = function() {
  return jspb.Message.getField(this, 7) != null;
};



// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi.proto
// Protobuf Java Version: 4.28.3

package com.SpaceX.API.Device;

/**
 * Protobuf type {@code SpaceX.API.Device.WifiGetClientHistoryResponse}
 */
public final class WifiGetClientHistoryResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:SpaceX.API.Device.WifiGetClientHistoryResponse)
    WifiGetClientHistoryResponseOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      WifiGetClientHistoryResponse.class.getName());
  }
  // Use WifiGetClientHistoryResponse.newBuilder() to construct.
  private WifiGetClientHistoryResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private WifiGetClientHistoryResponse() {
    txThroughputMbps_ = emptyFloatList();
    rxThroughputMbps_ = emptyFloatList();
    throughputLimited_ = emptyIntList();
    rxRateMbps_ = emptyFloatList();
    rssi_ = com.google.protobuf.ByteString.EMPTY;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.SpaceX.API.Device.WifiProto.internal_static_SpaceX_API_Device_WifiGetClientHistoryResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.SpaceX.API.Device.WifiProto.internal_static_SpaceX_API_Device_WifiGetClientHistoryResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.SpaceX.API.Device.WifiGetClientHistoryResponse.class, com.SpaceX.API.Device.WifiGetClientHistoryResponse.Builder.class);
  }

  /**
   * Protobuf enum {@code SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason}
   */
  public enum WifiLimitedReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LIMIT_UNKNOWN = 0;</code>
     */
    LIMIT_UNKNOWN(0),
    /**
     * <code>LIMIT_NONE = 1;</code>
     */
    LIMIT_NONE(1),
    /**
     * <code>LIMIT_UNCLASSIFIED = 2;</code>
     */
    LIMIT_UNCLASSIFIED(2),
    /**
     * <code>LIMIT_DROPPED_PACKETS = 3;</code>
     */
    LIMIT_DROPPED_PACKETS(3),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        WifiLimitedReason.class.getName());
    }
    /**
     * <code>LIMIT_UNKNOWN = 0;</code>
     */
    public static final int LIMIT_UNKNOWN_VALUE = 0;
    /**
     * <code>LIMIT_NONE = 1;</code>
     */
    public static final int LIMIT_NONE_VALUE = 1;
    /**
     * <code>LIMIT_UNCLASSIFIED = 2;</code>
     */
    public static final int LIMIT_UNCLASSIFIED_VALUE = 2;
    /**
     * <code>LIMIT_DROPPED_PACKETS = 3;</code>
     */
    public static final int LIMIT_DROPPED_PACKETS_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WifiLimitedReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WifiLimitedReason forNumber(int value) {
      switch (value) {
        case 0: return LIMIT_UNKNOWN;
        case 1: return LIMIT_NONE;
        case 2: return LIMIT_UNCLASSIFIED;
        case 3: return LIMIT_DROPPED_PACKETS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WifiLimitedReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WifiLimitedReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WifiLimitedReason>() {
            public WifiLimitedReason findValueByNumber(int number) {
              return WifiLimitedReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.SpaceX.API.Device.WifiGetClientHistoryResponse.getDescriptor().getEnumTypes().get(0);
    }

    private static final WifiLimitedReason[] VALUES = values();

    public static WifiLimitedReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WifiLimitedReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason)
  }

  public static final int CURRENT_FIELD_NUMBER = 1;
  private long current_ = 0L;
  /**
   * <code>uint64 current = 1 [json_name = "current"];</code>
   * @return The current.
   */
  @java.lang.Override
  public long getCurrent() {
    return current_;
  }

  public static final int TX_THROUGHPUT_MBPS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.FloatList txThroughputMbps_ =
      emptyFloatList();
  /**
   * <code>repeated float tx_throughput_mbps = 2 [json_name = "txThroughputMbps"];</code>
   * @return A list containing the txThroughputMbps.
   */
  @java.lang.Override
  public java.util.List<java.lang.Float>
      getTxThroughputMbpsList() {
    return txThroughputMbps_;
  }
  /**
   * <code>repeated float tx_throughput_mbps = 2 [json_name = "txThroughputMbps"];</code>
   * @return The count of txThroughputMbps.
   */
  public int getTxThroughputMbpsCount() {
    return txThroughputMbps_.size();
  }
  /**
   * <code>repeated float tx_throughput_mbps = 2 [json_name = "txThroughputMbps"];</code>
   * @param index The index of the element to return.
   * @return The txThroughputMbps at the given index.
   */
  public float getTxThroughputMbps(int index) {
    return txThroughputMbps_.getFloat(index);
  }
  private int txThroughputMbpsMemoizedSerializedSize = -1;

  public static final int RX_THROUGHPUT_MBPS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.FloatList rxThroughputMbps_ =
      emptyFloatList();
  /**
   * <code>repeated float rx_throughput_mbps = 3 [json_name = "rxThroughputMbps"];</code>
   * @return A list containing the rxThroughputMbps.
   */
  @java.lang.Override
  public java.util.List<java.lang.Float>
      getRxThroughputMbpsList() {
    return rxThroughputMbps_;
  }
  /**
   * <code>repeated float rx_throughput_mbps = 3 [json_name = "rxThroughputMbps"];</code>
   * @return The count of rxThroughputMbps.
   */
  public int getRxThroughputMbpsCount() {
    return rxThroughputMbps_.size();
  }
  /**
   * <code>repeated float rx_throughput_mbps = 3 [json_name = "rxThroughputMbps"];</code>
   * @param index The index of the element to return.
   * @return The rxThroughputMbps at the given index.
   */
  public float getRxThroughputMbps(int index) {
    return rxThroughputMbps_.getFloat(index);
  }
  private int rxThroughputMbpsMemoizedSerializedSize = -1;

  public static final int THROUGHPUT_LIMITED_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList throughputLimited_;
  private static final com.google.protobuf.Internal.IntListAdapter.IntConverter<
      com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason> throughputLimited_converter_ =
          new com.google.protobuf.Internal.IntListAdapter.IntConverter<
              com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason>() {
            public com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason convert(int from) {
              com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason result = com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason.forNumber(from);
              return result == null ? com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
   * @return A list containing the throughputLimited.
   */
  @java.lang.Override
  public java.util.List<com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason> getThroughputLimitedList() {
    return new com.google.protobuf.Internal.IntListAdapter<
        com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason>(throughputLimited_, throughputLimited_converter_);
  }
  /**
   * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
   * @return The count of throughputLimited.
   */
  @java.lang.Override
  public int getThroughputLimitedCount() {
    return throughputLimited_.size();
  }
  /**
   * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
   * @param index The index of the element to return.
   * @return The throughputLimited at the given index.
   */
  @java.lang.Override
  public com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason getThroughputLimited(int index) {
    return throughputLimited_converter_.convert(throughputLimited_.getInt(index));
  }
  /**
   * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
   * @return A list containing the enum numeric values on the wire for throughputLimited.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getThroughputLimitedValueList() {
    return throughputLimited_;
  }
  /**
   * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of throughputLimited at the given index.
   */
  @java.lang.Override
  public int getThroughputLimitedValue(int index) {
    return throughputLimited_.getInt(index);
  }
  private int throughputLimitedMemoizedSerializedSize;

  public static final int RX_RATE_MBPS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.FloatList rxRateMbps_ =
      emptyFloatList();
  /**
   * <code>repeated float rx_rate_mbps = 5 [json_name = "rxRateMbps"];</code>
   * @return A list containing the rxRateMbps.
   */
  @java.lang.Override
  public java.util.List<java.lang.Float>
      getRxRateMbpsList() {
    return rxRateMbps_;
  }
  /**
   * <code>repeated float rx_rate_mbps = 5 [json_name = "rxRateMbps"];</code>
   * @return The count of rxRateMbps.
   */
  public int getRxRateMbpsCount() {
    return rxRateMbps_.size();
  }
  /**
   * <code>repeated float rx_rate_mbps = 5 [json_name = "rxRateMbps"];</code>
   * @param index The index of the element to return.
   * @return The rxRateMbps at the given index.
   */
  public float getRxRateMbps(int index) {
    return rxRateMbps_.getFloat(index);
  }
  private int rxRateMbpsMemoizedSerializedSize = -1;

  public static final int RSSI_FIELD_NUMBER = 6;
  private com.google.protobuf.ByteString rssi_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes rssi = 6 [json_name = "rssi"];</code>
   * @return The rssi.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getRssi() {
    return rssi_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (current_ != 0L) {
      output.writeUInt64(1, current_);
    }
    if (getTxThroughputMbpsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(txThroughputMbpsMemoizedSerializedSize);
    }
    for (int i = 0; i < txThroughputMbps_.size(); i++) {
      output.writeFloatNoTag(txThroughputMbps_.getFloat(i));
    }
    if (getRxThroughputMbpsList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(rxThroughputMbpsMemoizedSerializedSize);
    }
    for (int i = 0; i < rxThroughputMbps_.size(); i++) {
      output.writeFloatNoTag(rxThroughputMbps_.getFloat(i));
    }
    if (getThroughputLimitedList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(throughputLimitedMemoizedSerializedSize);
    }
    for (int i = 0; i < throughputLimited_.size(); i++) {
      output.writeEnumNoTag(throughputLimited_.getInt(i));
    }
    if (getRxRateMbpsList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(rxRateMbpsMemoizedSerializedSize);
    }
    for (int i = 0; i < rxRateMbps_.size(); i++) {
      output.writeFloatNoTag(rxRateMbps_.getFloat(i));
    }
    if (!rssi_.isEmpty()) {
      output.writeBytes(6, rssi_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (current_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, current_);
    }
    {
      int dataSize = 0;
      dataSize = 4 * getTxThroughputMbpsList().size();
      size += dataSize;
      if (!getTxThroughputMbpsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      txThroughputMbpsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getRxThroughputMbpsList().size();
      size += dataSize;
      if (!getRxThroughputMbpsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      rxThroughputMbpsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < throughputLimited_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(throughputLimited_.getInt(i));
      }
      size += dataSize;
      if (!getThroughputLimitedList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }throughputLimitedMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getRxRateMbpsList().size();
      size += dataSize;
      if (!getRxRateMbpsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      rxRateMbpsMemoizedSerializedSize = dataSize;
    }
    if (!rssi_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(6, rssi_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.SpaceX.API.Device.WifiGetClientHistoryResponse)) {
      return super.equals(obj);
    }
    com.SpaceX.API.Device.WifiGetClientHistoryResponse other = (com.SpaceX.API.Device.WifiGetClientHistoryResponse) obj;

    if (getCurrent()
        != other.getCurrent()) return false;
    if (!getTxThroughputMbpsList()
        .equals(other.getTxThroughputMbpsList())) return false;
    if (!getRxThroughputMbpsList()
        .equals(other.getRxThroughputMbpsList())) return false;
    if (!throughputLimited_.equals(other.throughputLimited_)) return false;
    if (!getRxRateMbpsList()
        .equals(other.getRxRateMbpsList())) return false;
    if (!getRssi()
        .equals(other.getRssi())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CURRENT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCurrent());
    if (getTxThroughputMbpsCount() > 0) {
      hash = (37 * hash) + TX_THROUGHPUT_MBPS_FIELD_NUMBER;
      hash = (53 * hash) + getTxThroughputMbpsList().hashCode();
    }
    if (getRxThroughputMbpsCount() > 0) {
      hash = (37 * hash) + RX_THROUGHPUT_MBPS_FIELD_NUMBER;
      hash = (53 * hash) + getRxThroughputMbpsList().hashCode();
    }
    if (getThroughputLimitedCount() > 0) {
      hash = (37 * hash) + THROUGHPUT_LIMITED_FIELD_NUMBER;
      hash = (53 * hash) + throughputLimited_.hashCode();
    }
    if (getRxRateMbpsCount() > 0) {
      hash = (37 * hash) + RX_RATE_MBPS_FIELD_NUMBER;
      hash = (53 * hash) + getRxRateMbpsList().hashCode();
    }
    hash = (37 * hash) + RSSI_FIELD_NUMBER;
    hash = (53 * hash) + getRssi().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.SpaceX.API.Device.WifiGetClientHistoryResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code SpaceX.API.Device.WifiGetClientHistoryResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:SpaceX.API.Device.WifiGetClientHistoryResponse)
      com.SpaceX.API.Device.WifiGetClientHistoryResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.SpaceX.API.Device.WifiProto.internal_static_SpaceX_API_Device_WifiGetClientHistoryResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.SpaceX.API.Device.WifiProto.internal_static_SpaceX_API_Device_WifiGetClientHistoryResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.SpaceX.API.Device.WifiGetClientHistoryResponse.class, com.SpaceX.API.Device.WifiGetClientHistoryResponse.Builder.class);
    }

    // Construct using com.SpaceX.API.Device.WifiGetClientHistoryResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      current_ = 0L;
      txThroughputMbps_ = emptyFloatList();
      rxThroughputMbps_ = emptyFloatList();
      throughputLimited_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000008);
      rxRateMbps_ = emptyFloatList();
      rssi_ = com.google.protobuf.ByteString.EMPTY;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.SpaceX.API.Device.WifiProto.internal_static_SpaceX_API_Device_WifiGetClientHistoryResponse_descriptor;
    }

    @java.lang.Override
    public com.SpaceX.API.Device.WifiGetClientHistoryResponse getDefaultInstanceForType() {
      return com.SpaceX.API.Device.WifiGetClientHistoryResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.SpaceX.API.Device.WifiGetClientHistoryResponse build() {
      com.SpaceX.API.Device.WifiGetClientHistoryResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.SpaceX.API.Device.WifiGetClientHistoryResponse buildPartial() {
      com.SpaceX.API.Device.WifiGetClientHistoryResponse result = new com.SpaceX.API.Device.WifiGetClientHistoryResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.SpaceX.API.Device.WifiGetClientHistoryResponse result) {
      if (((bitField0_ & 0x00000008) != 0)) {
        throughputLimited_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.throughputLimited_ = throughputLimited_;
    }

    private void buildPartial0(com.SpaceX.API.Device.WifiGetClientHistoryResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.current_ = current_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        txThroughputMbps_.makeImmutable();
        result.txThroughputMbps_ = txThroughputMbps_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        rxThroughputMbps_.makeImmutable();
        result.rxThroughputMbps_ = rxThroughputMbps_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        rxRateMbps_.makeImmutable();
        result.rxRateMbps_ = rxRateMbps_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.rssi_ = rssi_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.SpaceX.API.Device.WifiGetClientHistoryResponse) {
        return mergeFrom((com.SpaceX.API.Device.WifiGetClientHistoryResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.SpaceX.API.Device.WifiGetClientHistoryResponse other) {
      if (other == com.SpaceX.API.Device.WifiGetClientHistoryResponse.getDefaultInstance()) return this;
      if (other.getCurrent() != 0L) {
        setCurrent(other.getCurrent());
      }
      if (!other.txThroughputMbps_.isEmpty()) {
        if (txThroughputMbps_.isEmpty()) {
          txThroughputMbps_ = other.txThroughputMbps_;
          txThroughputMbps_.makeImmutable();
          bitField0_ |= 0x00000002;
        } else {
          ensureTxThroughputMbpsIsMutable();
          txThroughputMbps_.addAll(other.txThroughputMbps_);
        }
        onChanged();
      }
      if (!other.rxThroughputMbps_.isEmpty()) {
        if (rxThroughputMbps_.isEmpty()) {
          rxThroughputMbps_ = other.rxThroughputMbps_;
          rxThroughputMbps_.makeImmutable();
          bitField0_ |= 0x00000004;
        } else {
          ensureRxThroughputMbpsIsMutable();
          rxThroughputMbps_.addAll(other.rxThroughputMbps_);
        }
        onChanged();
      }
      if (!other.throughputLimited_.isEmpty()) {
        if (throughputLimited_.isEmpty()) {
          throughputLimited_ = other.throughputLimited_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureThroughputLimitedIsMutable();
          throughputLimited_.addAll(other.throughputLimited_);
        }
        onChanged();
      }
      if (!other.rxRateMbps_.isEmpty()) {
        if (rxRateMbps_.isEmpty()) {
          rxRateMbps_ = other.rxRateMbps_;
          rxRateMbps_.makeImmutable();
          bitField0_ |= 0x00000010;
        } else {
          ensureRxRateMbpsIsMutable();
          rxRateMbps_.addAll(other.rxRateMbps_);
        }
        onChanged();
      }
      if (other.getRssi() != com.google.protobuf.ByteString.EMPTY) {
        setRssi(other.getRssi());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              current_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 21: {
              float v = input.readFloat();
              ensureTxThroughputMbpsIsMutable();
              txThroughputMbps_.addFloat(v);
              break;
            } // case 21
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              int alloc = length > 4096 ? 4096 : length;
              ensureTxThroughputMbpsIsMutable(alloc / 4);
              while (input.getBytesUntilLimit() > 0) {
                txThroughputMbps_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            } // case 18
            case 29: {
              float v = input.readFloat();
              ensureRxThroughputMbpsIsMutable();
              rxThroughputMbps_.addFloat(v);
              break;
            } // case 29
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              int alloc = length > 4096 ? 4096 : length;
              ensureRxThroughputMbpsIsMutable(alloc / 4);
              while (input.getBytesUntilLimit() > 0) {
                rxThroughputMbps_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            } // case 26
            case 32: {
              int tmpRaw = input.readEnum();
              ensureThroughputLimitedIsMutable();
              throughputLimited_.addInt(tmpRaw);
              break;
            } // case 32
            case 34: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureThroughputLimitedIsMutable();
                throughputLimited_.addInt(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 34
            case 45: {
              float v = input.readFloat();
              ensureRxRateMbpsIsMutable();
              rxRateMbps_.addFloat(v);
              break;
            } // case 45
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              int alloc = length > 4096 ? 4096 : length;
              ensureRxRateMbpsIsMutable(alloc / 4);
              while (input.getBytesUntilLimit() > 0) {
                rxRateMbps_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            } // case 42
            case 50: {
              rssi_ = input.readBytes();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long current_ ;
    /**
     * <code>uint64 current = 1 [json_name = "current"];</code>
     * @return The current.
     */
    @java.lang.Override
    public long getCurrent() {
      return current_;
    }
    /**
     * <code>uint64 current = 1 [json_name = "current"];</code>
     * @param value The current to set.
     * @return This builder for chaining.
     */
    public Builder setCurrent(long value) {

      current_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 current = 1 [json_name = "current"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCurrent() {
      bitField0_ = (bitField0_ & ~0x00000001);
      current_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList txThroughputMbps_ = emptyFloatList();
    private void ensureTxThroughputMbpsIsMutable() {
      if (!txThroughputMbps_.isModifiable()) {
        txThroughputMbps_ = makeMutableCopy(txThroughputMbps_);
      }
      bitField0_ |= 0x00000002;
    }
    private void ensureTxThroughputMbpsIsMutable(int capacity) {
      if (!txThroughputMbps_.isModifiable()) {
        txThroughputMbps_ = makeMutableCopy(txThroughputMbps_, capacity);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>repeated float tx_throughput_mbps = 2 [json_name = "txThroughputMbps"];</code>
     * @return A list containing the txThroughputMbps.
     */
    public java.util.List<java.lang.Float>
        getTxThroughputMbpsList() {
      txThroughputMbps_.makeImmutable();
      return txThroughputMbps_;
    }
    /**
     * <code>repeated float tx_throughput_mbps = 2 [json_name = "txThroughputMbps"];</code>
     * @return The count of txThroughputMbps.
     */
    public int getTxThroughputMbpsCount() {
      return txThroughputMbps_.size();
    }
    /**
     * <code>repeated float tx_throughput_mbps = 2 [json_name = "txThroughputMbps"];</code>
     * @param index The index of the element to return.
     * @return The txThroughputMbps at the given index.
     */
    public float getTxThroughputMbps(int index) {
      return txThroughputMbps_.getFloat(index);
    }
    /**
     * <code>repeated float tx_throughput_mbps = 2 [json_name = "txThroughputMbps"];</code>
     * @param index The index to set the value at.
     * @param value The txThroughputMbps to set.
     * @return This builder for chaining.
     */
    public Builder setTxThroughputMbps(
        int index, float value) {

      ensureTxThroughputMbpsIsMutable();
      txThroughputMbps_.setFloat(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float tx_throughput_mbps = 2 [json_name = "txThroughputMbps"];</code>
     * @param value The txThroughputMbps to add.
     * @return This builder for chaining.
     */
    public Builder addTxThroughputMbps(float value) {

      ensureTxThroughputMbpsIsMutable();
      txThroughputMbps_.addFloat(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float tx_throughput_mbps = 2 [json_name = "txThroughputMbps"];</code>
     * @param values The txThroughputMbps to add.
     * @return This builder for chaining.
     */
    public Builder addAllTxThroughputMbps(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureTxThroughputMbpsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, txThroughputMbps_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float tx_throughput_mbps = 2 [json_name = "txThroughputMbps"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTxThroughputMbps() {
      txThroughputMbps_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList rxThroughputMbps_ = emptyFloatList();
    private void ensureRxThroughputMbpsIsMutable() {
      if (!rxThroughputMbps_.isModifiable()) {
        rxThroughputMbps_ = makeMutableCopy(rxThroughputMbps_);
      }
      bitField0_ |= 0x00000004;
    }
    private void ensureRxThroughputMbpsIsMutable(int capacity) {
      if (!rxThroughputMbps_.isModifiable()) {
        rxThroughputMbps_ = makeMutableCopy(rxThroughputMbps_, capacity);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>repeated float rx_throughput_mbps = 3 [json_name = "rxThroughputMbps"];</code>
     * @return A list containing the rxThroughputMbps.
     */
    public java.util.List<java.lang.Float>
        getRxThroughputMbpsList() {
      rxThroughputMbps_.makeImmutable();
      return rxThroughputMbps_;
    }
    /**
     * <code>repeated float rx_throughput_mbps = 3 [json_name = "rxThroughputMbps"];</code>
     * @return The count of rxThroughputMbps.
     */
    public int getRxThroughputMbpsCount() {
      return rxThroughputMbps_.size();
    }
    /**
     * <code>repeated float rx_throughput_mbps = 3 [json_name = "rxThroughputMbps"];</code>
     * @param index The index of the element to return.
     * @return The rxThroughputMbps at the given index.
     */
    public float getRxThroughputMbps(int index) {
      return rxThroughputMbps_.getFloat(index);
    }
    /**
     * <code>repeated float rx_throughput_mbps = 3 [json_name = "rxThroughputMbps"];</code>
     * @param index The index to set the value at.
     * @param value The rxThroughputMbps to set.
     * @return This builder for chaining.
     */
    public Builder setRxThroughputMbps(
        int index, float value) {

      ensureRxThroughputMbpsIsMutable();
      rxThroughputMbps_.setFloat(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float rx_throughput_mbps = 3 [json_name = "rxThroughputMbps"];</code>
     * @param value The rxThroughputMbps to add.
     * @return This builder for chaining.
     */
    public Builder addRxThroughputMbps(float value) {

      ensureRxThroughputMbpsIsMutable();
      rxThroughputMbps_.addFloat(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float rx_throughput_mbps = 3 [json_name = "rxThroughputMbps"];</code>
     * @param values The rxThroughputMbps to add.
     * @return This builder for chaining.
     */
    public Builder addAllRxThroughputMbps(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureRxThroughputMbpsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, rxThroughputMbps_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float rx_throughput_mbps = 3 [json_name = "rxThroughputMbps"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRxThroughputMbps() {
      rxThroughputMbps_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList throughputLimited_ =
      emptyIntList();
    private void ensureThroughputLimitedIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        throughputLimited_ = makeMutableCopy(throughputLimited_);
        bitField0_ |= 0x00000008;
      }
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @return A list containing the throughputLimited.
     */
    public java.util.List<com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason> getThroughputLimitedList() {
      return new com.google.protobuf.Internal.IntListAdapter<
          com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason>(throughputLimited_, throughputLimited_converter_);
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @return The count of throughputLimited.
     */
    public int getThroughputLimitedCount() {
      return throughputLimited_.size();
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @param index The index of the element to return.
     * @return The throughputLimited at the given index.
     */
    public com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason getThroughputLimited(int index) {
      return throughputLimited_converter_.convert(throughputLimited_.getInt(index));
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @param index The index to set the value at.
     * @param value The throughputLimited to set.
     * @return This builder for chaining.
     */
    public Builder setThroughputLimited(
        int index, com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureThroughputLimitedIsMutable();
      throughputLimited_.setInt(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @param value The throughputLimited to add.
     * @return This builder for chaining.
     */
    public Builder addThroughputLimited(com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureThroughputLimitedIsMutable();
      throughputLimited_.addInt(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @param values The throughputLimited to add.
     * @return This builder for chaining.
     */
    public Builder addAllThroughputLimited(
        java.lang.Iterable<? extends com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason> values) {
      ensureThroughputLimitedIsMutable();
      for (com.SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason value : values) {
        throughputLimited_.addInt(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @return This builder for chaining.
     */
    public Builder clearThroughputLimited() {
      throughputLimited_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @return A list containing the enum numeric values on the wire for throughputLimited.
     */
    public java.util.List<java.lang.Integer>
    getThroughputLimitedValueList() {
      return java.util.Collections.unmodifiableList(throughputLimited_);
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of throughputLimited at the given index.
     */
    public int getThroughputLimitedValue(int index) {
      return throughputLimited_.getInt(index);
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for throughputLimited to set.
     * @return This builder for chaining.
     */
    public Builder setThroughputLimitedValue(
        int index, int value) {
      ensureThroughputLimitedIsMutable();
      throughputLimited_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @param value The enum numeric value on the wire for throughputLimited to add.
     * @return This builder for chaining.
     */
    public Builder addThroughputLimitedValue(int value) {
      ensureThroughputLimitedIsMutable();
      throughputLimited_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .SpaceX.API.Device.WifiGetClientHistoryResponse.WifiLimitedReason throughput_limited = 4 [json_name = "throughputLimited"];</code>
     * @param values The enum numeric values on the wire for throughputLimited to add.
     * @return This builder for chaining.
     */
    public Builder addAllThroughputLimitedValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureThroughputLimitedIsMutable();
      for (int value : values) {
        throughputLimited_.addInt(value);
      }
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList rxRateMbps_ = emptyFloatList();
    private void ensureRxRateMbpsIsMutable() {
      if (!rxRateMbps_.isModifiable()) {
        rxRateMbps_ = makeMutableCopy(rxRateMbps_);
      }
      bitField0_ |= 0x00000010;
    }
    private void ensureRxRateMbpsIsMutable(int capacity) {
      if (!rxRateMbps_.isModifiable()) {
        rxRateMbps_ = makeMutableCopy(rxRateMbps_, capacity);
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>repeated float rx_rate_mbps = 5 [json_name = "rxRateMbps"];</code>
     * @return A list containing the rxRateMbps.
     */
    public java.util.List<java.lang.Float>
        getRxRateMbpsList() {
      rxRateMbps_.makeImmutable();
      return rxRateMbps_;
    }
    /**
     * <code>repeated float rx_rate_mbps = 5 [json_name = "rxRateMbps"];</code>
     * @return The count of rxRateMbps.
     */
    public int getRxRateMbpsCount() {
      return rxRateMbps_.size();
    }
    /**
     * <code>repeated float rx_rate_mbps = 5 [json_name = "rxRateMbps"];</code>
     * @param index The index of the element to return.
     * @return The rxRateMbps at the given index.
     */
    public float getRxRateMbps(int index) {
      return rxRateMbps_.getFloat(index);
    }
    /**
     * <code>repeated float rx_rate_mbps = 5 [json_name = "rxRateMbps"];</code>
     * @param index The index to set the value at.
     * @param value The rxRateMbps to set.
     * @return This builder for chaining.
     */
    public Builder setRxRateMbps(
        int index, float value) {

      ensureRxRateMbpsIsMutable();
      rxRateMbps_.setFloat(index, value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float rx_rate_mbps = 5 [json_name = "rxRateMbps"];</code>
     * @param value The rxRateMbps to add.
     * @return This builder for chaining.
     */
    public Builder addRxRateMbps(float value) {

      ensureRxRateMbpsIsMutable();
      rxRateMbps_.addFloat(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float rx_rate_mbps = 5 [json_name = "rxRateMbps"];</code>
     * @param values The rxRateMbps to add.
     * @return This builder for chaining.
     */
    public Builder addAllRxRateMbps(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureRxRateMbpsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, rxRateMbps_);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float rx_rate_mbps = 5 [json_name = "rxRateMbps"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRxRateMbps() {
      rxRateMbps_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString rssi_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes rssi = 6 [json_name = "rssi"];</code>
     * @return The rssi.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRssi() {
      return rssi_;
    }
    /**
     * <code>bytes rssi = 6 [json_name = "rssi"];</code>
     * @param value The rssi to set.
     * @return This builder for chaining.
     */
    public Builder setRssi(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      rssi_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>bytes rssi = 6 [json_name = "rssi"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRssi() {
      bitField0_ = (bitField0_ & ~0x00000020);
      rssi_ = getDefaultInstance().getRssi();
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:SpaceX.API.Device.WifiGetClientHistoryResponse)
  }

  // @@protoc_insertion_point(class_scope:SpaceX.API.Device.WifiGetClientHistoryResponse)
  private static final com.SpaceX.API.Device.WifiGetClientHistoryResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.SpaceX.API.Device.WifiGetClientHistoryResponse();
  }

  public static com.SpaceX.API.Device.WifiGetClientHistoryResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WifiGetClientHistoryResponse>
      PARSER = new com.google.protobuf.AbstractParser<WifiGetClientHistoryResponse>() {
    @java.lang.Override
    public WifiGetClientHistoryResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<WifiGetClientHistoryResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WifiGetClientHistoryResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.SpaceX.API.Device.WifiGetClientHistoryResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


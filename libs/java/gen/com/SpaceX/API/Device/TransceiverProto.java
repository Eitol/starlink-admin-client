// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/transceiver.proto
// Protobuf Java Version: 4.28.3

package com.SpaceX.API.Device;

public final class TransceiverProto {
  private TransceiverProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      TransceiverProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_TransceiverIFLoopbackTestRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_TransceiverIFLoopbackTestRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_TransceiverIFLoopbackTestResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_TransceiverIFLoopbackTestResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_TransceiverGetStatusRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_TransceiverGetStatusRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_TransceiverGetStatusResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_TransceiverGetStatusResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_TransceiverFaults_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_TransceiverFaults_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_TransceiverGetTelemetryRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_TransceiverGetTelemetryRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_TransceiverGetTelemetryResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_TransceiverGetTelemetryResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#spacex/api/device/transceiver.proto\022\021S" +
      "paceX.API.Device\032\034spacex/api/device/dish" +
      ".proto\"P\n TransceiverIFLoopbackTestReque" +
      "st\022,\n\022enable_if_loopback\030\001 \001(\010R\020enableIf" +
      "Loopback\"\304\001\n!TransceiverIFLoopbackTestRe" +
      "sponse\022*\n\021ber_loopback_test\030\001 \001(\002R\017berLo" +
      "opbackTest\022*\n\021snr_loopback_test\030\002 \001(\002R\017s" +
      "nrLoopbackTest\022,\n\022rssi_loopback_test\030\003 \001" +
      "(\002R\020rssiLoopbackTest\022\031\n\010pll_lock\030\004 \001(\010R\007" +
      "pllLock\"\035\n\033TransceiverGetStatusRequest\"\352" +
      "\004\n\034TransceiverGetStatusResponse\022I\n\tmod_s" +
      "tate\030\001 \001(\0162,.SpaceX.API.Device.Transceiv" +
      "erModulatorStateR\010modState\022M\n\013demod_stat" +
      "e\030\002 \001(\0162,.SpaceX.API.Device.TransceiverM" +
      "odulatorStateR\ndemodState\022B\n\010tx_state\030\003 " +
      "\001(\0162\'.SpaceX.API.Device.TransceiverTxRxS" +
      "tateR\007txState\022B\n\010rx_state\030\004 \001(\0162\'.SpaceX" +
      ".API.Device.TransceiverTxRxStateR\007rxStat" +
      "e\0223\n\005state\030\356\007 \001(\0162\034.SpaceX.API.Device.Di" +
      "shStateR\005state\022=\n\006faults\030\357\007 \001(\0132$.SpaceX" +
      ".API.Device.TransceiverFaultsR\006faults\022l\n" +
      "\027transmit_blanking_state\030\360\007 \001(\01623.SpaceX" +
      ".API.Device.TransceiverTransmitBlankingS" +
      "tateR\025transmitBlankingState\022\'\n\017modem_asi" +
      "c_temp\030\361\007 \001(\002R\rmodemAsicTemp\022\035\n\ntx_if_te" +
      "mp\030\362\007 \001(\002R\010txIfTemp\"\252\001\n\021TransceiverFault" +
      "s\022:\n\032over_temp_modem_asic_fault\030\001 \001(\010R\026o" +
      "verTempModemAsicFault\022/\n\024over_temp_pcba_" +
      "fault\030\002 \001(\010R\021overTempPcbaFault\022(\n\020dc_vol" +
      "tage_fault\030\003 \001(\010R\016dcVoltageFault\" \n\036Tran" +
      "sceiverGetTelemetryRequest\"\331\n\n\037Transceiv" +
      "erGetTelemetryResponse\0223\n\025antenna_pointi" +
      "ng_mode\030\351\007 \001(\rR\023antennaPointingMode\022$\n\ra" +
      "ntenna_pitch\030\352\007 \001(\002R\014antennaPitch\022\"\n\014ant" +
      "enna_roll\030\353\007 \001(\002R\013antennaRoll\022)\n\020antenna" +
      "_rx_theta\030\354\007 \001(\002R\016antennaRxTheta\0221\n\024ante" +
      "nna_true_heading\030\355\007 \001(\002R\022antennaTrueHead" +
      "ing\022\036\n\nrx_channel\030\356\007 \001(\rR\trxChannel\022\'\n\017c" +
      "urrent_cell_id\030\357\007 \001(\rR\rcurrentCellId\0224\n\026" +
      "seconds_until_slot_end\030\360\007 \001(\002R\023secondsUn" +
      "tilSlotEnd\022-\n\023wb_rssi_peak_mag_db\030\361\007 \001(\002" +
      "R\017wbRssiPeakMagDb\022,\n\022pop_ping_drop_rate\030" +
      "\362\007 \001(\002R\017popPingDropRate\022\026\n\006snr_db\030\363\007 \001(\002" +
      "R\005snrDb\022\"\n\rl1_snr_avg_db\030\364\007 \001(\002R\nl1SnrAv" +
      "gDb\022\"\n\rl1_snr_min_db\030\365\007 \001(\002R\nl1SnrMinDb\022" +
      "\"\n\rl1_snr_max_db\030\366\007 \001(\002R\nl1SnrMaxDb\022+\n\021l" +
      "mac_satellite_id\030\367\007 \001(\rR\017lmacSatelliteId" +
      "\022/\n\023target_satellite_id\030\370\007 \001(\rR\021targetSa" +
      "telliteId\022\034\n\tgrant_mcs\030\371\007 \001(\rR\010grantMcs\022" +
      "+\n\021grant_symbols_avg\030\372\007 \001(\002R\017grantSymbol" +
      "sAvg\022\034\n\tded_grant\030\373\007 \001(\rR\010dedGrant\022D\n\036mo" +
      "bility_proactive_slot_change\030\374\007 \001(\rR\033mob" +
      "ilityProactiveSlotChange\022B\n\035mobility_rea" +
      "ctive_slot_change\030\375\007 \001(\rR\032mobilityReacti" +
      "veSlotChange\0220\n\024rfp_total_syn_failed\030\376\007 " +
      "\001(\rR\021rfpTotalSynFailed\022$\n\016num_out_of_seq" +
      "\030\377\007 \001(\rR\013numOutOfSeq\022%\n\016num_ulmap_drop\030\200" +
      "\010 \001(\rR\014numUlmapDrop\022>\n\033current_seconds_o" +
      "f_schedule\030\201\010 \001(\002R\030currentSecondsOfSched" +
      "ule\022U\n(send_label_switch_to_ground_faile" +
      "d_calls\030\202\010 \001(\rR\"sendLabelSwitchToGroundF" +
      "ailedCalls\022%\n\016ema_velocity_x\030\203\010 \001(\001R\014ema" +
      "VelocityX\022%\n\016ema_velocity_y\030\204\010 \001(\001R\014emaV" +
      "elocityY\022%\n\016ema_velocity_z\030\205\010 \001(\001R\014emaVe" +
      "locityZ\022\035\n\nce_rssi_db\030\206\010 \001(\002R\010ceRssiDb*^" +
      "\n\031TransceiverModulatorState\022\024\n\020MODSTATE_" +
      "UNKNOWN\020\000\022\024\n\020MODSTATE_ENABLED\020\001\022\025\n\021MODST" +
      "ATE_DISABLED\020\002*M\n\024TransceiverTxRxState\022\020" +
      "\n\014TXRX_UNKNOWN\020\000\022\020\n\014TXRX_ENABLED\020\001\022\021\n\rTX" +
      "RX_DISABLED\020\002*S\n TransceiverTransmitBlan" +
      "kingState\022\016\n\nTB_UNKNOWN\020\000\022\016\n\nTB_ENABLED\020" +
      "\001\022\017\n\013TB_DISABLED\020\002B\332\001\n\025com.SpaceX.API.De" +
      "viceB\020TransceiverProtoP\001ZIgithub.com/Eit" +
      "ol/starlink-client/libs/golang/client/ge" +
      "n/spacex/api/device\242\002\003SAD\252\002\021SpaceX.API.D" +
      "evice\312\002\021SpaceX\\API\\Device\342\002\035SpaceX\\API\\D" +
      "evice\\GPBMetadata\352\002\023SpaceX::API::Deviceb" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.SpaceX.API.Device.DishProto.getDescriptor(),
        });
    internal_static_SpaceX_API_Device_TransceiverIFLoopbackTestRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SpaceX_API_Device_TransceiverIFLoopbackTestRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_TransceiverIFLoopbackTestRequest_descriptor,
        new java.lang.String[] { "EnableIfLoopback", });
    internal_static_SpaceX_API_Device_TransceiverIFLoopbackTestResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SpaceX_API_Device_TransceiverIFLoopbackTestResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_TransceiverIFLoopbackTestResponse_descriptor,
        new java.lang.String[] { "BerLoopbackTest", "SnrLoopbackTest", "RssiLoopbackTest", "PllLock", });
    internal_static_SpaceX_API_Device_TransceiverGetStatusRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_SpaceX_API_Device_TransceiverGetStatusRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_TransceiverGetStatusRequest_descriptor,
        new java.lang.String[] { });
    internal_static_SpaceX_API_Device_TransceiverGetStatusResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_SpaceX_API_Device_TransceiverGetStatusResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_TransceiverGetStatusResponse_descriptor,
        new java.lang.String[] { "ModState", "DemodState", "TxState", "RxState", "State", "Faults", "TransmitBlankingState", "ModemAsicTemp", "TxIfTemp", });
    internal_static_SpaceX_API_Device_TransceiverFaults_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_SpaceX_API_Device_TransceiverFaults_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_TransceiverFaults_descriptor,
        new java.lang.String[] { "OverTempModemAsicFault", "OverTempPcbaFault", "DcVoltageFault", });
    internal_static_SpaceX_API_Device_TransceiverGetTelemetryRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_SpaceX_API_Device_TransceiverGetTelemetryRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_TransceiverGetTelemetryRequest_descriptor,
        new java.lang.String[] { });
    internal_static_SpaceX_API_Device_TransceiverGetTelemetryResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_SpaceX_API_Device_TransceiverGetTelemetryResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_TransceiverGetTelemetryResponse_descriptor,
        new java.lang.String[] { "AntennaPointingMode", "AntennaPitch", "AntennaRoll", "AntennaRxTheta", "AntennaTrueHeading", "RxChannel", "CurrentCellId", "SecondsUntilSlotEnd", "WbRssiPeakMagDb", "PopPingDropRate", "SnrDb", "L1SnrAvgDb", "L1SnrMinDb", "L1SnrMaxDb", "LmacSatelliteId", "TargetSatelliteId", "GrantMcs", "GrantSymbolsAvg", "DedGrant", "MobilityProactiveSlotChange", "MobilityReactiveSlotChange", "RfpTotalSynFailed", "NumOutOfSeq", "NumUlmapDrop", "CurrentSecondsOfSchedule", "SendLabelSwitchToGroundFailedCalls", "EmaVelocityX", "EmaVelocityY", "EmaVelocityZ", "CeRssiDb", });
    descriptor.resolveAllFeaturesImmutable();
    com.SpaceX.API.Device.DishProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

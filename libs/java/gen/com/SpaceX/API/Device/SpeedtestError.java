// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/device.proto
// Protobuf Java Version: 4.28.3

package com.SpaceX.API.Device;

/**
 * Protobuf enum {@code SpaceX.API.Device.SpeedtestError}
 */
public enum SpeedtestError
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>SPEEDTEST_ERROR_NONE = 0;</code>
   */
  SPEEDTEST_ERROR_NONE(0),
  /**
   * <code>SPEEDTEST_ERROR_UNKNOWN = 1;</code>
   */
  SPEEDTEST_ERROR_UNKNOWN(1),
  /**
   * <code>SPEEDTEST_ERROR_TOKEN = 2;</code>
   */
  SPEEDTEST_ERROR_TOKEN(2),
  /**
   * <code>SPEEDTEST_ERROR_API = 3;</code>
   */
  SPEEDTEST_ERROR_API(3),
  /**
   * <code>SPEEDTEST_ERROR_NO_RESULT = 4;</code>
   */
  SPEEDTEST_ERROR_NO_RESULT(4),
  /**
   * <code>SPEEDTEST_ERROR_OFFLINE = 5;</code>
   */
  SPEEDTEST_ERROR_OFFLINE(5),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      SpeedtestError.class.getName());
  }
  /**
   * <code>SPEEDTEST_ERROR_NONE = 0;</code>
   */
  public static final int SPEEDTEST_ERROR_NONE_VALUE = 0;
  /**
   * <code>SPEEDTEST_ERROR_UNKNOWN = 1;</code>
   */
  public static final int SPEEDTEST_ERROR_UNKNOWN_VALUE = 1;
  /**
   * <code>SPEEDTEST_ERROR_TOKEN = 2;</code>
   */
  public static final int SPEEDTEST_ERROR_TOKEN_VALUE = 2;
  /**
   * <code>SPEEDTEST_ERROR_API = 3;</code>
   */
  public static final int SPEEDTEST_ERROR_API_VALUE = 3;
  /**
   * <code>SPEEDTEST_ERROR_NO_RESULT = 4;</code>
   */
  public static final int SPEEDTEST_ERROR_NO_RESULT_VALUE = 4;
  /**
   * <code>SPEEDTEST_ERROR_OFFLINE = 5;</code>
   */
  public static final int SPEEDTEST_ERROR_OFFLINE_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static SpeedtestError valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static SpeedtestError forNumber(int value) {
    switch (value) {
      case 0: return SPEEDTEST_ERROR_NONE;
      case 1: return SPEEDTEST_ERROR_UNKNOWN;
      case 2: return SPEEDTEST_ERROR_TOKEN;
      case 3: return SPEEDTEST_ERROR_API;
      case 4: return SPEEDTEST_ERROR_NO_RESULT;
      case 5: return SPEEDTEST_ERROR_OFFLINE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<SpeedtestError>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      SpeedtestError> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SpeedtestError>() {
          public SpeedtestError findValueByNumber(int number) {
            return SpeedtestError.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.SpaceX.API.Device.DeviceProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final SpeedtestError[] VALUES = values();

  public static SpeedtestError valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private SpeedtestError(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:SpaceX.API.Device.SpeedtestError)
}


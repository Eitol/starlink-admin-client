// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/common.proto
// Protobuf Java Version: 4.28.3

package com.SpaceX.API.Device;

/**
 * Protobuf enum {@code SpaceX.API.Device.BootReason}
 */
public enum BootReason
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>BOOT_REASON_UNKNOWN = 0;</code>
   */
  BOOT_REASON_UNKNOWN(0),
  /**
   * <code>FORGOTTEN = 1;</code>
   */
  FORGOTTEN(1),
  /**
   * <code>POWER_CYCLE = 2;</code>
   */
  POWER_CYCLE(2),
  /**
   * <code>COMMAND = 3;</code>
   */
  COMMAND(3),
  /**
   * <code>SOFTWARE_UPDATE = 4;</code>
   */
  SOFTWARE_UPDATE(4),
  /**
   * <code>CONFIG_UPDATE = 5;</code>
   */
  CONFIG_UPDATE(5),
  /**
   * <code>UPTIME_FDIR = 6;</code>
   */
  UPTIME_FDIR(6),
  /**
   * <code>REPEATER_FDIR = 7;</code>
   */
  REPEATER_FDIR(7),
  /**
   * <code>AVIATION_ETH_WAN_FDIR = 8;</code>
   */
  AVIATION_ETH_WAN_FDIR(8),
  /**
   * <code>KERNEL_PANIC = 9;</code>
   */
  KERNEL_PANIC(9),
  /**
   * <code>INTENTIONAL_KERNEL_PANIC = 14;</code>
   */
  INTENTIONAL_KERNEL_PANIC(14),
  /**
   * <code>MCU_BRINGUP_FAILED_FDIR = 11;</code>
   */
  MCU_BRINGUP_FAILED_FDIR(11),
  /**
   * <code>AVIATION_OUTAGE_FDIR = 12;</code>
   */
  AVIATION_OUTAGE_FDIR(12),
  /**
   * <code>SOFTWARE_WATCHDOG = 13;</code>
   */
  SOFTWARE_WATCHDOG(13),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      BootReason.class.getName());
  }
  /**
   * <code>BOOT_REASON_UNKNOWN = 0;</code>
   */
  public static final int BOOT_REASON_UNKNOWN_VALUE = 0;
  /**
   * <code>FORGOTTEN = 1;</code>
   */
  public static final int FORGOTTEN_VALUE = 1;
  /**
   * <code>POWER_CYCLE = 2;</code>
   */
  public static final int POWER_CYCLE_VALUE = 2;
  /**
   * <code>COMMAND = 3;</code>
   */
  public static final int COMMAND_VALUE = 3;
  /**
   * <code>SOFTWARE_UPDATE = 4;</code>
   */
  public static final int SOFTWARE_UPDATE_VALUE = 4;
  /**
   * <code>CONFIG_UPDATE = 5;</code>
   */
  public static final int CONFIG_UPDATE_VALUE = 5;
  /**
   * <code>UPTIME_FDIR = 6;</code>
   */
  public static final int UPTIME_FDIR_VALUE = 6;
  /**
   * <code>REPEATER_FDIR = 7;</code>
   */
  public static final int REPEATER_FDIR_VALUE = 7;
  /**
   * <code>AVIATION_ETH_WAN_FDIR = 8;</code>
   */
  public static final int AVIATION_ETH_WAN_FDIR_VALUE = 8;
  /**
   * <code>KERNEL_PANIC = 9;</code>
   */
  public static final int KERNEL_PANIC_VALUE = 9;
  /**
   * <code>INTENTIONAL_KERNEL_PANIC = 14;</code>
   */
  public static final int INTENTIONAL_KERNEL_PANIC_VALUE = 14;
  /**
   * <code>MCU_BRINGUP_FAILED_FDIR = 11;</code>
   */
  public static final int MCU_BRINGUP_FAILED_FDIR_VALUE = 11;
  /**
   * <code>AVIATION_OUTAGE_FDIR = 12;</code>
   */
  public static final int AVIATION_OUTAGE_FDIR_VALUE = 12;
  /**
   * <code>SOFTWARE_WATCHDOG = 13;</code>
   */
  public static final int SOFTWARE_WATCHDOG_VALUE = 13;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static BootReason valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static BootReason forNumber(int value) {
    switch (value) {
      case 0: return BOOT_REASON_UNKNOWN;
      case 1: return FORGOTTEN;
      case 2: return POWER_CYCLE;
      case 3: return COMMAND;
      case 4: return SOFTWARE_UPDATE;
      case 5: return CONFIG_UPDATE;
      case 6: return UPTIME_FDIR;
      case 7: return REPEATER_FDIR;
      case 8: return AVIATION_ETH_WAN_FDIR;
      case 9: return KERNEL_PANIC;
      case 14: return INTENTIONAL_KERNEL_PANIC;
      case 11: return MCU_BRINGUP_FAILED_FDIR;
      case 12: return AVIATION_OUTAGE_FDIR;
      case 13: return SOFTWARE_WATCHDOG;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<BootReason>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      BootReason> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<BootReason>() {
          public BootReason findValueByNumber(int number) {
            return BootReason.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.SpaceX.API.Device.CommonProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final BootReason[] VALUES = values();

  public static BootReason valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private BootReason(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:SpaceX.API.Device.BootReason)
}


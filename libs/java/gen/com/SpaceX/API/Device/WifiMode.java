// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi_util.proto
// Protobuf Java Version: 4.28.3

package com.SpaceX.API.Device;

/**
 * Protobuf enum {@code SpaceX.API.Device.WifiMode}
 */
public enum WifiMode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>WIFI_MODE_DEFAULT = 0;</code>
   */
  WIFI_MODE_DEFAULT(0),
  /**
   * <code>A_ONLY = 1;</code>
   */
  A_ONLY(1),
  /**
   * <code>B_ONLY = 2;</code>
   */
  B_ONLY(2),
  /**
   * <code>G_ONLY = 3;</code>
   */
  G_ONLY(3),
  /**
   * <code>N_ONLY = 4;</code>
   */
  N_ONLY(4),
  /**
   * <code>B_G_MIXED = 5;</code>
   */
  B_G_MIXED(5),
  /**
   * <code>A_N_MIXED = 6;</code>
   */
  A_N_MIXED(6),
  /**
   * <code>G_N_MIXED = 7;</code>
   */
  G_N_MIXED(7),
  /**
   * <code>B_G_N_MIXED = 8;</code>
   */
  B_G_N_MIXED(8),
  /**
   * <code>A_AN_AC_MIXED = 9;</code>
   */
  A_AN_AC_MIXED(9),
  /**
   * <code>AN_AC_MIXED = 10;</code>
   */
  AN_AC_MIXED(10),
  /**
   * <code>B_G_N_AX_MIXED = 11;</code>
   */
  B_G_N_AX_MIXED(11),
  /**
   * <code>A_AN_AC_AX_MIXED = 12;</code>
   */
  A_AN_AC_AX_MIXED(12),
  /**
   * <code>A_N_AC_MIXED = 13;</code>
   */
  A_N_AC_MIXED(13),
  /**
   * <code>A_N_AC_AX_MIXED = 14;</code>
   */
  A_N_AC_AX_MIXED(14),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      WifiMode.class.getName());
  }
  /**
   * <code>WIFI_MODE_DEFAULT = 0;</code>
   */
  public static final int WIFI_MODE_DEFAULT_VALUE = 0;
  /**
   * <code>A_ONLY = 1;</code>
   */
  public static final int A_ONLY_VALUE = 1;
  /**
   * <code>B_ONLY = 2;</code>
   */
  public static final int B_ONLY_VALUE = 2;
  /**
   * <code>G_ONLY = 3;</code>
   */
  public static final int G_ONLY_VALUE = 3;
  /**
   * <code>N_ONLY = 4;</code>
   */
  public static final int N_ONLY_VALUE = 4;
  /**
   * <code>B_G_MIXED = 5;</code>
   */
  public static final int B_G_MIXED_VALUE = 5;
  /**
   * <code>A_N_MIXED = 6;</code>
   */
  public static final int A_N_MIXED_VALUE = 6;
  /**
   * <code>G_N_MIXED = 7;</code>
   */
  public static final int G_N_MIXED_VALUE = 7;
  /**
   * <code>B_G_N_MIXED = 8;</code>
   */
  public static final int B_G_N_MIXED_VALUE = 8;
  /**
   * <code>A_AN_AC_MIXED = 9;</code>
   */
  public static final int A_AN_AC_MIXED_VALUE = 9;
  /**
   * <code>AN_AC_MIXED = 10;</code>
   */
  public static final int AN_AC_MIXED_VALUE = 10;
  /**
   * <code>B_G_N_AX_MIXED = 11;</code>
   */
  public static final int B_G_N_AX_MIXED_VALUE = 11;
  /**
   * <code>A_AN_AC_AX_MIXED = 12;</code>
   */
  public static final int A_AN_AC_AX_MIXED_VALUE = 12;
  /**
   * <code>A_N_AC_MIXED = 13;</code>
   */
  public static final int A_N_AC_MIXED_VALUE = 13;
  /**
   * <code>A_N_AC_AX_MIXED = 14;</code>
   */
  public static final int A_N_AC_AX_MIXED_VALUE = 14;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static WifiMode valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static WifiMode forNumber(int value) {
    switch (value) {
      case 0: return WIFI_MODE_DEFAULT;
      case 1: return A_ONLY;
      case 2: return B_ONLY;
      case 3: return G_ONLY;
      case 4: return N_ONLY;
      case 5: return B_G_MIXED;
      case 6: return A_N_MIXED;
      case 7: return G_N_MIXED;
      case 8: return B_G_N_MIXED;
      case 9: return A_AN_AC_MIXED;
      case 10: return AN_AC_MIXED;
      case 11: return B_G_N_AX_MIXED;
      case 12: return A_AN_AC_AX_MIXED;
      case 13: return A_N_AC_MIXED;
      case 14: return A_N_AC_AX_MIXED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<WifiMode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      WifiMode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<WifiMode>() {
          public WifiMode findValueByNumber(int number) {
            return WifiMode.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.SpaceX.API.Device.WifiUtilProto.getDescriptor().getEnumTypes().get(4);
  }

  private static final WifiMode[] VALUES = values();

  public static WifiMode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private WifiMode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:SpaceX.API.Device.WifiMode)
}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/device.proto
// Protobuf Java Version: 4.28.3

package com.SpaceX.API.Device;

/**
 * Protobuf type {@code SpaceX.API.Device.SpeedTestResponse}
 */
public final class SpeedTestResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:SpaceX.API.Device.SpeedTestResponse)
    SpeedTestResponseOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      SpeedTestResponse.class.getName());
  }
  // Use SpeedTestResponse.newBuilder() to construct.
  private SpeedTestResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private SpeedTestResponse() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.SpaceX.API.Device.DeviceProto.internal_static_SpaceX_API_Device_SpeedTestResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.SpaceX.API.Device.DeviceProto.internal_static_SpaceX_API_Device_SpeedTestResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.SpaceX.API.Device.SpeedTestResponse.class, com.SpaceX.API.Device.SpeedTestResponse.Builder.class);
  }

  private int bitField0_;
  public static final int DOWNLOAD_BPS_FIELD_NUMBER = 1;
  private float downloadBps_ = 0F;
  /**
   * <code>float download_bps = 1 [json_name = "downloadBps", deprecated = true];</code>
   * @deprecated SpaceX.API.Device.SpeedTestResponse.download_bps is deprecated.
   *     See spacex/api/device/device.proto;l=539
   * @return The downloadBps.
   */
  @java.lang.Override
  @java.lang.Deprecated public float getDownloadBps() {
    return downloadBps_;
  }

  public static final int UPLOAD_BPS_FIELD_NUMBER = 2;
  private float uploadBps_ = 0F;
  /**
   * <code>float upload_bps = 2 [json_name = "uploadBps", deprecated = true];</code>
   * @deprecated SpaceX.API.Device.SpeedTestResponse.upload_bps is deprecated.
   *     See spacex/api/device/device.proto;l=541
   * @return The uploadBps.
   */
  @java.lang.Override
  @java.lang.Deprecated public float getUploadBps() {
    return uploadBps_;
  }

  public static final int LATENCY_S_FIELD_NUMBER = 3;
  private float latencyS_ = 0F;
  /**
   * <code>float latency_s = 3 [json_name = "latencyS", deprecated = true];</code>
   * @deprecated SpaceX.API.Device.SpeedTestResponse.latency_s is deprecated.
   *     See spacex/api/device/device.proto;l=543
   * @return The latencyS.
   */
  @java.lang.Override
  @java.lang.Deprecated public float getLatencyS() {
    return latencyS_;
  }

  public static final int DOWNLOAD_MBPS_FIELD_NUMBER = 4;
  private float downloadMbps_ = 0F;
  /**
   * <code>float download_mbps = 4 [json_name = "downloadMbps", deprecated = true];</code>
   * @deprecated SpaceX.API.Device.SpeedTestResponse.download_mbps is deprecated.
   *     See spacex/api/device/device.proto;l=545
   * @return The downloadMbps.
   */
  @java.lang.Override
  @java.lang.Deprecated public float getDownloadMbps() {
    return downloadMbps_;
  }

  public static final int UPLOAD_MBPS_FIELD_NUMBER = 5;
  private float uploadMbps_ = 0F;
  /**
   * <code>float upload_mbps = 5 [json_name = "uploadMbps", deprecated = true];</code>
   * @deprecated SpaceX.API.Device.SpeedTestResponse.upload_mbps is deprecated.
   *     See spacex/api/device/device.proto;l=547
   * @return The uploadMbps.
   */
  @java.lang.Override
  @java.lang.Deprecated public float getUploadMbps() {
    return uploadMbps_;
  }

  public static final int LATENCY_MS_FIELD_NUMBER = 6;
  private float latencyMs_ = 0F;
  /**
   * <code>float latency_ms = 6 [json_name = "latencyMs", deprecated = true];</code>
   * @deprecated SpaceX.API.Device.SpeedTestResponse.latency_ms is deprecated.
   *     See spacex/api/device/device.proto;l=549
   * @return The latencyMs.
   */
  @java.lang.Override
  @java.lang.Deprecated public float getLatencyMs() {
    return latencyMs_;
  }

  public static final int ROUTER_SPEEDTEST_FIELD_NUMBER = 15;
  private com.SpaceX.API.Device.SpeedTestStats routerSpeedtest_;
  /**
   * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
   * @return Whether the routerSpeedtest field is set.
   */
  @java.lang.Override
  public boolean hasRouterSpeedtest() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
   * @return The routerSpeedtest.
   */
  @java.lang.Override
  public com.SpaceX.API.Device.SpeedTestStats getRouterSpeedtest() {
    return routerSpeedtest_ == null ? com.SpaceX.API.Device.SpeedTestStats.getDefaultInstance() : routerSpeedtest_;
  }
  /**
   * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
   */
  @java.lang.Override
  public com.SpaceX.API.Device.SpeedTestStatsOrBuilder getRouterSpeedtestOrBuilder() {
    return routerSpeedtest_ == null ? com.SpaceX.API.Device.SpeedTestStats.getDefaultInstance() : routerSpeedtest_;
  }

  public static final int DOWNLOAD_MBPS_1_TCP_CONN_FIELD_NUMBER = 7;
  private float downloadMbps1TcpConn_ = 0F;
  /**
   * <code>float download_mbps_1_tcp_conn = 7 [json_name = "downloadMbps1TcpConn"];</code>
   * @return The downloadMbps1TcpConn.
   */
  @java.lang.Override
  public float getDownloadMbps1TcpConn() {
    return downloadMbps1TcpConn_;
  }

  public static final int UPLOAD_MBPS_1_TCP_CONN_FIELD_NUMBER = 8;
  private float uploadMbps1TcpConn_ = 0F;
  /**
   * <code>float upload_mbps_1_tcp_conn = 8 [json_name = "uploadMbps1TcpConn"];</code>
   * @return The uploadMbps1TcpConn.
   */
  @java.lang.Override
  public float getUploadMbps1TcpConn() {
    return uploadMbps1TcpConn_;
  }

  public static final int DOWNLOAD_MBPS_4_TCP_CONN_FIELD_NUMBER = 9;
  private float downloadMbps4TcpConn_ = 0F;
  /**
   * <code>float download_mbps_4_tcp_conn = 9 [json_name = "downloadMbps4TcpConn"];</code>
   * @return The downloadMbps4TcpConn.
   */
  @java.lang.Override
  public float getDownloadMbps4TcpConn() {
    return downloadMbps4TcpConn_;
  }

  public static final int UPLOAD_MBPS_4_TCP_CONN_FIELD_NUMBER = 10;
  private float uploadMbps4TcpConn_ = 0F;
  /**
   * <code>float upload_mbps_4_tcp_conn = 10 [json_name = "uploadMbps4TcpConn"];</code>
   * @return The uploadMbps4TcpConn.
   */
  @java.lang.Override
  public float getUploadMbps4TcpConn() {
    return uploadMbps4TcpConn_;
  }

  public static final int DOWNLOAD_MBPS_16_TCP_CONN_FIELD_NUMBER = 11;
  private float downloadMbps16TcpConn_ = 0F;
  /**
   * <code>float download_mbps_16_tcp_conn = 11 [json_name = "downloadMbps16TcpConn"];</code>
   * @return The downloadMbps16TcpConn.
   */
  @java.lang.Override
  public float getDownloadMbps16TcpConn() {
    return downloadMbps16TcpConn_;
  }

  public static final int UPLOAD_MBPS_16_TCP_CONN_FIELD_NUMBER = 12;
  private float uploadMbps16TcpConn_ = 0F;
  /**
   * <code>float upload_mbps_16_tcp_conn = 12 [json_name = "uploadMbps16TcpConn"];</code>
   * @return The uploadMbps16TcpConn.
   */
  @java.lang.Override
  public float getUploadMbps16TcpConn() {
    return uploadMbps16TcpConn_;
  }

  public static final int DOWNLOAD_MBPS_64_TCP_CONN_FIELD_NUMBER = 13;
  private float downloadMbps64TcpConn_ = 0F;
  /**
   * <code>float download_mbps_64_tcp_conn = 13 [json_name = "downloadMbps64TcpConn"];</code>
   * @return The downloadMbps64TcpConn.
   */
  @java.lang.Override
  public float getDownloadMbps64TcpConn() {
    return downloadMbps64TcpConn_;
  }

  public static final int UPLOAD_MBPS_64_TCP_CONN_FIELD_NUMBER = 14;
  private float uploadMbps64TcpConn_ = 0F;
  /**
   * <code>float upload_mbps_64_tcp_conn = 14 [json_name = "uploadMbps64TcpConn"];</code>
   * @return The uploadMbps64TcpConn.
   */
  @java.lang.Override
  public float getUploadMbps64TcpConn() {
    return uploadMbps64TcpConn_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (java.lang.Float.floatToRawIntBits(downloadBps_) != 0) {
      output.writeFloat(1, downloadBps_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadBps_) != 0) {
      output.writeFloat(2, uploadBps_);
    }
    if (java.lang.Float.floatToRawIntBits(latencyS_) != 0) {
      output.writeFloat(3, latencyS_);
    }
    if (java.lang.Float.floatToRawIntBits(downloadMbps_) != 0) {
      output.writeFloat(4, downloadMbps_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadMbps_) != 0) {
      output.writeFloat(5, uploadMbps_);
    }
    if (java.lang.Float.floatToRawIntBits(latencyMs_) != 0) {
      output.writeFloat(6, latencyMs_);
    }
    if (java.lang.Float.floatToRawIntBits(downloadMbps1TcpConn_) != 0) {
      output.writeFloat(7, downloadMbps1TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadMbps1TcpConn_) != 0) {
      output.writeFloat(8, uploadMbps1TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(downloadMbps4TcpConn_) != 0) {
      output.writeFloat(9, downloadMbps4TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadMbps4TcpConn_) != 0) {
      output.writeFloat(10, uploadMbps4TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(downloadMbps16TcpConn_) != 0) {
      output.writeFloat(11, downloadMbps16TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadMbps16TcpConn_) != 0) {
      output.writeFloat(12, uploadMbps16TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(downloadMbps64TcpConn_) != 0) {
      output.writeFloat(13, downloadMbps64TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadMbps64TcpConn_) != 0) {
      output.writeFloat(14, uploadMbps64TcpConn_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(15, getRouterSpeedtest());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (java.lang.Float.floatToRawIntBits(downloadBps_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(1, downloadBps_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadBps_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, uploadBps_);
    }
    if (java.lang.Float.floatToRawIntBits(latencyS_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, latencyS_);
    }
    if (java.lang.Float.floatToRawIntBits(downloadMbps_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, downloadMbps_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadMbps_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, uploadMbps_);
    }
    if (java.lang.Float.floatToRawIntBits(latencyMs_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, latencyMs_);
    }
    if (java.lang.Float.floatToRawIntBits(downloadMbps1TcpConn_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(7, downloadMbps1TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadMbps1TcpConn_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(8, uploadMbps1TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(downloadMbps4TcpConn_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(9, downloadMbps4TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadMbps4TcpConn_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(10, uploadMbps4TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(downloadMbps16TcpConn_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(11, downloadMbps16TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadMbps16TcpConn_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(12, uploadMbps16TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(downloadMbps64TcpConn_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(13, downloadMbps64TcpConn_);
    }
    if (java.lang.Float.floatToRawIntBits(uploadMbps64TcpConn_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(14, uploadMbps64TcpConn_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, getRouterSpeedtest());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.SpaceX.API.Device.SpeedTestResponse)) {
      return super.equals(obj);
    }
    com.SpaceX.API.Device.SpeedTestResponse other = (com.SpaceX.API.Device.SpeedTestResponse) obj;

    if (java.lang.Float.floatToIntBits(getDownloadBps())
        != java.lang.Float.floatToIntBits(
            other.getDownloadBps())) return false;
    if (java.lang.Float.floatToIntBits(getUploadBps())
        != java.lang.Float.floatToIntBits(
            other.getUploadBps())) return false;
    if (java.lang.Float.floatToIntBits(getLatencyS())
        != java.lang.Float.floatToIntBits(
            other.getLatencyS())) return false;
    if (java.lang.Float.floatToIntBits(getDownloadMbps())
        != java.lang.Float.floatToIntBits(
            other.getDownloadMbps())) return false;
    if (java.lang.Float.floatToIntBits(getUploadMbps())
        != java.lang.Float.floatToIntBits(
            other.getUploadMbps())) return false;
    if (java.lang.Float.floatToIntBits(getLatencyMs())
        != java.lang.Float.floatToIntBits(
            other.getLatencyMs())) return false;
    if (hasRouterSpeedtest() != other.hasRouterSpeedtest()) return false;
    if (hasRouterSpeedtest()) {
      if (!getRouterSpeedtest()
          .equals(other.getRouterSpeedtest())) return false;
    }
    if (java.lang.Float.floatToIntBits(getDownloadMbps1TcpConn())
        != java.lang.Float.floatToIntBits(
            other.getDownloadMbps1TcpConn())) return false;
    if (java.lang.Float.floatToIntBits(getUploadMbps1TcpConn())
        != java.lang.Float.floatToIntBits(
            other.getUploadMbps1TcpConn())) return false;
    if (java.lang.Float.floatToIntBits(getDownloadMbps4TcpConn())
        != java.lang.Float.floatToIntBits(
            other.getDownloadMbps4TcpConn())) return false;
    if (java.lang.Float.floatToIntBits(getUploadMbps4TcpConn())
        != java.lang.Float.floatToIntBits(
            other.getUploadMbps4TcpConn())) return false;
    if (java.lang.Float.floatToIntBits(getDownloadMbps16TcpConn())
        != java.lang.Float.floatToIntBits(
            other.getDownloadMbps16TcpConn())) return false;
    if (java.lang.Float.floatToIntBits(getUploadMbps16TcpConn())
        != java.lang.Float.floatToIntBits(
            other.getUploadMbps16TcpConn())) return false;
    if (java.lang.Float.floatToIntBits(getDownloadMbps64TcpConn())
        != java.lang.Float.floatToIntBits(
            other.getDownloadMbps64TcpConn())) return false;
    if (java.lang.Float.floatToIntBits(getUploadMbps64TcpConn())
        != java.lang.Float.floatToIntBits(
            other.getUploadMbps64TcpConn())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DOWNLOAD_BPS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDownloadBps());
    hash = (37 * hash) + UPLOAD_BPS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getUploadBps());
    hash = (37 * hash) + LATENCY_S_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getLatencyS());
    hash = (37 * hash) + DOWNLOAD_MBPS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDownloadMbps());
    hash = (37 * hash) + UPLOAD_MBPS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getUploadMbps());
    hash = (37 * hash) + LATENCY_MS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getLatencyMs());
    if (hasRouterSpeedtest()) {
      hash = (37 * hash) + ROUTER_SPEEDTEST_FIELD_NUMBER;
      hash = (53 * hash) + getRouterSpeedtest().hashCode();
    }
    hash = (37 * hash) + DOWNLOAD_MBPS_1_TCP_CONN_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDownloadMbps1TcpConn());
    hash = (37 * hash) + UPLOAD_MBPS_1_TCP_CONN_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getUploadMbps1TcpConn());
    hash = (37 * hash) + DOWNLOAD_MBPS_4_TCP_CONN_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDownloadMbps4TcpConn());
    hash = (37 * hash) + UPLOAD_MBPS_4_TCP_CONN_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getUploadMbps4TcpConn());
    hash = (37 * hash) + DOWNLOAD_MBPS_16_TCP_CONN_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDownloadMbps16TcpConn());
    hash = (37 * hash) + UPLOAD_MBPS_16_TCP_CONN_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getUploadMbps16TcpConn());
    hash = (37 * hash) + DOWNLOAD_MBPS_64_TCP_CONN_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDownloadMbps64TcpConn());
    hash = (37 * hash) + UPLOAD_MBPS_64_TCP_CONN_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getUploadMbps64TcpConn());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.SpaceX.API.Device.SpeedTestResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.SpaceX.API.Device.SpeedTestResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.SpaceX.API.Device.SpeedTestResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.SpaceX.API.Device.SpeedTestResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.SpaceX.API.Device.SpeedTestResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.SpaceX.API.Device.SpeedTestResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.SpaceX.API.Device.SpeedTestResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.SpaceX.API.Device.SpeedTestResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.SpaceX.API.Device.SpeedTestResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.SpaceX.API.Device.SpeedTestResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.SpaceX.API.Device.SpeedTestResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.SpaceX.API.Device.SpeedTestResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.SpaceX.API.Device.SpeedTestResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code SpaceX.API.Device.SpeedTestResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:SpaceX.API.Device.SpeedTestResponse)
      com.SpaceX.API.Device.SpeedTestResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.SpaceX.API.Device.DeviceProto.internal_static_SpaceX_API_Device_SpeedTestResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.SpaceX.API.Device.DeviceProto.internal_static_SpaceX_API_Device_SpeedTestResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.SpaceX.API.Device.SpeedTestResponse.class, com.SpaceX.API.Device.SpeedTestResponse.Builder.class);
    }

    // Construct using com.SpaceX.API.Device.SpeedTestResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getRouterSpeedtestFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      downloadBps_ = 0F;
      uploadBps_ = 0F;
      latencyS_ = 0F;
      downloadMbps_ = 0F;
      uploadMbps_ = 0F;
      latencyMs_ = 0F;
      routerSpeedtest_ = null;
      if (routerSpeedtestBuilder_ != null) {
        routerSpeedtestBuilder_.dispose();
        routerSpeedtestBuilder_ = null;
      }
      downloadMbps1TcpConn_ = 0F;
      uploadMbps1TcpConn_ = 0F;
      downloadMbps4TcpConn_ = 0F;
      uploadMbps4TcpConn_ = 0F;
      downloadMbps16TcpConn_ = 0F;
      uploadMbps16TcpConn_ = 0F;
      downloadMbps64TcpConn_ = 0F;
      uploadMbps64TcpConn_ = 0F;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.SpaceX.API.Device.DeviceProto.internal_static_SpaceX_API_Device_SpeedTestResponse_descriptor;
    }

    @java.lang.Override
    public com.SpaceX.API.Device.SpeedTestResponse getDefaultInstanceForType() {
      return com.SpaceX.API.Device.SpeedTestResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.SpaceX.API.Device.SpeedTestResponse build() {
      com.SpaceX.API.Device.SpeedTestResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.SpaceX.API.Device.SpeedTestResponse buildPartial() {
      com.SpaceX.API.Device.SpeedTestResponse result = new com.SpaceX.API.Device.SpeedTestResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.SpaceX.API.Device.SpeedTestResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.downloadBps_ = downloadBps_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.uploadBps_ = uploadBps_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.latencyS_ = latencyS_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.downloadMbps_ = downloadMbps_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.uploadMbps_ = uploadMbps_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.latencyMs_ = latencyMs_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.routerSpeedtest_ = routerSpeedtestBuilder_ == null
            ? routerSpeedtest_
            : routerSpeedtestBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.downloadMbps1TcpConn_ = downloadMbps1TcpConn_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.uploadMbps1TcpConn_ = uploadMbps1TcpConn_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.downloadMbps4TcpConn_ = downloadMbps4TcpConn_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.uploadMbps4TcpConn_ = uploadMbps4TcpConn_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.downloadMbps16TcpConn_ = downloadMbps16TcpConn_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.uploadMbps16TcpConn_ = uploadMbps16TcpConn_;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.downloadMbps64TcpConn_ = downloadMbps64TcpConn_;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.uploadMbps64TcpConn_ = uploadMbps64TcpConn_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.SpaceX.API.Device.SpeedTestResponse) {
        return mergeFrom((com.SpaceX.API.Device.SpeedTestResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.SpaceX.API.Device.SpeedTestResponse other) {
      if (other == com.SpaceX.API.Device.SpeedTestResponse.getDefaultInstance()) return this;
      if (other.getDownloadBps() != 0F) {
        setDownloadBps(other.getDownloadBps());
      }
      if (other.getUploadBps() != 0F) {
        setUploadBps(other.getUploadBps());
      }
      if (other.getLatencyS() != 0F) {
        setLatencyS(other.getLatencyS());
      }
      if (other.getDownloadMbps() != 0F) {
        setDownloadMbps(other.getDownloadMbps());
      }
      if (other.getUploadMbps() != 0F) {
        setUploadMbps(other.getUploadMbps());
      }
      if (other.getLatencyMs() != 0F) {
        setLatencyMs(other.getLatencyMs());
      }
      if (other.hasRouterSpeedtest()) {
        mergeRouterSpeedtest(other.getRouterSpeedtest());
      }
      if (other.getDownloadMbps1TcpConn() != 0F) {
        setDownloadMbps1TcpConn(other.getDownloadMbps1TcpConn());
      }
      if (other.getUploadMbps1TcpConn() != 0F) {
        setUploadMbps1TcpConn(other.getUploadMbps1TcpConn());
      }
      if (other.getDownloadMbps4TcpConn() != 0F) {
        setDownloadMbps4TcpConn(other.getDownloadMbps4TcpConn());
      }
      if (other.getUploadMbps4TcpConn() != 0F) {
        setUploadMbps4TcpConn(other.getUploadMbps4TcpConn());
      }
      if (other.getDownloadMbps16TcpConn() != 0F) {
        setDownloadMbps16TcpConn(other.getDownloadMbps16TcpConn());
      }
      if (other.getUploadMbps16TcpConn() != 0F) {
        setUploadMbps16TcpConn(other.getUploadMbps16TcpConn());
      }
      if (other.getDownloadMbps64TcpConn() != 0F) {
        setDownloadMbps64TcpConn(other.getDownloadMbps64TcpConn());
      }
      if (other.getUploadMbps64TcpConn() != 0F) {
        setUploadMbps64TcpConn(other.getUploadMbps64TcpConn());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              downloadBps_ = input.readFloat();
              bitField0_ |= 0x00000001;
              break;
            } // case 13
            case 21: {
              uploadBps_ = input.readFloat();
              bitField0_ |= 0x00000002;
              break;
            } // case 21
            case 29: {
              latencyS_ = input.readFloat();
              bitField0_ |= 0x00000004;
              break;
            } // case 29
            case 37: {
              downloadMbps_ = input.readFloat();
              bitField0_ |= 0x00000008;
              break;
            } // case 37
            case 45: {
              uploadMbps_ = input.readFloat();
              bitField0_ |= 0x00000010;
              break;
            } // case 45
            case 53: {
              latencyMs_ = input.readFloat();
              bitField0_ |= 0x00000020;
              break;
            } // case 53
            case 61: {
              downloadMbps1TcpConn_ = input.readFloat();
              bitField0_ |= 0x00000080;
              break;
            } // case 61
            case 69: {
              uploadMbps1TcpConn_ = input.readFloat();
              bitField0_ |= 0x00000100;
              break;
            } // case 69
            case 77: {
              downloadMbps4TcpConn_ = input.readFloat();
              bitField0_ |= 0x00000200;
              break;
            } // case 77
            case 85: {
              uploadMbps4TcpConn_ = input.readFloat();
              bitField0_ |= 0x00000400;
              break;
            } // case 85
            case 93: {
              downloadMbps16TcpConn_ = input.readFloat();
              bitField0_ |= 0x00000800;
              break;
            } // case 93
            case 101: {
              uploadMbps16TcpConn_ = input.readFloat();
              bitField0_ |= 0x00001000;
              break;
            } // case 101
            case 109: {
              downloadMbps64TcpConn_ = input.readFloat();
              bitField0_ |= 0x00002000;
              break;
            } // case 109
            case 117: {
              uploadMbps64TcpConn_ = input.readFloat();
              bitField0_ |= 0x00004000;
              break;
            } // case 117
            case 122: {
              input.readMessage(
                  getRouterSpeedtestFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 122
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private float downloadBps_ ;
    /**
     * <code>float download_bps = 1 [json_name = "downloadBps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.download_bps is deprecated.
     *     See spacex/api/device/device.proto;l=539
     * @return The downloadBps.
     */
    @java.lang.Override
    @java.lang.Deprecated public float getDownloadBps() {
      return downloadBps_;
    }
    /**
     * <code>float download_bps = 1 [json_name = "downloadBps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.download_bps is deprecated.
     *     See spacex/api/device/device.proto;l=539
     * @param value The downloadBps to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setDownloadBps(float value) {

      downloadBps_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>float download_bps = 1 [json_name = "downloadBps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.download_bps is deprecated.
     *     See spacex/api/device/device.proto;l=539
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearDownloadBps() {
      bitField0_ = (bitField0_ & ~0x00000001);
      downloadBps_ = 0F;
      onChanged();
      return this;
    }

    private float uploadBps_ ;
    /**
     * <code>float upload_bps = 2 [json_name = "uploadBps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.upload_bps is deprecated.
     *     See spacex/api/device/device.proto;l=541
     * @return The uploadBps.
     */
    @java.lang.Override
    @java.lang.Deprecated public float getUploadBps() {
      return uploadBps_;
    }
    /**
     * <code>float upload_bps = 2 [json_name = "uploadBps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.upload_bps is deprecated.
     *     See spacex/api/device/device.proto;l=541
     * @param value The uploadBps to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setUploadBps(float value) {

      uploadBps_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>float upload_bps = 2 [json_name = "uploadBps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.upload_bps is deprecated.
     *     See spacex/api/device/device.proto;l=541
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearUploadBps() {
      bitField0_ = (bitField0_ & ~0x00000002);
      uploadBps_ = 0F;
      onChanged();
      return this;
    }

    private float latencyS_ ;
    /**
     * <code>float latency_s = 3 [json_name = "latencyS", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.latency_s is deprecated.
     *     See spacex/api/device/device.proto;l=543
     * @return The latencyS.
     */
    @java.lang.Override
    @java.lang.Deprecated public float getLatencyS() {
      return latencyS_;
    }
    /**
     * <code>float latency_s = 3 [json_name = "latencyS", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.latency_s is deprecated.
     *     See spacex/api/device/device.proto;l=543
     * @param value The latencyS to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setLatencyS(float value) {

      latencyS_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>float latency_s = 3 [json_name = "latencyS", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.latency_s is deprecated.
     *     See spacex/api/device/device.proto;l=543
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearLatencyS() {
      bitField0_ = (bitField0_ & ~0x00000004);
      latencyS_ = 0F;
      onChanged();
      return this;
    }

    private float downloadMbps_ ;
    /**
     * <code>float download_mbps = 4 [json_name = "downloadMbps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.download_mbps is deprecated.
     *     See spacex/api/device/device.proto;l=545
     * @return The downloadMbps.
     */
    @java.lang.Override
    @java.lang.Deprecated public float getDownloadMbps() {
      return downloadMbps_;
    }
    /**
     * <code>float download_mbps = 4 [json_name = "downloadMbps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.download_mbps is deprecated.
     *     See spacex/api/device/device.proto;l=545
     * @param value The downloadMbps to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setDownloadMbps(float value) {

      downloadMbps_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>float download_mbps = 4 [json_name = "downloadMbps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.download_mbps is deprecated.
     *     See spacex/api/device/device.proto;l=545
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearDownloadMbps() {
      bitField0_ = (bitField0_ & ~0x00000008);
      downloadMbps_ = 0F;
      onChanged();
      return this;
    }

    private float uploadMbps_ ;
    /**
     * <code>float upload_mbps = 5 [json_name = "uploadMbps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.upload_mbps is deprecated.
     *     See spacex/api/device/device.proto;l=547
     * @return The uploadMbps.
     */
    @java.lang.Override
    @java.lang.Deprecated public float getUploadMbps() {
      return uploadMbps_;
    }
    /**
     * <code>float upload_mbps = 5 [json_name = "uploadMbps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.upload_mbps is deprecated.
     *     See spacex/api/device/device.proto;l=547
     * @param value The uploadMbps to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setUploadMbps(float value) {

      uploadMbps_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>float upload_mbps = 5 [json_name = "uploadMbps", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.upload_mbps is deprecated.
     *     See spacex/api/device/device.proto;l=547
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearUploadMbps() {
      bitField0_ = (bitField0_ & ~0x00000010);
      uploadMbps_ = 0F;
      onChanged();
      return this;
    }

    private float latencyMs_ ;
    /**
     * <code>float latency_ms = 6 [json_name = "latencyMs", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.latency_ms is deprecated.
     *     See spacex/api/device/device.proto;l=549
     * @return The latencyMs.
     */
    @java.lang.Override
    @java.lang.Deprecated public float getLatencyMs() {
      return latencyMs_;
    }
    /**
     * <code>float latency_ms = 6 [json_name = "latencyMs", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.latency_ms is deprecated.
     *     See spacex/api/device/device.proto;l=549
     * @param value The latencyMs to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setLatencyMs(float value) {

      latencyMs_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>float latency_ms = 6 [json_name = "latencyMs", deprecated = true];</code>
     * @deprecated SpaceX.API.Device.SpeedTestResponse.latency_ms is deprecated.
     *     See spacex/api/device/device.proto;l=549
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearLatencyMs() {
      bitField0_ = (bitField0_ & ~0x00000020);
      latencyMs_ = 0F;
      onChanged();
      return this;
    }

    private com.SpaceX.API.Device.SpeedTestStats routerSpeedtest_;
    private com.google.protobuf.SingleFieldBuilder<
        com.SpaceX.API.Device.SpeedTestStats, com.SpaceX.API.Device.SpeedTestStats.Builder, com.SpaceX.API.Device.SpeedTestStatsOrBuilder> routerSpeedtestBuilder_;
    /**
     * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
     * @return Whether the routerSpeedtest field is set.
     */
    public boolean hasRouterSpeedtest() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
     * @return The routerSpeedtest.
     */
    public com.SpaceX.API.Device.SpeedTestStats getRouterSpeedtest() {
      if (routerSpeedtestBuilder_ == null) {
        return routerSpeedtest_ == null ? com.SpaceX.API.Device.SpeedTestStats.getDefaultInstance() : routerSpeedtest_;
      } else {
        return routerSpeedtestBuilder_.getMessage();
      }
    }
    /**
     * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
     */
    public Builder setRouterSpeedtest(com.SpaceX.API.Device.SpeedTestStats value) {
      if (routerSpeedtestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        routerSpeedtest_ = value;
      } else {
        routerSpeedtestBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
     */
    public Builder setRouterSpeedtest(
        com.SpaceX.API.Device.SpeedTestStats.Builder builderForValue) {
      if (routerSpeedtestBuilder_ == null) {
        routerSpeedtest_ = builderForValue.build();
      } else {
        routerSpeedtestBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
     */
    public Builder mergeRouterSpeedtest(com.SpaceX.API.Device.SpeedTestStats value) {
      if (routerSpeedtestBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          routerSpeedtest_ != null &&
          routerSpeedtest_ != com.SpaceX.API.Device.SpeedTestStats.getDefaultInstance()) {
          getRouterSpeedtestBuilder().mergeFrom(value);
        } else {
          routerSpeedtest_ = value;
        }
      } else {
        routerSpeedtestBuilder_.mergeFrom(value);
      }
      if (routerSpeedtest_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
     */
    public Builder clearRouterSpeedtest() {
      bitField0_ = (bitField0_ & ~0x00000040);
      routerSpeedtest_ = null;
      if (routerSpeedtestBuilder_ != null) {
        routerSpeedtestBuilder_.dispose();
        routerSpeedtestBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
     */
    public com.SpaceX.API.Device.SpeedTestStats.Builder getRouterSpeedtestBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getRouterSpeedtestFieldBuilder().getBuilder();
    }
    /**
     * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
     */
    public com.SpaceX.API.Device.SpeedTestStatsOrBuilder getRouterSpeedtestOrBuilder() {
      if (routerSpeedtestBuilder_ != null) {
        return routerSpeedtestBuilder_.getMessageOrBuilder();
      } else {
        return routerSpeedtest_ == null ?
            com.SpaceX.API.Device.SpeedTestStats.getDefaultInstance() : routerSpeedtest_;
      }
    }
    /**
     * <code>.SpaceX.API.Device.SpeedTestStats router_speedtest = 15 [json_name = "routerSpeedtest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.SpaceX.API.Device.SpeedTestStats, com.SpaceX.API.Device.SpeedTestStats.Builder, com.SpaceX.API.Device.SpeedTestStatsOrBuilder> 
        getRouterSpeedtestFieldBuilder() {
      if (routerSpeedtestBuilder_ == null) {
        routerSpeedtestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.SpaceX.API.Device.SpeedTestStats, com.SpaceX.API.Device.SpeedTestStats.Builder, com.SpaceX.API.Device.SpeedTestStatsOrBuilder>(
                getRouterSpeedtest(),
                getParentForChildren(),
                isClean());
        routerSpeedtest_ = null;
      }
      return routerSpeedtestBuilder_;
    }

    private float downloadMbps1TcpConn_ ;
    /**
     * <code>float download_mbps_1_tcp_conn = 7 [json_name = "downloadMbps1TcpConn"];</code>
     * @return The downloadMbps1TcpConn.
     */
    @java.lang.Override
    public float getDownloadMbps1TcpConn() {
      return downloadMbps1TcpConn_;
    }
    /**
     * <code>float download_mbps_1_tcp_conn = 7 [json_name = "downloadMbps1TcpConn"];</code>
     * @param value The downloadMbps1TcpConn to set.
     * @return This builder for chaining.
     */
    public Builder setDownloadMbps1TcpConn(float value) {

      downloadMbps1TcpConn_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>float download_mbps_1_tcp_conn = 7 [json_name = "downloadMbps1TcpConn"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDownloadMbps1TcpConn() {
      bitField0_ = (bitField0_ & ~0x00000080);
      downloadMbps1TcpConn_ = 0F;
      onChanged();
      return this;
    }

    private float uploadMbps1TcpConn_ ;
    /**
     * <code>float upload_mbps_1_tcp_conn = 8 [json_name = "uploadMbps1TcpConn"];</code>
     * @return The uploadMbps1TcpConn.
     */
    @java.lang.Override
    public float getUploadMbps1TcpConn() {
      return uploadMbps1TcpConn_;
    }
    /**
     * <code>float upload_mbps_1_tcp_conn = 8 [json_name = "uploadMbps1TcpConn"];</code>
     * @param value The uploadMbps1TcpConn to set.
     * @return This builder for chaining.
     */
    public Builder setUploadMbps1TcpConn(float value) {

      uploadMbps1TcpConn_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>float upload_mbps_1_tcp_conn = 8 [json_name = "uploadMbps1TcpConn"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUploadMbps1TcpConn() {
      bitField0_ = (bitField0_ & ~0x00000100);
      uploadMbps1TcpConn_ = 0F;
      onChanged();
      return this;
    }

    private float downloadMbps4TcpConn_ ;
    /**
     * <code>float download_mbps_4_tcp_conn = 9 [json_name = "downloadMbps4TcpConn"];</code>
     * @return The downloadMbps4TcpConn.
     */
    @java.lang.Override
    public float getDownloadMbps4TcpConn() {
      return downloadMbps4TcpConn_;
    }
    /**
     * <code>float download_mbps_4_tcp_conn = 9 [json_name = "downloadMbps4TcpConn"];</code>
     * @param value The downloadMbps4TcpConn to set.
     * @return This builder for chaining.
     */
    public Builder setDownloadMbps4TcpConn(float value) {

      downloadMbps4TcpConn_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <code>float download_mbps_4_tcp_conn = 9 [json_name = "downloadMbps4TcpConn"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDownloadMbps4TcpConn() {
      bitField0_ = (bitField0_ & ~0x00000200);
      downloadMbps4TcpConn_ = 0F;
      onChanged();
      return this;
    }

    private float uploadMbps4TcpConn_ ;
    /**
     * <code>float upload_mbps_4_tcp_conn = 10 [json_name = "uploadMbps4TcpConn"];</code>
     * @return The uploadMbps4TcpConn.
     */
    @java.lang.Override
    public float getUploadMbps4TcpConn() {
      return uploadMbps4TcpConn_;
    }
    /**
     * <code>float upload_mbps_4_tcp_conn = 10 [json_name = "uploadMbps4TcpConn"];</code>
     * @param value The uploadMbps4TcpConn to set.
     * @return This builder for chaining.
     */
    public Builder setUploadMbps4TcpConn(float value) {

      uploadMbps4TcpConn_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <code>float upload_mbps_4_tcp_conn = 10 [json_name = "uploadMbps4TcpConn"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUploadMbps4TcpConn() {
      bitField0_ = (bitField0_ & ~0x00000400);
      uploadMbps4TcpConn_ = 0F;
      onChanged();
      return this;
    }

    private float downloadMbps16TcpConn_ ;
    /**
     * <code>float download_mbps_16_tcp_conn = 11 [json_name = "downloadMbps16TcpConn"];</code>
     * @return The downloadMbps16TcpConn.
     */
    @java.lang.Override
    public float getDownloadMbps16TcpConn() {
      return downloadMbps16TcpConn_;
    }
    /**
     * <code>float download_mbps_16_tcp_conn = 11 [json_name = "downloadMbps16TcpConn"];</code>
     * @param value The downloadMbps16TcpConn to set.
     * @return This builder for chaining.
     */
    public Builder setDownloadMbps16TcpConn(float value) {

      downloadMbps16TcpConn_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <code>float download_mbps_16_tcp_conn = 11 [json_name = "downloadMbps16TcpConn"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDownloadMbps16TcpConn() {
      bitField0_ = (bitField0_ & ~0x00000800);
      downloadMbps16TcpConn_ = 0F;
      onChanged();
      return this;
    }

    private float uploadMbps16TcpConn_ ;
    /**
     * <code>float upload_mbps_16_tcp_conn = 12 [json_name = "uploadMbps16TcpConn"];</code>
     * @return The uploadMbps16TcpConn.
     */
    @java.lang.Override
    public float getUploadMbps16TcpConn() {
      return uploadMbps16TcpConn_;
    }
    /**
     * <code>float upload_mbps_16_tcp_conn = 12 [json_name = "uploadMbps16TcpConn"];</code>
     * @param value The uploadMbps16TcpConn to set.
     * @return This builder for chaining.
     */
    public Builder setUploadMbps16TcpConn(float value) {

      uploadMbps16TcpConn_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <code>float upload_mbps_16_tcp_conn = 12 [json_name = "uploadMbps16TcpConn"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUploadMbps16TcpConn() {
      bitField0_ = (bitField0_ & ~0x00001000);
      uploadMbps16TcpConn_ = 0F;
      onChanged();
      return this;
    }

    private float downloadMbps64TcpConn_ ;
    /**
     * <code>float download_mbps_64_tcp_conn = 13 [json_name = "downloadMbps64TcpConn"];</code>
     * @return The downloadMbps64TcpConn.
     */
    @java.lang.Override
    public float getDownloadMbps64TcpConn() {
      return downloadMbps64TcpConn_;
    }
    /**
     * <code>float download_mbps_64_tcp_conn = 13 [json_name = "downloadMbps64TcpConn"];</code>
     * @param value The downloadMbps64TcpConn to set.
     * @return This builder for chaining.
     */
    public Builder setDownloadMbps64TcpConn(float value) {

      downloadMbps64TcpConn_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <code>float download_mbps_64_tcp_conn = 13 [json_name = "downloadMbps64TcpConn"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDownloadMbps64TcpConn() {
      bitField0_ = (bitField0_ & ~0x00002000);
      downloadMbps64TcpConn_ = 0F;
      onChanged();
      return this;
    }

    private float uploadMbps64TcpConn_ ;
    /**
     * <code>float upload_mbps_64_tcp_conn = 14 [json_name = "uploadMbps64TcpConn"];</code>
     * @return The uploadMbps64TcpConn.
     */
    @java.lang.Override
    public float getUploadMbps64TcpConn() {
      return uploadMbps64TcpConn_;
    }
    /**
     * <code>float upload_mbps_64_tcp_conn = 14 [json_name = "uploadMbps64TcpConn"];</code>
     * @param value The uploadMbps64TcpConn to set.
     * @return This builder for chaining.
     */
    public Builder setUploadMbps64TcpConn(float value) {

      uploadMbps64TcpConn_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     * <code>float upload_mbps_64_tcp_conn = 14 [json_name = "uploadMbps64TcpConn"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUploadMbps64TcpConn() {
      bitField0_ = (bitField0_ & ~0x00004000);
      uploadMbps64TcpConn_ = 0F;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:SpaceX.API.Device.SpeedTestResponse)
  }

  // @@protoc_insertion_point(class_scope:SpaceX.API.Device.SpeedTestResponse)
  private static final com.SpaceX.API.Device.SpeedTestResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.SpaceX.API.Device.SpeedTestResponse();
  }

  public static com.SpaceX.API.Device.SpeedTestResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SpeedTestResponse>
      PARSER = new com.google.protobuf.AbstractParser<SpeedTestResponse>() {
    @java.lang.Override
    public SpeedTestResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SpeedTestResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SpeedTestResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.SpaceX.API.Device.SpeedTestResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


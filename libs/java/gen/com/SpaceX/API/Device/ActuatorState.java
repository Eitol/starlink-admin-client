// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/dish.proto
// Protobuf Java Version: 4.28.3

package com.SpaceX.API.Device;

/**
 * Protobuf enum {@code SpaceX.API.Device.ActuatorState}
 */
public enum ActuatorState
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ACTUATOR_STATE_IDLE = 0;</code>
   */
  ACTUATOR_STATE_IDLE(0),
  /**
   * <code>ACTUATOR_STATE_FULL_TILT = 1;</code>
   */
  ACTUATOR_STATE_FULL_TILT(1),
  /**
   * <code>ACTUATOR_STATE_ROTATE = 2;</code>
   */
  ACTUATOR_STATE_ROTATE(2),
  /**
   * <code>ACTUATOR_STATE_TILT = 3;</code>
   */
  ACTUATOR_STATE_TILT(3),
  /**
   * <code>ACTUATOR_STATE_UNWRAP_POSITIVE = 4;</code>
   */
  ACTUATOR_STATE_UNWRAP_POSITIVE(4),
  /**
   * <code>ACTUATOR_STATE_UNWRAP_NEGATIVE = 5;</code>
   */
  ACTUATOR_STATE_UNWRAP_NEGATIVE(5),
  /**
   * <code>ACTUATOR_STATE_TILT_TO_STOWED = 6;</code>
   */
  ACTUATOR_STATE_TILT_TO_STOWED(6),
  /**
   * <code>ACTUATOR_STATE_FAULTED = 7;</code>
   */
  ACTUATOR_STATE_FAULTED(7),
  /**
   * <code>ACTUATOR_STATE_WAIT_TIL_STATIC = 8;</code>
   */
  ACTUATOR_STATE_WAIT_TIL_STATIC(8),
  /**
   * <code>ACTUATOR_STATE_DRIVE_TO_MOBILE_POSITION = 9;</code>
   */
  ACTUATOR_STATE_DRIVE_TO_MOBILE_POSITION(9),
  /**
   * <code>ACTUATOR_STATE_MOBILE_WAIT = 10;</code>
   */
  ACTUATOR_STATE_MOBILE_WAIT(10),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      ActuatorState.class.getName());
  }
  /**
   * <code>ACTUATOR_STATE_IDLE = 0;</code>
   */
  public static final int ACTUATOR_STATE_IDLE_VALUE = 0;
  /**
   * <code>ACTUATOR_STATE_FULL_TILT = 1;</code>
   */
  public static final int ACTUATOR_STATE_FULL_TILT_VALUE = 1;
  /**
   * <code>ACTUATOR_STATE_ROTATE = 2;</code>
   */
  public static final int ACTUATOR_STATE_ROTATE_VALUE = 2;
  /**
   * <code>ACTUATOR_STATE_TILT = 3;</code>
   */
  public static final int ACTUATOR_STATE_TILT_VALUE = 3;
  /**
   * <code>ACTUATOR_STATE_UNWRAP_POSITIVE = 4;</code>
   */
  public static final int ACTUATOR_STATE_UNWRAP_POSITIVE_VALUE = 4;
  /**
   * <code>ACTUATOR_STATE_UNWRAP_NEGATIVE = 5;</code>
   */
  public static final int ACTUATOR_STATE_UNWRAP_NEGATIVE_VALUE = 5;
  /**
   * <code>ACTUATOR_STATE_TILT_TO_STOWED = 6;</code>
   */
  public static final int ACTUATOR_STATE_TILT_TO_STOWED_VALUE = 6;
  /**
   * <code>ACTUATOR_STATE_FAULTED = 7;</code>
   */
  public static final int ACTUATOR_STATE_FAULTED_VALUE = 7;
  /**
   * <code>ACTUATOR_STATE_WAIT_TIL_STATIC = 8;</code>
   */
  public static final int ACTUATOR_STATE_WAIT_TIL_STATIC_VALUE = 8;
  /**
   * <code>ACTUATOR_STATE_DRIVE_TO_MOBILE_POSITION = 9;</code>
   */
  public static final int ACTUATOR_STATE_DRIVE_TO_MOBILE_POSITION_VALUE = 9;
  /**
   * <code>ACTUATOR_STATE_MOBILE_WAIT = 10;</code>
   */
  public static final int ACTUATOR_STATE_MOBILE_WAIT_VALUE = 10;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ActuatorState valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ActuatorState forNumber(int value) {
    switch (value) {
      case 0: return ACTUATOR_STATE_IDLE;
      case 1: return ACTUATOR_STATE_FULL_TILT;
      case 2: return ACTUATOR_STATE_ROTATE;
      case 3: return ACTUATOR_STATE_TILT;
      case 4: return ACTUATOR_STATE_UNWRAP_POSITIVE;
      case 5: return ACTUATOR_STATE_UNWRAP_NEGATIVE;
      case 6: return ACTUATOR_STATE_TILT_TO_STOWED;
      case 7: return ACTUATOR_STATE_FAULTED;
      case 8: return ACTUATOR_STATE_WAIT_TIL_STATIC;
      case 9: return ACTUATOR_STATE_DRIVE_TO_MOBILE_POSITION;
      case 10: return ACTUATOR_STATE_MOBILE_WAIT;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ActuatorState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ActuatorState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ActuatorState>() {
          public ActuatorState findValueByNumber(int number) {
            return ActuatorState.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.SpaceX.API.Device.DishProto.getDescriptor().getEnumTypes().get(4);
  }

  private static final ActuatorState[] VALUES = values();

  public static ActuatorState valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ActuatorState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:SpaceX.API.Device.ActuatorState)
}


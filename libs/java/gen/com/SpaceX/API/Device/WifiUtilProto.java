// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spacex/api/device/wifi_util.proto
// Protobuf Java Version: 4.28.3

package com.SpaceX.API.Device;

public final class WifiUtilProto {
  private WifiUtilProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      WifiUtilProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_InflatedBasicServiceSet_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_InflatedBasicServiceSet_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_DhcpLease_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_DhcpLease_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_DhcpServer_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_DhcpServer_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_RadiusStatsMap_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_RadiusStatsMap_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_RadiusStatsMap_RadiusStatsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_RadiusStatsMap_RadiusStatsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_RadiusStatsMap_RadiusStats_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_RadiusStatsMap_RadiusStats_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_PoeStats_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_PoeStats_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpaceX_API_Device_WifiSoftwareUpdateStats_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpaceX_API_Device_WifiSoftwareUpdateStats_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!spacex/api/device/wifi_util.proto\022\021Spa" +
      "ceX.API.Device\"\362\001\n\027InflatedBasicServiceS" +
      "et\022\024\n\005bssid\030\001 \001(\tR\005bssid\022\022\n\004ssid\030\002 \001(\tR\004" +
      "ssid\022\027\n\007mac_lan\030\003 \001(\tR\006macLan\022\035\n\niface_n" +
      "ame\030\004 \001(\tR\tifaceName\022;\n\niface_type\030\005 \001(\016" +
      "2\034.SpaceX.API.Device.IfaceTypeR\tifaceTyp" +
      "e\022\030\n\007channel\030\006 \001(\rR\007channel\022\036\n\npreferenc" +
      "e\030\007 \001(\rR\npreference\"\277\001\n\tDhcpLease\022\035\n\nip_" +
      "address\030\001 \001(\tR\tipAddress\022\037\n\013mac_address\030" +
      "\002 \001(\tR\nmacAddress\022\032\n\010hostname\030\003 \001(\tR\010hos" +
      "tname\022!\n\014expires_time\030\004 \001(\tR\013expiresTime" +
      "\022\026\n\006active\030\005 \001(\010R\006active\022\033\n\tclient_id\030\006 " +
      "\001(\rR\010clientId\"r\n\nDhcpServer\022\026\n\006domain\030\001 " +
      "\001(\tR\006domain\022\026\n\006subnet\030\002 \001(\tR\006subnet\0224\n\006l" +
      "eases\030\003 \003(\0132\034.SpaceX.API.Device.DhcpLeas" +
      "eR\006leases\"\350\004\n\016RadiusStatsMap\022U\n\014radius_s" +
      "tats\030\001 \003(\01322.SpaceX.API.Device.RadiusSta" +
      "tsMap.RadiusStatsEntryR\013radiusStats\032m\n\020R" +
      "adiusStatsEntry\022\020\n\003key\030\001 \001(\tR\003key\022C\n\005val" +
      "ue\030\002 \001(\0132-.SpaceX.API.Device.RadiusStats" +
      "Map.RadiusStatsR\005value:\0028\001\032\217\003\n\013RadiusSta" +
      "ts\022\035\n\niface_name\030\001 \001(\tR\tifaceName\022#\n\rtim" +
      "eout_count\030\002 \001(\rR\014timeoutCount\0220\n\024access" +
      "_request_count\030\003 \001(\rR\022accessRequestCount" +
      "\022.\n\023access_accept_count\030\004 \001(\rR\021accessAcc" +
      "eptCount\022.\n\023access_reject_count\030\005 \001(\rR\021a" +
      "ccessRejectCount\0224\n\026access_challenge_cou" +
      "nt\030\006 \001(\rR\024accessChallengeCount\0228\n\030accoun" +
      "ting_request_count\030\007 \001(\rR\026accountingRequ" +
      "estCount\022:\n\031accounting_response_count\030\010 " +
      "\001(\rR\027accountingResponseCount\"\315\002\n\010PoeStat" +
      "s\0228\n\tpoe_state\030\001 \001(\0162\033.SpaceX.API.Device" +
      ".PoeStateR\010poeState\022\033\n\tpoe_power\030\002 \001(\002R\010" +
      "poePower\022=\n\033poe_faults_fast_overcurrent\030" +
      "\003 \001(\rR\030poeFaultsFastOvercurrent\022=\n\033poe_f" +
      "aults_slow_overcurrent\030\004 \001(\rR\030poeFaultsS" +
      "lowOvercurrent\0224\n\026poe_faults_overvoltage" +
      "\030\005 \001(\rR\024poeFaultsOvervoltage\0226\n\027poe_faul" +
      "ts_undervoltage\030\006 \001(\rR\025poeFaultsUndervol" +
      "tage\"\343\001\n\027WifiSoftwareUpdateStats\022@\n\005stat" +
      "e\030\001 \001(\0162*.SpaceX.API.Device.WifiSoftware" +
      "UpdateStateR\005state\022<\n\032software_download_" +
      "progress\030\002 \001(\002R\030softwareDownloadProgress" +
      "\022H\n!seconds_since_get_target_versions\030\003 " +
      "\001(\002R\035secondsSinceGetTargetVersions*\204\001\n\tI" +
      "faceType\022\026\n\022IFACE_TYPE_UNKNOWN\020\000\022\022\n\016IFAC" +
      "E_TYPE_ETH\020\001\022\026\n\022IFACE_TYPE_RF_2GHZ\020\002\022\026\n\022" +
      "IFACE_TYPE_RF_5GHZ\020\005\022\033\n\027IFACE_TYPE_RF_5G" +
      "HZ_HIGH\020\006*\230\001\n\014TxPowerLevel\022\026\n\022TX_POWER_L" +
      "EVEL_100\020\000\022\025\n\021TX_POWER_LEVEL_80\020\001\022\025\n\021TX_" +
      "POWER_LEVEL_50\020\002\022\025\n\021TX_POWER_LEVEL_25\020\003\022" +
      "\025\n\021TX_POWER_LEVEL_12\020\004\022\024\n\020TX_POWER_LEVEL" +
      "_6\020\005*\247\001\n\010PoeState\022\026\n\022POE_STATE_DISABLED\020" +
      "\000\022\031\n\025POE_STATE_NEGOTIATING\020\001\022\027\n\023POE_STAT" +
      "E_ON_RAMPUP\020\002\022\020\n\014POE_STATE_ON\020\003\022!\n\035POE_S" +
      "TATE_WATER_DETECT_RAMPUP\020\004\022\032\n\026POE_STATE_" +
      "WATER_DETECT\020\005*\235\001\n\010PoeFault\022\036\n\032POE_FAULT" +
      "_FAST_OVERCURRENT\020\000\022\036\n\032POE_FAULT_SLOW_OV" +
      "ERCURRENT\020\001\022\032\n\026POE_FAULT_UNDERCURRENT\020\002\022" +
      "\031\n\025POE_FAULT_OVERVOLTAGE\020\003\022\032\n\026POE_FAULT_" +
      "UNDERVOLTAGE\020\004*\204\002\n\010WifiMode\022\025\n\021WIFI_MODE" +
      "_DEFAULT\020\000\022\n\n\006A_ONLY\020\001\022\n\n\006B_ONLY\020\002\022\n\n\006G_" +
      "ONLY\020\003\022\n\n\006N_ONLY\020\004\022\r\n\tB_G_MIXED\020\005\022\r\n\tA_N" +
      "_MIXED\020\006\022\r\n\tG_N_MIXED\020\007\022\017\n\013B_G_N_MIXED\020\010" +
      "\022\021\n\rA_AN_AC_MIXED\020\t\022\017\n\013AN_AC_MIXED\020\n\022\022\n\016" +
      "B_G_N_AX_MIXED\020\013\022\024\n\020A_AN_AC_AX_MIXED\020\014\022\020" +
      "\n\014A_N_AC_MIXED\020\r\022\023\n\017A_N_AC_AX_MIXED\020\016*U\n" +
      "\014WifiSecurity\022\031\n\025WIFI_SECURITY_UNKNOWN\020\000" +
      "\022\010\n\004OPEN\020\001\022\010\n\004WPA2\020\002\022\010\n\004WPA3\020\003\022\014\n\010WPA2WP" +
      "A3\020\004*/\n\010Protocol\022\007\n\003TCP\020\000\022\007\n\003UDP\020\001\022\007\n\003TL" +
      "S\020\002\022\010\n\004DTLS\020\003*\362\002\n\027WifiSoftwareUpdateStat" +
      "e\022\013\n\007NOT_RUN\020\000\022\032\n\026GETTING_TARGET_VERSION" +
      "\020\001\022\034\n\030DOWNLOADING_UPDATE_IMAGE\020\002\022\014\n\010FLAS" +
      "HING\020\003\022\026\n\022NO_UPDATE_REQUIRED\020\004\022\022\n\016REBOOT" +
      "_PENDING\020\005\022!\n\035GETTING_TARGET_VERSION_FAI" +
      "LED\020\006\022$\n GETTING_TARGET_VERSION_EXHAUSTE" +
      "D\020\007\022\025\n\021NO_VALID_ARTIFACT\020\010\022\024\n\020ILLEGAL_AR" +
      "TIFACT\020\t\022#\n\037DOWNLOADING_UPDATE_IMAGE_FAI" +
      "LED\020\n\022&\n\"DOWNLOADING_UPDATE_IMAGE_EXHAUS" +
      "TED\020\013\022\023\n\017FLASHING_FAILED\020\014B\327\001\n\025com.Space" +
      "X.API.DeviceB\rWifiUtilProtoP\001ZIgithub.co" +
      "m/Eitol/starlink-client/libs/golang/clie" +
      "nt/gen/spacex/api/device\242\002\003SAD\252\002\021SpaceX." +
      "API.Device\312\002\021SpaceX\\API\\Device\342\002\035SpaceX\\" +
      "API\\Device\\GPBMetadata\352\002\023SpaceX::API::De" +
      "viceb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_SpaceX_API_Device_InflatedBasicServiceSet_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SpaceX_API_Device_InflatedBasicServiceSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_InflatedBasicServiceSet_descriptor,
        new java.lang.String[] { "Bssid", "Ssid", "MacLan", "IfaceName", "IfaceType", "Channel", "Preference", });
    internal_static_SpaceX_API_Device_DhcpLease_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SpaceX_API_Device_DhcpLease_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_DhcpLease_descriptor,
        new java.lang.String[] { "IpAddress", "MacAddress", "Hostname", "ExpiresTime", "Active", "ClientId", });
    internal_static_SpaceX_API_Device_DhcpServer_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_SpaceX_API_Device_DhcpServer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_DhcpServer_descriptor,
        new java.lang.String[] { "Domain", "Subnet", "Leases", });
    internal_static_SpaceX_API_Device_RadiusStatsMap_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_SpaceX_API_Device_RadiusStatsMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_RadiusStatsMap_descriptor,
        new java.lang.String[] { "RadiusStats", });
    internal_static_SpaceX_API_Device_RadiusStatsMap_RadiusStatsEntry_descriptor =
      internal_static_SpaceX_API_Device_RadiusStatsMap_descriptor.getNestedTypes().get(0);
    internal_static_SpaceX_API_Device_RadiusStatsMap_RadiusStatsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_RadiusStatsMap_RadiusStatsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_SpaceX_API_Device_RadiusStatsMap_RadiusStats_descriptor =
      internal_static_SpaceX_API_Device_RadiusStatsMap_descriptor.getNestedTypes().get(1);
    internal_static_SpaceX_API_Device_RadiusStatsMap_RadiusStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_RadiusStatsMap_RadiusStats_descriptor,
        new java.lang.String[] { "IfaceName", "TimeoutCount", "AccessRequestCount", "AccessAcceptCount", "AccessRejectCount", "AccessChallengeCount", "AccountingRequestCount", "AccountingResponseCount", });
    internal_static_SpaceX_API_Device_PoeStats_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_SpaceX_API_Device_PoeStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_PoeStats_descriptor,
        new java.lang.String[] { "PoeState", "PoePower", "PoeFaultsFastOvercurrent", "PoeFaultsSlowOvercurrent", "PoeFaultsOvervoltage", "PoeFaultsUndervoltage", });
    internal_static_SpaceX_API_Device_WifiSoftwareUpdateStats_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_SpaceX_API_Device_WifiSoftwareUpdateStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SpaceX_API_Device_WifiSoftwareUpdateStats_descriptor,
        new java.lang.String[] { "State", "SoftwareDownloadProgress", "SecondsSinceGetTargetVersions", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
